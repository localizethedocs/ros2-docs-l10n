# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Robotics
# This file is distributed under the same license as the ros2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ros2 documentation dashing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:4
msgid "Creating custom ROS 2 msg and srv files"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:6
msgid ""
"**Goal:** Define custom interface files (``.msg`` and ``.srv``) and use them "
"with Python and C++ nodes."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:8
msgid "**Tutorial level:** Beginner"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:10
msgid "**Time:** 20 minutes"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:14
msgid "Contents"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:17
msgid "Background"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:19
msgid ""
"In previous tutorials you utilized message and service interfaces to learn "
"about :ref:`topics <ROS2Topics>`, :ref:`services <ROS2Services>`, and simple "
"publisher/subscriber (:ref:`C++<CppPubSub>`/:ref:`Python<PyPubSub>`) and "
"service/client (:ref:`C++<CppSrvCli>`/:ref:`Python<PySrvCli>`) nodes. The "
"interfaces you used were predefined in those cases."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:22
msgid ""
"While it’s good practice to use predefined interface definitions, you will "
"probably need to define your own messages and services sometimes as well. "
"This tutorial will introduce you to the simplest method of creating custom "
"interface definitions."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:26
msgid "Prerequisites"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:28
msgid "You should have a :ref:`ROS 2 workspace <ROS2Workspace>`."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:30
msgid ""
"This tutorial also uses the packages created in the publisher/subscriber (:"
"ref:`C++ <CppPubSub>` and :ref:`Python<PyPubSub>`) and service/client  (:ref:"
"`C++ <CppSrvCli>` and :ref:`Python<PySrvCli>`) tutorials to try out the new "
"custom messages."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:33
msgid "Tasks"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:36
msgid "1 Create a new package"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:38
msgid ""
"For this tutorial you will be creating custom ``.msg`` and ``.srv`` files in "
"their own package, and then utilizing them in a separate package. Both "
"packages should be in the same workspace."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:41
msgid ""
"Since we will use the pub/sub and service/client packages created in earlier "
"tutorials, make sure you are in the same workspace as those packages "
"(``dev_ws/src``), and then run the following command to create a new package:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:43
msgid "ros2 pkg create --build-type ament_cmake tutorial_interfaces"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:47
msgid ""
"``tutorial_interfaces`` is the name of the new package. Note that it is a "
"CMake package; there currently isn’t a way to generate a ``.msg`` or ``."
"srv`` file in a pure Python package. You can create a custom interface in a "
"CMake package, and then use it in a Python node, which will be covered in "
"the last section."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:51
msgid ""
"It is good practice to keep ``.msg`` and ``.srv`` files in their own "
"directories within a package. Create the directories in ``dev_ws/src/"
"tutorial_interfaces``:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:54
msgid ""
"mkdir msg\n"
"\n"
"mkdir srv"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:61
msgid "2 Create custom definitions"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:64
msgid "2.1 msg definition"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:66
msgid ""
"In the ``tutorial_interfaces/msg`` directory you just created, make a new "
"file called ``Num.msg`` with one line of code declaring its data structure:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:68
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:178
msgid "int64 num"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:72
msgid ""
"This is your custom message that transfers a single 64-bit integer called "
"``num``."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:75
msgid "2.2 srv definition"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:77
msgid ""
"Back in the ``tutorial_interfaces/srv`` directory you just created, make a "
"new file called ``AddThreeInts.srv`` with the following request and response "
"structure:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:79
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:190
msgid ""
"int64 a\n"
"int64 b\n"
"int64 c\n"
"---\n"
"int64 sum"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:87
msgid ""
"This is your custom service that requests three integers named ``a``, ``b``, "
"and ``c``, and responds with an integer called ``sum``."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:90
msgid "3 ``CMakeLists.txt``"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:92
msgid ""
"To convert the interfaces you defined into language-specific code (like C++ "
"and Python) so that they can be used in those languages, add the following "
"lines to ``CMakeLists.txt``:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:94
msgid ""
"find_package(rosidl_default_generators REQUIRED)\n"
"\n"
"rosidl_generate_interfaces(${PROJECT_NAME}\n"
"  \"msg/Num.msg\"\n"
"  \"srv/AddThreeInts.srv\"\n"
" )"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:104
msgid "4 ``package.xml``"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:106
msgid ""
"Because the interfaces rely on ``rosidl_default_generators`` for generating "
"language-specific code, you need to declare a dependency on it. Add the "
"following lines to ``package.xml``"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:109
msgid ""
"<build_depend>rosidl_default_generators</build_depend>\n"
"\n"
"<exec_depend>rosidl_default_runtime</exec_depend>\n"
"\n"
"<member_of_group>rosidl_interface_packages</member_of_group>"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:118
msgid "5 Build the ``tutorial_interfaces`` package"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:120
msgid ""
"Now that all the parts of your custom interfaces package are in place, you "
"can build the package. In the root of your workspace (``~/dev_ws``), run the "
"following command:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:125
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:152
msgid "Linux"
msgstr "Linux"

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:127
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:133
msgid "colcon build --packages-select tutorial_interfaces"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:131
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:158
msgid "macOS"
msgstr "macOS"

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:137
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:164
msgid "Windows"
msgstr "Windows"

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:139
msgid "colcon build --merge-install --packages-select tutorial_interfaces"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:143
msgid "Now the interfaces will be discoverable by other ROS 2 packages."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:146
msgid "6 Confirm msg and srv creation"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:148
msgid ""
"In a new terminal, run the following command from within your workspace "
"(``dev_ws``) to source it:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:154
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:160
msgid ". install/setup.bash"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:166
msgid "call install/setup.bat"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:170
msgid ""
"Now you can confirm that your interface creation worked by using the ``ros2 "
"interface show`` command:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:172
msgid "ros2 msg show tutorial_interfaces/msg/Num"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:176
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:188
msgid "should return:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:182
msgid "And"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:184
msgid "ros2 srv show tutorial_interfaces/srv/AddThreeInts"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:199
msgid "7 Test the new interfaces"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:201
msgid ""
"For this step you can use the packages you created in previous tutorials. A "
"few simple modifications to the nodes, ``CMakeLists`` and ``package`` files "
"will allow you to use your new interfaces."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:205
msgid "7.1 Testing ``Num.msg`` with pub/sub"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:207
msgid ""
"With some slight modifications to the publisher/subscriber package created "
"in a previous tutorial (:ref:`C++ <CppPubSub>` or :ref:`Python <PyPubSub>`), "
"you can see ``Num.msg`` in action. Since you’ll be changing the standard "
"string msg to a numerical one, the output will be slightly different."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:210
msgid "Publisher:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:214
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:304
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:412
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:429
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:457
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:496
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:567
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:709
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:726
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:755
msgid "C++"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:216
msgid ""
"#include <chrono>\n"
"#include <memory>\n"
"\n"
"#include \"rclcpp/rclcpp.hpp\"\n"
"#include \"tutorial_interfaces/msg/num.hpp\"     // CHANGE\n"
"\n"
"using namespace std::chrono_literals;\n"
"\n"
"class MinimalPublisher : public rclcpp::Node\n"
"{\n"
"public:\n"
"  MinimalPublisher()\n"
"  : Node(\"minimal_publisher\"), count_(0)\n"
"  {\n"
"    publisher_ = this->create_publisher<tutorial_interfaces::msg::"
"Num>(\"topic\", 10);    // CHANGE\n"
"    timer_ = this->create_wall_timer(\n"
"      500ms, std::bind(&MinimalPublisher::timer_callback, this));\n"
"  }\n"
"\n"
"private:\n"
"  void timer_callback()\n"
"  {\n"
"    auto message = tutorial_interfaces::msg::"
"Num();                               // CHANGE\n"
"    message.num = this->count_++;                                        // "
"CHANGE\n"
"    RCLCPP_INFO(this->get_logger(), \"Publishing: '%d'\", message."
"num);    // CHANGE\n"
"    publisher_->publish(message);\n"
"  }\n"
"  rclcpp::TimerBase::SharedPtr timer_;\n"
"  rclcpp::Publisher<tutorial_interfaces::msg::Num>::SharedPtr "
"publisher_;         // CHANGE\n"
"  size_t count_;\n"
"};\n"
"\n"
"int main(int argc, char * argv[])\n"
"{\n"
"  rclcpp::init(argc, argv);\n"
"  rclcpp::spin(std::make_shared<MinimalPublisher>());\n"
"  rclcpp::shutdown();\n"
"  return 0;\n"
"}"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:258
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:340
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:418
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:441
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:467
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:529
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:620
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:715
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:739
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:765
msgid "Python"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:260
msgid ""
"import rclpy\n"
"from rclpy.node import Node\n"
"\n"
"from tutorial_interfaces.msg import Num    # CHANGE\n"
"\n"
"\n"
"class MinimalPublisher(Node):\n"
"\n"
"    def __init__(self):\n"
"        super().__init__('minimal_publisher')\n"
"        self.publisher_ = self.create_publisher(Num, 'topic', 10)     # "
"CHANGE\n"
"        timer_period = 0.5\n"
"        self.timer = self.create_timer(timer_period, self.timer_callback)\n"
"        self.i = 0\n"
"\n"
"    def timer_callback(self):\n"
"        msg = Num()                                           # CHANGE\n"
"        msg.num = self.i                                      # CHANGE\n"
"        self.publisher_.publish(msg)\n"
"        self.get_logger().info('Publishing: \"%d\"' % msg.num)  # CHANGE\n"
"        self.i += 1\n"
"\n"
"\n"
"def main(args=None):\n"
"    rclpy.init(args=args)\n"
"\n"
"    minimal_publisher = MinimalPublisher()\n"
"\n"
"    rclpy.spin(minimal_publisher)\n"
"\n"
"    minimal_publisher.destroy_node()\n"
"    rclpy.shutdown()\n"
"\n"
"\n"
"if __name__ == '__main__':\n"
"    main()"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:300
msgid "Subscriber:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:306
msgid ""
"#include <memory>\n"
"\n"
"#include \"rclcpp/rclcpp.hpp\"\n"
"#include \"tutorial_interfaces/msg/num.hpp\"     // CHANGE\n"
"using std::placeholders::_1;\n"
"\n"
"class MinimalSubscriber : public rclcpp::Node\n"
"{\n"
"public:\n"
"  MinimalSubscriber()\n"
"  : Node(\"minimal_subscriber\")\n"
"  {\n"
"    subscription_ = this->create_subscription<tutorial_interfaces::msg::"
"Num>(          // CHANGE\n"
"      \"topic\", 10, std::bind(&MinimalSubscriber::topic_callback, this, "
"_1));\n"
"  }\n"
"\n"
"private:\n"
"  void topic_callback(const tutorial_interfaces::msg::Num::SharedPtr msg) "
"const       // CHANGE\n"
"  {\n"
"    RCLCPP_INFO(this->get_logger(), \"I heard: '%d'\", msg-"
">num);              // CHANGE\n"
"  }\n"
"  rclcpp::Subscription<tutorial_interfaces::msg::Num>::SharedPtr "
"subscription_;       // CHANGE\n"
"};\n"
"\n"
"int main(int argc, char * argv[])\n"
"{\n"
"  rclcpp::init(argc, argv);\n"
"  rclcpp::spin(std::make_shared<MinimalSubscriber>());\n"
"  rclcpp::shutdown();\n"
"  return 0;\n"
"}"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:342
msgid ""
"import rclpy\n"
"from rclpy.node import Node\n"
"\n"
"from tutorial_interfaces.msg import Num        # CHANGE\n"
"\n"
"\n"
"class MinimalSubscriber(Node):\n"
"\n"
"    def __init__(self):\n"
"        super().__init__('minimal_subscriber')\n"
"        self.subscription = self.create_subscription(\n"
"            Num,                                              # CHANGE\n"
"            'topic',\n"
"            self.listener_callback,\n"
"            10)\n"
"        self.subscription\n"
"\n"
"    def listener_callback(self, msg):\n"
"            self.get_logger().info('I heard: \"%d\"' % msg.num) # CHANGE\n"
"\n"
"\n"
"def main(args=None):\n"
"    rclpy.init(args=args)\n"
"\n"
"    minimal_subscriber = MinimalSubscriber()\n"
"\n"
"    rclpy.spin(minimal_subscriber)\n"
"\n"
"    minimal_subscriber.destroy_node()\n"
"    rclpy.shutdown()\n"
"\n"
"\n"
"if __name__ == '__main__':\n"
"    main()"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:380
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:675
msgid "CMakeLists.txt:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:382
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:677
msgid "Add the following lines (C++ only):"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:384
msgid ""
"#...\n"
"\n"
"find_package(ament_cmake REQUIRED)\n"
"find_package(rclcpp REQUIRED)\n"
"find_package(tutorial_interfaces REQUIRED)                         # CHANGE\n"
"\n"
"add_executable(talker src/publisher_member_function.cpp)\n"
"ament_target_dependencies(talker rclcpp tutorial_interfaces)         # "
"CHANGE\n"
"\n"
"add_executable(listener src/subscriber_member_function.cpp)\n"
"ament_target_dependencies(listener rclcpp tutorial_interfaces)     # CHANGE\n"
"\n"
"install(TARGETS\n"
"  talker\n"
"  listener\n"
"  DESTINATION lib/${PROJECT_NAME})\n"
"\n"
"ament_package()"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:406
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:703
msgid "package.xml:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:408
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:705
msgid "Add the following line:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:414
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:711
msgid "<depend>tutorial_interfaces</depend>"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:420
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:717
msgid "<exec_depend>tutorial_interfaces</exec_depend>"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:425
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:722
msgid ""
"After making the above edits and saving all the changes, build the package:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:431
msgid "colcon build --packages-select cpp_pubsub"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:435
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:447
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:732
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:745
msgid "On Windows:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:437
msgid "colcon build --merge-install --packages-select cpp_pubsub"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:443
msgid "colcon build --packages-select py_pubsub"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:449
msgid "colcon build --merge-install --packages-select py_pubsub"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:453
#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:751
msgid "Then open two new terminals, source ``dev_ws`` in each, and run:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:459
msgid "ros2 run cpp_pubsub talker"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:463
msgid "ros2 run cpp_pubsub listener"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:469
msgid "ros2 run py_pubsub talker"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:473
msgid "ros2 run py_pubsub listener"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:477
msgid ""
"Since ``Num.msg`` relays only an integer, the talker should only be "
"publishing integer values, as opposed to the string it published previously:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:479
msgid ""
"[INFO] [minimal_publisher]: Publishing: '0'\n"
"[INFO] [minimal_publisher]: Publishing: '1'\n"
"[INFO] [minimal_publisher]: Publishing: '2'"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:487
msgid "7.2 Testing ``AddThreeInts.srv`` with service/client"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:489
msgid ""
"With some slight modifications to the service/client package created in a "
"previous tutorial (:ref:`C++ <CppSrvCli>` or :ref:`Python <PySrvCli>`), you "
"can see ``AddThreeInts.srv`` in action. Since you’ll be changing the "
"original two integer request srv to a three integer request srv, the output "
"will be slightly different."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:492
msgid "Service:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:498
msgid ""
"#include \"rclcpp/rclcpp.hpp\"\n"
"#include \"tutorial_interfaces/srv/add_three_ints.hpp\"     // CHANGE\n"
"\n"
"#include <memory>\n"
"\n"
"void add(const std::shared_ptr<tutorial_interfaces::srv::AddThreeInts::"
"Request> request,     // CHANGE\n"
"          std::shared_ptr<tutorial_interfaces::srv::AddThreeInts::"
"Response>       response)  // CHANGE\n"
"{\n"
"  response->sum = request->a + request->b + request-"
">c;                                       // CHANGE\n"
"  RCLCPP_INFO(rclcpp::get_logger(\"rclcpp\"), \"Incoming request\\na: %ld\" "
"\" b: %ld\" \" c: %ld\",   // CHANGE\n"
"                request->a, request->b, request-"
">c);                                          // CHANGE\n"
"  RCLCPP_INFO(rclcpp::get_logger(\"rclcpp\"), \"sending back response: "
"[%ld]\", (long int)response->sum);\n"
"}\n"
"\n"
"int main(int argc, char **argv)\n"
"{\n"
"  rclcpp::init(argc, argv);\n"
"\n"
"  std::shared_ptr<rclcpp::Node> node = rclcpp::Node::"
"make_shared(\"add_three_ints_server\");  // CHANGE\n"
"\n"
"  rclcpp::Service<tutorial_interfaces::srv::AddThreeInts>::SharedPtr service "
"=                 // CHANGE\n"
"    node->create_service<tutorial_interfaces::srv::"
"AddThreeInts>(\"add_three_ints\",  &add);     // CHANGE\n"
"\n"
"  RCLCPP_INFO(rclcpp::get_logger(\"rclcpp\"), \"Ready to add three ints."
"\");      // CHANGE\n"
"\n"
"  rclcpp::spin(node);\n"
"  rclcpp::shutdown();\n"
"}"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:531
msgid ""
"from tutorial_interfaces.srv import AddThreeInts     # CHANGE\n"
"\n"
"import rclpy\n"
"from rclpy.node import Node\n"
"\n"
"\n"
"class MinimalService(Node):\n"
"\n"
"    def __init__(self):\n"
"        super().__init__('minimal_service')\n"
"        self.srv = self.create_service(AddThreeInts, 'add_three_ints', self."
"add_three_ints_callback)        # CHANGE\n"
"\n"
"    def add_three_ints_callback(self, request, response):\n"
"        response.sum = request.a + request.b + request."
"c                                                  # CHANGE\n"
"        self.get_logger().info('Incoming request\\na: %d b: %d c: %d' % "
"(request.a, request.b, request.c)) # CHANGE\n"
"\n"
"        return response\n"
"\n"
"def main(args=None):\n"
"    rclpy.init(args=args)\n"
"\n"
"    minimal_service = MinimalService()\n"
"\n"
"    rclpy.spin(minimal_service)\n"
"\n"
"    rclpy.shutdown()\n"
"\n"
"if __name__ == '__main__':\n"
"    main()"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:563
msgid "Client:"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:569
msgid ""
"#include \"rclcpp/rclcpp.hpp\"\n"
"#include \"tutorial_interfaces/srv/add_three_ints.hpp\"        // CHANGE\n"
"\n"
"#include <chrono>\n"
"#include <cstdlib>\n"
"#include <memory>\n"
"\n"
"using namespace std::chrono_literals;\n"
"\n"
"int main(int argc, char **argv)\n"
"{\n"
"  rclcpp::init(argc, argv);\n"
"\n"
"  if (argc != 4) { // CHANGE\n"
"      RCLCPP_INFO(rclcpp::get_logger(\"rclcpp\"), \"usage: "
"add_three_ints_client X Y Z\");      // CHANGE\n"
"      return 1;\n"
"  }\n"
"\n"
"  std::shared_ptr<rclcpp::Node> node = rclcpp::Node::"
"make_shared(\"add_three_ints_client\"); // CHANGE\n"
"  rclcpp::Client<tutorial_interfaces::srv::AddThreeInts>::SharedPtr client "
"=                        // CHANGE\n"
"    node->create_client<tutorial_interfaces::srv::"
"AddThreeInts>(\"add_three_ints\");                  // CHANGE\n"
"\n"
"  auto request = std::make_shared<tutorial_interfaces::srv::AddThreeInts::"
"Request>();               // CHANGE\n"
"  request->a = atoll(argv[1]);\n"
"  request->b = atoll(argv[2]);\n"
"  request->c = atoll(argv[3]);               // CHANGE\n"
"\n"
"  while (!client->wait_for_service(1s)) {\n"
"    if (!rclcpp::ok()) {\n"
"      RCLCPP_ERROR(rclcpp::get_logger(\"rclcpp\"), \"Interrupted while "
"waiting for the service. Exiting.\");\n"
"      return 0;\n"
"    }\n"
"    RCLCPP_INFO(rclcpp::get_logger(\"rclcpp\"), \"service not available, "
"waiting again...\");\n"
"  }\n"
"\n"
"  auto result = client->async_send_request(request);\n"
"  // Wait for the result.\n"
"  if (rclcpp::spin_until_future_complete(node, result) ==\n"
"    rclcpp::executor::FutureReturnCode::SUCCESS)\n"
"  {\n"
"    RCLCPP_INFO(rclcpp::get_logger(\"rclcpp\"), \"Sum: %ld\", result.get()-"
">sum);\n"
"  } else {\n"
"    RCLCPP_ERROR(rclcpp::get_logger(\"rclcpp\"), \"Failed to call service "
"add_three_ints\");    // CHANGE\n"
"  }\n"
"\n"
"  rclcpp::shutdown();\n"
"  return 0;\n"
"}"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:622
msgid ""
"from tutorial_interfaces.srv import AddThreeInts       # CHANGE\n"
"import sys\n"
"import rclpy\n"
"from rclpy.node import Node\n"
"\n"
"\n"
"class MinimalClientAsync(Node):\n"
"\n"
"    def __init__(self):\n"
"        super().__init__('minimal_client_async')\n"
"        self.cli = self.create_client(AddThreeInts, 'add_three_ints')       "
"# CHANGE\n"
"        while not self.cli.wait_for_service(timeout_sec=1.0):\n"
"            self.get_logger().info('service not available, waiting "
"again...')\n"
"        self.req = AddThreeInts.Request()                                   "
"# CHANGE\n"
"\n"
"    def send_request(self):\n"
"        self.req.a = int(sys.argv[1])\n"
"        self.req.b = int(sys.argv[2])\n"
"        self.req.c = int(sys.argv[3])                  # CHANGE\n"
"        self.future = self.cli.call_async(self.req)\n"
"\n"
"\n"
"def main(args=None):\n"
"    rclpy.init(args=args)\n"
"\n"
"    minimal_client = MinimalClientAsync()\n"
"    minimal_client.send_request()\n"
"\n"
"    while rclpy.ok():\n"
"        rclpy.spin_once(minimal_client)\n"
"        if minimal_client.future.done():\n"
"            try:\n"
"                response = minimal_client.future.result()\n"
"            except Exception as e:\n"
"                minimal_client.get_logger().info(\n"
"                    'Service call failed %r' % (e,))\n"
"            else:\n"
"                minimal_client.get_logger().info(\n"
"                    'Result of add_three_ints: for %d + %d + %d = %d' "
"%                               # CHANGE\n"
"                    (minimal_client.req.a, minimal_client.req.b, "
"minimal_client.req.c, response.sum)) # CHANGE\n"
"            break\n"
"\n"
"    minimal_client.destroy_node()\n"
"    rclpy.shutdown()\n"
"\n"
"\n"
"if __name__ == '__main__':\n"
"    main()"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:679
msgid ""
"#...\n"
"\n"
"find_package(ament_cmake REQUIRED)\n"
"find_package(rclcpp REQUIRED)\n"
"find_package(tutorial_interfaces REQUIRED)        # CHANGE\n"
"\n"
"add_executable(server src/add_two_ints_server.cpp)\n"
"ament_target_dependencies(server\n"
"  rclcpp tutorial_interfaces)                      #CHANGE\n"
"\n"
"add_executable(client src/add_two_ints_client.cpp)\n"
"ament_target_dependencies(client\n"
"  rclcpp tutorial_interfaces)                      #CHANGE\n"
"\n"
"install(TARGETS\n"
"  server\n"
"  client\n"
"  DESTINATION lib/${PROJECT_NAME})\n"
"\n"
"ament_package()"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:728
msgid "colcon build --packages-select cpp_srvcli"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:734
msgid "colcon build --merge-install --packages-select cpp_srvcli"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:741
msgid "colcon build --packages-select py_srvcli"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:747
msgid "colcon build --merge-install --packages-select py_srvcli"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:757
msgid "ros2 run cpp_srvcli server"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:761
msgid "ros2 run cpp_srvcli client 2 3 1"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:767
msgid "ros2 run py_srvcli service"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:771
msgid "ros2 run py_srvcli client 2 3 1"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:777
msgid "Summary"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:779
msgid ""
"In this tutorial, you learned how to create custom interfaces in their own "
"package and how to utilize those interfaces from within other packages."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:781
msgid ""
"This is a simple method of interface creation and utilization. You can learn "
"more about interfaces :ref:`here <InterfaceConcept>`."
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:785
msgid "Next steps"
msgstr ""

#: ../../../source/Tutorials/Custom-ROS2-Interfaces.rst:787
msgid ""
"The :ref:`next tutorial <SinglePkgInterface>` covers more ways to use "
"interfaces in ROS 2."
msgstr ""
