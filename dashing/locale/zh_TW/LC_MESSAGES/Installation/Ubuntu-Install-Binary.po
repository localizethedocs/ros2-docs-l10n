# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Robotics
# This file is distributed under the same license as the ros2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ros2 documentation dashing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:6
msgid "Installing ROS 2 on Ubuntu Linux"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:10
msgid "Table of Contents"
msgstr "目次表"

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:12
msgid ""
"This page explains how to install ROS 2 on Ubuntu Linux from a pre-built "
"binary package."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:16
msgid ""
"The pre-built binary does not include all ROS 2 packages. All packages in "
"the `ROS base variant <https://ros.org/reps/rep-2001.html#ros-base>`_ are "
"included, and only a subset of packages in the `ROS desktop variant <https://"
"ros.org/reps/rep-2001.html#desktop-variants>`_ are included. The exact list "
"of packages are described by the repositories listed in `this ros2.repos "
"file <https://github.com/ros2/ros2/blob/dashing-release/ros2.repos>`_."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:20
msgid "There are also `Debian packages <Ubuntu-Install-Debians>` available."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:23
msgid "System Requirements"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:25
msgid ""
"We support Ubuntu Linux Bionic Beaver (18.04) and Ubuntu Xenial Xerus "
"(16.04) on 64-bit x86 and 64-bit ARM."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:27
msgid "Note: Ardent and beta versions supported Ubuntu Xenial Xerus 16.04."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:30
msgid "Add the ROS 2 apt repository"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:1
msgid ""
"You will need to add the ROS 2 apt repositories to your system. To do so, "
"first authorize our GPG key with apt like this:"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:4
msgid ""
"sudo apt update && sudo apt install curl gnupg2 lsb-release\n"
"sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros."
"key  -o /usr/share/keyrings/ros-archive-keyring.gpg"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:9
msgid "And then add the repository to your sources list:"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:11
msgid ""
"echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/"
"ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -"
"cs) main\" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:35
msgid "Downloading ROS 2"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:38
msgid "Go to `the releases page <https://github.com/ros2/ros2/releases>`_"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:39
msgid ""
"Download the latest package for Ubuntu; let's assume that it ends up at ``~/"
"Downloads/ros2-dashing-linux-x86_64.tar.bz2``."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:41
msgid ""
"Note: there may be more than one binary download option which might cause "
"the file name to differ."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:44
msgid "Unpack it:"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:46
msgid ""
"mkdir -p ~/ros2_dashing\n"
"cd ~/ros2_dashing\n"
"tar xf ~/Downloads/ros2-dashing-linux-x86_64.tar.bz2"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:53
msgid "Installing and initializing rosdep"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:55
msgid ""
"sudo apt update\n"
"sudo apt install -y python-rosdep\n"
"sudo rosdep init\n"
"rosdep update"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:65
msgid "Installing the missing dependencies"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:67
msgid "Set your rosdistro according to the release you downloaded."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:69
msgid ""
"rosdep install --from-paths ~/ros2_dashing/ros2-linux/share --ignore-src --"
"rosdistro dashing -y --skip-keys \"console_bridge fastcdr fastrtps "
"libopensplice67 libopensplice69 osrf_testing_tools_cpp poco_vendor "
"rmw_connext_cpp rosidl_typesupport_connext_c rosidl_typesupport_connext_cpp "
"rti-connext-dds-5.3.1 tinyxml_vendor tinyxml2_vendor urdfdom "
"urdfdom_headers\""
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:73
msgid ""
"*Optional*\\ : if you want to use the ROS 1<->2 bridge, then you must also "
"install ROS 1. Follow the normal install instructions: https://wiki.ros.org/"
"melodic/Installation/Ubuntu"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:78
msgid "Installing the python3 libraries"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:80
msgid ""
"sudo apt install -y libpython3-dev python3-pip\n"
"pip3 install -U argcomplete"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:86
msgid "Install additional DDS implementations (optional)"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:88
msgid ""
"If you would like to use another DDS or RTPS vendor besides the default, "
"eProsima's Fast RTPS, you can find instructions `here <DDS-Implementations>`."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:91
msgid "Environment setup"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:94
msgid "Sourcing the setup script"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:96
msgid "Set up your environment by sourcing the following file."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:98
msgid ". ~/ros2_dashing/ros2-linux/setup.bash"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:103
msgid "Try some examples"
msgstr "嘗試一些範例"

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:105
msgid "In one terminal, source the setup file and then run a C++ ``talker``:"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:107
msgid ""
". ~/ros2_dashing/ros2-linux/setup.bash\n"
"ros2 run demo_nodes_cpp talker"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:112
msgid ""
"In another terminal source the setup file and then run a Python ``listener``:"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:114
msgid ""
". ~/ros2_dashing/ros2-linux/setup.bash\n"
"ros2 run demo_nodes_py listener"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:119
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages and "
"the ``listener`` saying ``I heard`` those messages. This verifies both the C+"
"+ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:124
msgid "Next steps after installing"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:125
msgid ""
"Continue with the `tutorials and demos </Tutorials>` to configure your "
"environment, create your own workspace and packages, and learn ROS 2 core "
"concepts."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:128
msgid "Using the ROS 1 bridge"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:129
msgid ""
"The ROS 1 bridge can connect topics from ROS 1 to ROS 2 and vice-versa. See "
"the dedicated `documentation <https://github.com/ros2/ros1_bridge/blob/"
"master/README.md>`__ on how to build and use the ROS 1 bridge."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:132
msgid "Additional RMW implementations (optional)"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:133
msgid ""
"The default middleware that ROS 2 uses is ``Fast-RTPS``, but the middleware "
"(RMW) can be replaced at runtime. See the `guide <../Guides/Working-with-"
"multiple-RMW-implementations>` on how to work with multiple RMWs."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:137
msgid "Troubleshooting"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:139
msgid ""
"Troubleshooting techniques can be found `here <../Guides/Installation-"
"Troubleshooting>`."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:142
msgid "Uninstall"
msgstr "解除安裝"

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:144
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not "
"sourcing the workspace's ``setup`` file. This way, your environment will "
"behave as though there is no Dashing install on your system."
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:147
msgid ""
"If you're also trying to free up space, you can delete the entire workspace "
"directory with:"
msgstr ""

#: ../../../source/Installation/Ubuntu-Install-Binary.rst:149
msgid "rm -rf ~/ros2_dashing"
msgstr ""
