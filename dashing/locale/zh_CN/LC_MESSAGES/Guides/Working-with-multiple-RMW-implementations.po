# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Robotics
# This file is distributed under the same license as the ros2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ros2 documentation dashing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:7
msgid "Working with multiple ROS 2 middleware implementations"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:11
msgid "Table of Contents"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:13
msgid ""
"This page explains the default RMW implementation and how to specify an "
"alternative."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:16
msgid "Prerequisites"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:18
msgid ""
"You should have already read the `DDS and ROS middleware implementations "
"page <../Concepts/About-Different-Middleware-Vendors>`."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:21
msgid "Specifying RMW implementations"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:23
msgid ""
"To have multiple RMW implementations available for use you must have "
"installed the ROS 2 binaries and any additional dependencies for specific "
"RMW implementations, or built ROS 2 from source with multiple RMW "
"implementations in the workspace (the RMW implementations are included in "
"the build by default if their compile-time dependencies are met). See "
"`Install DDS implementations <../Installation/DDS-Implementations>`."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:27
msgid ""
"Both C++ and Python nodes support an environment variable "
"``RMW_IMPLEMENTATION`` that allows the user to select the RMW implementation "
"to use when running ROS 2 applications."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:29
msgid ""
"The user may set this variable to a specific implementation identifier, such "
"as ``rmw_cyclonedds_cpp``, ``rmw_fastrtps_cpp``, or ``rmw_connextdds``."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:31
msgid ""
"For example, to run the talker demo using the C++ talker and Python listener "
"with the Connext RMW implementation:"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:35
msgid "Linux"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:37
#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:46
msgid ""
"RMW_IMPLEMENTATION=rmw_connext_cpp ros2 run demo_nodes_cpp talker\n"
"\n"
"# Run in another terminal\n"
"RMW_IMPLEMENTATION=rmw_connext_cpp ros2 run demo_nodes_py listener"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:44
msgid "macOS"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:53
msgid "Windows"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:55
msgid ""
"set RMW_IMPLEMENTATION=rmw_connext_cpp\n"
"ros2 run demo_nodes_cpp talker\n"
"\n"
"REM run in another terminal\n"
"set RMW_IMPLEMENTATION=rmw_connext_cpp\n"
"ros2 run demo_nodes_py listener"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:65
msgid "Adding RMW implementations to your workspace"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:67
msgid ""
"Suppose that you have built your ROS 2 workspace with only Fast RTPS "
"installed and therefore only the Fast RTPS RMW implementation built. The "
"last time your workspace was built, any other RMW implementation packages, "
"``rmw_connext_cpp`` for example, were probably unable to find installations "
"of the relevant DDS implementations. If you then install an additional DDS "
"implementation, Connext for example, you will need to re-trigger the check "
"for a Connext installation that occurs when the Connext RMW implementation "
"is being built. You can do this by specifying the ``--cmake-force-"
"configure`` flag on your next workspace build, and you should see that the "
"RMW implementation package then gets built for the newly installed DDS "
"implementation."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:72
msgid ""
"It is possible to run into a problem when \"rebuilding\" the workspace with "
"an additional RMW implementation using the ``--cmake-force-configure`` "
"option where the build complains about the default RMW implementation "
"changing. To resolve this, you can either set the default implementation to "
"what is was before with the ``RMW_IMPLEMENTATION`` CMake argument or you can "
"delete the build folder for packages that complain and continue the build "
"with ``--start-with <package name>``."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:76
msgid "Troubleshooting"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:79
msgid "Ensuring use of a particular RMW implementation"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:81
msgid ""
"If the ``RMW_IMPLEMENTATION`` environment variable is set to an RMW "
"implementation for which support is not installed, you will see an error "
"message similar to the following if you have only one implementation "
"installed:"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:83
msgid ""
"Expected RMW implementation identifier of 'rmw_connext_cpp' but instead "
"found 'rmw_fastrtps_cpp', exiting with 102."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:87
msgid ""
"If you have support for multiple RMW implementations installed and you "
"request use of one that is not installed, you will see something similar to:"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:89
msgid ""
"Error getting RMW implementation identifier / RMW implementation not "
"installed (expected identifier of 'rmw_connext_cpp'), exiting with 1."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:93
msgid ""
"If this occurs, double check that your ROS 2 installation includes support "
"for the RMW implementation that you have specified in the "
"``RMW_IMPLEMENTATION`` environment variable."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:95
msgid ""
"If you want to switch between RMW implementations, verify that the ROS 2 "
"daemon process is not running with the previous RMW implementation to avoid "
"any issues between nodes and command line tools such as ``ros2 node``. For "
"example, if you run:"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:98
msgid "RMW_IMPLEMENTATION=rmw_connext_cpp ros2 run demo_nodes_cpp talker"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:102
msgid "and"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:104
msgid "ros2 node list"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:108
msgid "it will generate a daemon with a Fast RTPS implementation:"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:110
msgid ""
"21318 22.0  0.6 535896 55044 pts/8    Sl   16:14   0:00 /usr/bin/python3 /"
"opt/ros/dashing/bin/_ros2_daemon --rmw-implementation rmw_fastrtps_cpp --ros-"
"domain-id 22"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:114
msgid ""
"Even if you run the command line tool again with the correct RMW "
"implementation, the daemon's RMW implementation will not change and the ROS "
"2 command line tools will fail."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:116
msgid "To solve this, simply stop the daemon process:"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:118
msgid "ros2 daemon stop"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:122
msgid ""
"and rerun the ROS 2 command line tool with the correct RMW implementation."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:125
msgid ""
"RTI Connext on OSX: Failure due to insufficient shared memory kernel settings"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:127
msgid ""
"If you receive an error message similar to below when running RTI Connext on "
"OSX:"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:129
msgid ""
"[D0062|"
"ENABLE]DDS_DomainParticipantPresentation_reserve_participant_index_entryports:!"
"enable reserve participant index\n"
"[D0062|ENABLE]DDS_DomainParticipant_reserve_participant_index_entryports:"
"Unusable shared memory transport. For a more in-   depth explanation of the "
"possible problem and solution, please visit https://community.rti.com/kb/"
"osx510."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:134
msgid ""
"This error is caused by an insufficient number or size of shared memory "
"segments allowed by the operating system. As a result, the "
"``DomainParticipant`` is unable to allocate enough resources and calculate "
"its participant index which causes the error."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:136
msgid ""
"You can increase the shared memory resources of your machine either "
"temporarily or permanently."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:138
msgid ""
"To increase the settings temporarily, you can run the following commands as "
"user root:"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:140
msgid ""
"/usr/sbin/sysctl -w kern.sysv.shmmax=419430400\n"
"/usr/sbin/sysctl -w kern.sysv.shmmin=1\n"
"/usr/sbin/sysctl -w kern.sysv.shmmni=128\n"
"/usr/sbin/sysctl -w kern.sysv.shmseg=1024\n"
"/usr/sbin/sysctl -w kern.sysv.shmall=262144"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:148
msgid ""
"To increase the settings permanently, you will need to edit or create the "
"file ``/etc/sysctl.conf``. Creating or editing this file will require root "
"permissions. Either add to your existing ``etc/sysctl.conf`` file or create "
"``/etc/sysctl.conf`` with the following lines:"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:150
msgid ""
"kern.sysv.shmmax=419430400\n"
"kern.sysv.shmmin=1\n"
"kern.sysv.shmmni=128\n"
"kern.sysv.shmseg=1024\n"
"kern.sysv.shmall=262144"
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:158
msgid ""
"You will need to reboot the machine after modifying this file to have the "
"changes take effect."
msgstr ""

#: ../../../source/Guides/Working-with-multiple-RMW-implementations.rst:160
msgid ""
"This solution is edited from the RTI Connext community forum. See the "
"`original post <https://community.rti.com/kb/osx510>`__ for more detailed "
"explanation."
msgstr ""
