# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation humble\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-01 08:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:6
msgid "Configure Zero Copy Loaned Messages"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:10
msgid "Contents"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:13
msgid "Overview"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:15
msgid ""
"ROS 2 loaned messages and zero copy data sharing are mechanisms designed to "
"improve performance by minimizing data copying. When using loaned messages, "
"the RMW middleware can allocate and manage message memory, allowing "
"publishers and subscribers to share data buffers directly. This reduces the "
"overhead associated with memory allocation and data copying, leading to "
"lower latency and higher throughput. Zero copy data sharing is particularly "
"beneficial in high-performance applications where large amounts of data need "
"to be transmitted efficiently."
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:20
msgid ""
"See more details for `Loaned Messages <https://design.ros2.org/articles/"
"zero_copy.html>`__ article for details on how loaned messages work."
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:23
msgid "RMW Support"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:25
msgid "Loaned messages require RMW implementation support."
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:27
msgid "Loaned Messages Support Status"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:30
msgid "RMW Implementation"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:31
msgid "Support Status"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:32
msgid "Documentation"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:33
msgid "rmw_fastrtps"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:34
msgid "supported"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:35
msgid ""
"`Enable Zero Copy Data Sharing <https://github.com/ros2/rmw_fastrtps?"
"tab=readme-ov-file#enable-zero-copy-data-sharing>`__"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:36
msgid "rmw_connextdds"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:37
#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:40
msgid "not supported"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:38
#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:41
msgid "N.A"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:39
msgid "rmw_cyclonedds"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:44
msgid "Installing the demo"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:46
msgid ""
"See the :doc:`installation instructions <../../Installation>` for details on "
"installing ROS 2."
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:48
msgid ""
"If you've installed ROS 2 from packages, ensure that you have ``ros-rolling-"
"demo-nodes-cpp`` installed. If you downloaded the archive or built ROS 2 "
"from source, it will already be part of the installation."
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:52
msgid "Using Loaned Messages"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:54
msgid ""
"Loaned messages on the publisher are used by default when the underlying RMW "
"implementation supports them. If the RMW implementation does not support "
"loaned messages, the messages will be allocated with the allocator instance "
"provided by the publisher. The `talker_loaned_message example <https://"
"github.com/ros2/demos/blob/rolling/demo_nodes_cpp/src/topics/"
"talker_loaned_message.cpp>`__ demonstrates how to create a ROS 2 publisher "
"that uses loaned messages to publish data efficiently without copying the "
"message data."
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:58
msgid ""
"#include <chrono>\n"
"#include <cstdio>\n"
"#include <memory>\n"
"#include <utility>\n"
"\n"
"#include \"rclcpp/rclcpp.hpp\"\n"
"#include \"rclcpp_components/register_node_macro.hpp\"\n"
"\n"
"#include \"std_msgs/msg/float64.hpp\"\n"
"#include \"std_msgs/msg/string.hpp\"\n"
"\n"
"#include \"demo_nodes_cpp/visibility_control.h\"\n"
"\n"
"using namespace std::chrono_literals;\n"
"\n"
"namespace demo_nodes_cpp\n"
"{\n"
"// Create a Talker class that subclasses the generic rclcpp::Node base "
"class.\n"
"// The main function below will instantiate the class as a ROS node.\n"
"class LoanedMessageTalker : public rclcpp::Node\n"
"{\n"
"public:\n"
"  DEMO_NODES_CPP_PUBLIC\n"
"  explicit LoanedMessageTalker(const rclcpp::NodeOptions & options)\n"
"  : Node(\"loaned_message_talker\", options)\n"
"  {\n"
"    // Create a function for when messages are to be sent.\n"
"    setvbuf(stdout, NULL, _IONBF, BUFSIZ);\n"
"\n"
"    // We differentiate in this demo between two fundamental message types - "
"POD and non-POD\n"
"    // PODs are plain old data types, meaning all the data of its type is "
"encapsulated within\n"
"    // the structure and does not require any heap allocation or dynamic "
"resizing.\n"
"    // non-PODs are essentially the opposite where the data size changes "
"during runtime.\n"
"    // All containers (including Strings) are such non-PODs.\n"
"    // Most middlewares won't be able to loan non-POD datatypes.\n"
"    // We thus feature two publishers in this demo where both, a POD and non-"
"POD message\n"
"    // will be used to publish data.\n"
"    // The take-away for this is that the rclcpp API for message loaning can "
"cope with\n"
"    // either POD and non-POD transparently.\n"
"    auto publish_message =\n"
"      [this]() -> void\n"
"      {\n"
"        // We loan a message here and don't allocate the memory on the "
"stack.\n"
"        // For middlewares which support message loaning, this means the "
"middleware\n"
"        // completely owns the memory for this message.\n"
"        // This enables a zero-copy message transport for middlewares with "
"shared memory\n"
"        // capabilities.\n"
"        // If the middleware doesn't support this, the loaned message will "
"be allocated\n"
"        // with the allocator instance provided by the publisher.\n"
"        auto pod_loaned_msg = pod_pub_->borrow_loaned_message();\n"
"        auto pod_msg_data = static_cast<double>(count_);\n"
"        pod_loaned_msg.get().data = pod_msg_data;\n"
"        RCLCPP_INFO(this->get_logger(), \"Publishing: '%f'\", "
"pod_msg_data);\n"
"        // As the middleware might own the memory allocated for this "
"message,\n"
"        // a call to publish explicitly transfers ownership back to the "
"middleware.\n"
"        // The loaned message instance is thus no longer valid after a call "
"to publish.\n"
"        pod_pub_->publish(std::move(pod_loaned_msg));\n"
"\n"
"        // Similar as in the above case, we ask the middleware to loan a "
"message.\n"
"        // As most likely the middleware won't be able to loan a message for "
"a non-POD\n"
"        // data type, the memory for the message will be allocated on the "
"heap within\n"
"        // the scope of the `LoanedMessage` instance.\n"
"        // After the call to `publish()`, the message will be correctly "
"allocated.\n"
"        auto non_pod_loaned_msg = non_pod_pub_->borrow_loaned_message();\n"
"        auto non_pod_msg_data = \"Hello World: \" + std::to_string(count_);\n"
"        non_pod_loaned_msg.get().data = non_pod_msg_data;\n"
"        RCLCPP_INFO(this->get_logger(), \"Publishing: '%s'\", "
"non_pod_msg_data.c_str());\n"
"        non_pod_pub_->publish(std::move(non_pod_loaned_msg));\n"
"        count_++;\n"
"      };\n"
"\n"
"    // Create a publisher with a custom Quality of Service profile.\n"
"    rclcpp::QoS qos(rclcpp::KeepLast(7));\n"
"    pod_pub_ = this->create_publisher<std_msgs::msg::"
"Float64>(\"chatter_pod\", qos);\n"
"    non_pod_pub_ = this->create_publisher<std_msgs::msg::"
"String>(\"chatter\", qos);\n"
"\n"
"    // Use a timer to schedule periodic message publishing.\n"
"    timer_ = this->create_wall_timer(1s, publish_message);\n"
"  }\n"
"\n"
"private:\n"
"  size_t count_ = 1;\n"
"  rclcpp::Publisher<std_msgs::msg::Float64>::SharedPtr pod_pub_;\n"
"  rclcpp::Publisher<std_msgs::msg::String>::SharedPtr non_pod_pub_;\n"
"  rclcpp::TimerBase::SharedPtr timer_;\n"
"};\n"
"\n"
"}  // namespace demo_nodes_cpp"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:149
msgid ""
"This example tries to loan two types of messages from the RMW implementation "
"with calling ``borrow_loaned_message()``. The one is a Plain Old Data (POD) "
"message type, ``std_msgs::msg::Float64``, and the other is a non-Plain Old "
"Data (POD) message type, ``std_msgs::msg::String``. The requirements for "
"loaned messages are that the message type is a Plain Old Data (POD) type for "
"`rmw_fastrtps <https://github.com/ros2/rmw_fastrtps>`__ as shown below."
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:153
msgid ""
"We can run the demo by running the ``ros2 run demo_nodes_cpp "
"talker_loaned_message`` executable (don't forget to source the setup file "
"first):"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:155
msgid ""
"$ ros2 run demo_nodes_cpp talker_loaned_message\n"
"[INFO] [1741063656.446278828] [loaned_message_talker]: Publishing: "
"'1.000000'\n"
"[INFO] [1741063656.446705580] [rclcpp]: Currently used middleware cannot "
"loan messages. Local allocator will be used.\n"
"[INFO] [1741063656.446754794] [loaned_message_talker]: Publishing: 'Hello "
"World: 1'\n"
"[INFO] [1741063657.446232119] [loaned_message_talker]: Publishing: "
"'2.000000'\n"
"[INFO] [1741063657.446401820] [loaned_message_talker]: Publishing: 'Hello "
"World: 2'\n"
"[INFO] [1741063658.446217220] [loaned_message_talker]: Publishing: "
"'3.000000'\n"
"[INFO] [1741063658.446383011] [loaned_message_talker]: Publishing: 'Hello "
"World: 3'\n"
"[...]"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:167
msgid ""
"If the RMW implementation does not support loaned messages, all the messages "
"will be allocated with the allocator instance provided by the publisher. We "
"can try that by executing ``RMW_IMPLEMENTATION=rmw_cyclonedds_cpp ros2 run "
"demo_nodes_cpp talker_loaned_message``."
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:170
msgid ""
"$ RMW_IMPLEMENTATION=rmw_cyclonedds_cpp ros2 run demo_nodes_cpp "
"talker_loaned_message\n"
"[INFO] [1741064109.676860153] [rclcpp]: Currently used middleware cannot "
"loan messages. Local allocator will be used.\n"
"[INFO] [1741064109.677043250] [loaned_message_talker]: Publishing: "
"'1.000000'\n"
"[INFO] [1741064109.677185724] [rclcpp]: Currently used middleware cannot "
"loan messages. Local allocator will be used.\n"
"[INFO] [1741064109.677224058] [loaned_message_talker]: Publishing: 'Hello "
"World: 1'\n"
"[INFO] [1741064110.676842111] [loaned_message_talker]: Publishing: "
"'2.000000'\n"
"[INFO] [1741064110.677008774] [loaned_message_talker]: Publishing: 'Hello "
"World: 2'\n"
"[INFO] [1741064111.676779850] [loaned_message_talker]: Publishing: "
"'3.000000'\n"
"[INFO] [1741064111.676937613] [loaned_message_talker]: Publishing: 'Hello "
"World: 3'\n"
"[...]"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:183
msgid ""
"As we can see, both messages are published successfully, but the messages "
"are allocated with the local allocator instance provided by the publisher "
"because the RMW implementation does not support loaned messages."
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:186
msgid "How to disable Loaned Messages"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:189
msgid "Publishers"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:191
msgid ""
"By default, *Loaned Messages* will try to borrow the memory from underlying "
"middleware if it supports *Loaned Messages*. The "
"``ROS_DISABLE_LOANED_MESSAGES`` environment variable can be used to disable "
"*Loaned Messages*, and fallback to normal publisher behavior, without any "
"code changes or middleware configuration. You can set the environment "
"variable with the following command:"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:197
#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:243
msgid "Linux"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:199
#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:211
msgid "$ export ROS_DISABLE_LOANED_MESSAGES=1"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:203
#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:215
#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:249
#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:261
msgid ""
"To maintain this setting between shell sessions, you can add the command to "
"your shell startup script:"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:205
msgid "$ echo \"export ROS_DISABLE_LOANED_MESSAGES=1\" >> ~/.bashrc"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:209
#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:255
msgid "macOS"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:217
msgid "$ echo \"export ROS_DISABLE_LOANED_MESSAGES=1\" >> ~/.bash_profile"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:221
#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:267
msgid "Windows"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:223
msgid "$ set ROS_DISABLE_LOANED_MESSAGES=1"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:227
#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:273
msgid "If you want to make this permanent between shell sessions, also run:"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:229
msgid "$ setx ROS_DISABLE_LOANED_MESSAGES 1"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:235
msgid "Subscriptions"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:237
msgid ""
"Currently using *Loaned Messages* is not safe on subscription, see more "
"details in `rmw issue <https://github.com/ros2/rmw_cyclonedds/issues/469>`_ "
"and `rclcpp issue <https://github.com/ros2/rclcpp/issues/2401>`_. Because of "
"this, by default *Loaned Messages* is ``disabled`` on subscription with `Set "
"disable loan to on by default <https://github.com/ros2/rcl/pull/1110>`_ even "
"though underlying middleware supports that. To enable *Loaned Messages* on "
"subscription, you need to set the environment variable "
"``ROS_DISABLE_LOANED_MESSAGES`` to ``0`` explicitly."
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:245
#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:257
msgid "$ export ROS_DISABLE_LOANED_MESSAGES=0"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:251
msgid "$ echo \"export ROS_DISABLE_LOANED_MESSAGES=0\" >> ~/.bashrc"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:263
msgid "$ echo \"export ROS_DISABLE_LOANED_MESSAGES=0\" >> ~/.bash_profile"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:269
msgid "$ set ROS_DISABLE_LOANED_MESSAGES=0"
msgstr ""

#: ../../../source/How-To-Guides/Configure-ZeroCopy-loaned-messages.rst:275
msgid "$ setx ROS_DISABLE_LOANED_MESSAGES 0"
msgstr ""
