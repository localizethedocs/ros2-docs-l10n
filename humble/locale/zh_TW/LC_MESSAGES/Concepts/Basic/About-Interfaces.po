# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation humble\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Concepts/Basic/About-Interfaces.rst:7
msgid "Interfaces"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:10
msgid "Table of Contents"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:13
msgid "Background"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:15
msgid ""
"ROS applications typically communicate through interfaces of one of three "
"types: :doc:`topics <About-Topics>`, :doc:`services <About-Services>`, or :"
"doc:`actions <About-Actions>`. ROS 2 uses a simplified description language, "
"the interface definition language (IDL), to describe these interfaces. This "
"description makes it easy for ROS tools to automatically generate source "
"code for the interface type in several target languages."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:19
msgid "In this document we will describe the supported types:"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:21
msgid ""
"msg: ``.msg`` files are simple text files that describe the fields of a ROS "
"message. They are used to generate source code for messages in different "
"languages."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:23
msgid ""
"srv: ``.srv`` files describe a service. They are composed of two parts: a "
"request and a response. The request and response are message declarations."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:26
msgid ""
"action: ``.action`` files describe actions. They are composed of three "
"parts: a goal, a result, and feedback. Each part is a message declaration "
"itself."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:31
msgid "Messages"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:33
msgid ""
"Messages are a way for a ROS 2 node to send data on the network to other ROS "
"nodes, with no response expected. For instance, if a ROS 2 node reads "
"temperature data from a sensor, it can then publish that data on the ROS 2 "
"network using a ``Temperature`` message. Other nodes on the ROS 2 network "
"can subscribe to that data and receive the ``Temperature`` message."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:37
msgid ""
"Messages are described and defined in ``.msg`` files in the ``msg/`` "
"directory of a ROS package. ``.msg`` files are composed of two parts: fields "
"and constants."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:41
msgid "Fields"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:43
msgid "Each field consists of a type and a name, separated by a space, i.e:"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:45
msgid ""
"fieldtype1 fieldname1\n"
"fieldtype2 fieldname2\n"
"fieldtype3 fieldname3"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:51
#: ../../../source/Concepts/Basic/About-Interfaces.rst:197
#: ../../../source/Concepts/Basic/About-Interfaces.rst:221
msgid "For example:"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:53
msgid ""
"int32 my_int\n"
"string my_string"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:59
msgid "Field types"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:61
msgid "Field types can be:"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:63
msgid "a built-in-type"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:64
msgid ""
"names of Message descriptions defined on their own, such as \"geometry_msgs/"
"PoseStamped\""
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:66
msgid "*Built-in-types currently supported:*"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:71
#: ../../../source/Concepts/Basic/About-Interfaces.rst:141
msgid "Type name"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:72
#: ../../../source/Concepts/Basic/About-Interfaces.rst:142
msgid ""
"`C++ <https://design.ros2.org/articles/generated_interfaces_cpp.html>`__"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:73
#: ../../../source/Concepts/Basic/About-Interfaces.rst:143
msgid ""
"`Python <https://design.ros2.org/articles/generated_interfaces_python."
"html>`__"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:74
#: ../../../source/Concepts/Basic/About-Interfaces.rst:144
msgid "`DDS type <https://design.ros2.org/articles/mapping_dds_types.html>`__"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:75
#: ../../../source/Concepts/Basic/About-Interfaces.rst:76
msgid "bool"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:77
msgid "builtins.bool"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:78
msgid "boolean"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:79
msgid "byte"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:80
#: ../../../source/Concepts/Basic/About-Interfaces.rst:100
msgid "uint8_t"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:81
msgid "builtins.bytes*"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:82
#: ../../../source/Concepts/Basic/About-Interfaces.rst:98
#: ../../../source/Concepts/Basic/About-Interfaces.rst:102
msgid "octet"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:83
#: ../../../source/Concepts/Basic/About-Interfaces.rst:84
#: ../../../source/Concepts/Basic/About-Interfaces.rst:86
msgid "char"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:85
#: ../../../source/Concepts/Basic/About-Interfaces.rst:97
#: ../../../source/Concepts/Basic/About-Interfaces.rst:101
#: ../../../source/Concepts/Basic/About-Interfaces.rst:105
#: ../../../source/Concepts/Basic/About-Interfaces.rst:109
#: ../../../source/Concepts/Basic/About-Interfaces.rst:113
#: ../../../source/Concepts/Basic/About-Interfaces.rst:117
#: ../../../source/Concepts/Basic/About-Interfaces.rst:121
#: ../../../source/Concepts/Basic/About-Interfaces.rst:125
msgid "builtins.int*"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:87
msgid "float32"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:88
#: ../../../source/Concepts/Basic/About-Interfaces.rst:90
msgid "float"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:89
#: ../../../source/Concepts/Basic/About-Interfaces.rst:93
msgid "builtins.float*"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:91
msgid "float64"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:92
#: ../../../source/Concepts/Basic/About-Interfaces.rst:94
msgid "double"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:95
msgid "int8"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:96
msgid "int8_t"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:99
msgid "uint8"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:103
msgid "int16"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:104
msgid "int16_t"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:106
msgid "short"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:107
msgid "uint16"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:108
msgid "uint16_t"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:110
msgid "unsigned short"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:111
msgid "int32"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:112
msgid "int32_t"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:114
msgid "long"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:115
msgid "uint32"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:116
msgid "uint32_t"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:118
msgid "unsigned long"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:119
msgid "int64"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:120
msgid "int64_t"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:122
msgid "long long"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:123
msgid "uint64"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:124
msgid "uint64_t"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:126
msgid "unsigned long long"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:127
#: ../../../source/Concepts/Basic/About-Interfaces.rst:130
#: ../../../source/Concepts/Basic/About-Interfaces.rst:160
msgid "string"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:128
#: ../../../source/Concepts/Basic/About-Interfaces.rst:158
msgid "std::string"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:129
#: ../../../source/Concepts/Basic/About-Interfaces.rst:133
msgid "builtins.str"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:131
#: ../../../source/Concepts/Basic/About-Interfaces.rst:134
msgid "wstring"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:132
msgid "std::u16string"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:136
msgid "*Every built-in-type can be used to define arrays:*"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:145
msgid "static array"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:146
msgid "std::array<T, N>"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:147
#: ../../../source/Concepts/Basic/About-Interfaces.rst:155
msgid "builtins.list*"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:148
msgid "T[N]"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:149
msgid "unbounded dynamic array"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:150
msgid "std::vector"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:151
msgid "builtins.list"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:152
msgid "sequence"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:153
msgid "bounded dynamic array"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:154
msgid "custom_class<T, N>"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:156
msgid "sequence<T, N>"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:157
msgid "bounded string"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:159
msgid "builtins.str*"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:162
msgid ""
"All types that are more permissive than their ROS definition enforce the ROS "
"constraints in range and length by software."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:164
msgid "*Example of message definition using arrays and bounded types:*"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:166
msgid ""
"int32[] unbounded_integer_array\n"
"int32[5] five_integers_array\n"
"int32[<=5] up_to_five_integers_array\n"
"\n"
"string string_of_unbounded_size\n"
"string<=10 up_to_ten_characters_string\n"
"\n"
"string[<=5] up_to_five_unbounded_strings\n"
"string<=10[] unbounded_array_of_strings_up_to_ten_characters_each\n"
"string<=10[<=5] up_to_five_strings_up_to_ten_characters_each"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:180
msgid "Field names"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:182
msgid ""
"Field names must be lowercase alphanumeric characters with underscores for "
"separating words. They must start with an alphabetic character, and they "
"must not end with an underscore or have two consecutive underscores."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:186
msgid "Field default value"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:188
msgid ""
"Default values can be set to any field in the message type. Currently "
"default values are not supported for string arrays and complex types (i.e. "
"types not present in the built-in-types table above; that applies to all "
"nested messages)."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:191
msgid ""
"Defining a default value is done by adding a third element to the field "
"definition line, i.e:"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:193
msgid "fieldtype fieldname fielddefaultvalue"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:199
msgid ""
"uint8 x 42\n"
"int16 y -2000\n"
"string full_name \"John Doe\"\n"
"int32[] samples [-200, -100, 0, 100, 200]"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:208
msgid "string values must be defined in single ``'`` or double ``\"`` quotes"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:209
msgid "currently string values are not escaped"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:212
msgid "Constants"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:214
msgid ""
"Each constant definition is like a field description with a default value, "
"except that this value can never be changed programmatically. This value "
"assignment is indicated by use of an equal '=' sign, e.g."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:217
msgid "constanttype CONSTANTNAME=constantvalue"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:223
msgid ""
"int32 X=123\n"
"int32 Y=-123\n"
"string FOO=\"foo\"\n"
"string EXAMPLE='bar'"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:232
msgid "Constants names have to be UPPERCASE"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:235
msgid "Services"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:237
msgid ""
"Services are a request/response communication, where the client (requester) "
"is waiting for the server (responder) to make a short computation and return "
"a result."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:239
msgid ""
"Services are described and defined in ``.srv`` files in the ``srv/`` "
"directory of a ROS package."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:241
msgid ""
"A service description file consists of a request and a response msg type, "
"separated by ``---``. Any two ``.msg`` files concatenated with a ``---`` are "
"a legal service description."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:244
msgid ""
"Here is a very simple example of a service that takes in a string and "
"returns a string:"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:246
msgid ""
"string str\n"
"---\n"
"string str"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:252
msgid ""
"We can of course get much more complicated (if you want to refer to a "
"message from the same package you must not mention the package name):"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:254
msgid ""
"# request constants\n"
"int8 FOO=1\n"
"int8 BAR=2\n"
"# request fields\n"
"int8 foobar\n"
"another_pkg/AnotherMessage msg\n"
"---\n"
"# response constants\n"
"uint32 SECRET=123456\n"
"# response fields\n"
"another_pkg/YetAnotherMessage val\n"
"CustomMessageDefinedInThisPackage value\n"
"uint32 an_integer"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:270
msgid "You cannot embed another service inside of a service."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:273
msgid "Actions"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:275
msgid ""
"Actions are a long-running request/response communication, where the action "
"client (requester) is waiting for the action server (the responder) to take "
"some action and return a result. In contrast to services, actions can be "
"long-running (many seconds or minutes), provide feedback while they are "
"happening, and can be interrupted."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:278
msgid "Action definitions have the following form:"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:280
msgid ""
"<request_type> <request_fieldname>\n"
"---\n"
"<response_type> <response_fieldname>\n"
"---\n"
"<feedback_type> <feedback_fieldname>"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:288
msgid ""
"Like services, the request fields are before and the response fields are "
"after the first triple-dash (``---``), respectively. There is also a third "
"set of fields after the second triple-dash, which is the fields to be sent "
"when sending feedback."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:291
msgid ""
"There can be arbitrary numbers of request fields (including zero), arbitrary "
"numbers of response fields (including zero), and arbitrary numbers of "
"feedback fields (including zero)."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:293
msgid ""
"The ``<request_type>``, ``<response_type>``, and ``<feedback_type>`` follow "
"all of the same rules as the ``<type>`` for a message. The "
"``<request_fieldname>``, ``<response_fieldname>``, and "
"``<feedback_fieldname>`` follow all of the same rules as the ``<fieldname>`` "
"for a message."
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:296
msgid ""
"For instance, the ``Fibonacci`` action definition contains the following:"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:298
msgid ""
"int32 order\n"
"---\n"
"int32[] sequence\n"
"---\n"
"int32[] sequence"
msgstr ""

#: ../../../source/Concepts/Basic/About-Interfaces.rst:306
msgid ""
"This is an action definition where the action client is sending a single "
"``int32`` field representing the number of Fibonacci steps to take, and "
"expecting the action server to produce an array of ``int32`` containing the "
"complete steps. Along the way, the action server may also provide an "
"intermediate array of ``int32`` containing the steps accomplished up until a "
"certain point."
msgstr ""
