# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation humble\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-01 08:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:8
msgid "Setting access controls"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:10
msgid "**Goal:** Limit the topics a node can use."
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:12
msgid "**Tutorial level:** Advanced"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:14
msgid "**Time:** 20 minutes"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:19
msgid "Contents"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:22
msgid "Background"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:24
msgid ""
"Permissions are quite flexible and can be used to control many behaviors "
"within the ROS graph."
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:26
msgid ""
"For this tutorial, we demonstrate a policy which only allows publishing "
"messages on the default ``chatter`` topic. This would prevent, for instance, "
"remapping the topic when launching the listener or using the same security "
"enclaves for another purpose."
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:29
msgid ""
"In order to enforce this policy, we need to update the ``permissions.xml`` "
"file and re-sign it before launching the node. This can be done by modifying "
"the permissions file by hand, or by using XML templates."
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:34
msgid "Modify ``permissions.xml``"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:36
msgid ""
"Begin by making a backup of your permissions files, and open ``permissions."
"xml`` for editing:"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:38
msgid ""
"$ cd ~/sros2_demo/demo_keys/enclaves/talker_listener/talker\n"
"$ mv permissions.p7s permissions.p7s~\n"
"$ mv permissions.xml permissions.xml~\n"
"$ vi permissions.xml"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:45
msgid ""
"We will be modifying the ``<allow_rule>`` for ``<publish>`` and "
"``<subscribe>``. The topics in this XML file use the DDS naming format, not "
"the ROS name. Find details on mapping topic names between ROS and DDS in the "
"`Topic and Service Names design document <https://design.ros2.org/articles/"
"topic_and_service_names.html#mapping-of-ros-2-topic-and-service-names-to-dds-"
"concepts>`_."
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:49
msgid ""
"Paste the following XML content into ``permission.xml``, save the file and "
"exit the text editor. This shows the ``chatter`` and ``rosout`` ROS topics "
"renamed to the DDS ``rt/chatter`` and ``rt/rosout`` topics, respectively:"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:52
msgid ""
"<dds xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:"
"noNamespaceSchemaLocation=\"http://www.omg.org/spec/DDS-SECURITY/20170901/"
"omg_shared_ca_permissions.xsd\">\n"
"  <permissions>\n"
"    <grant name=\"/talker_listener/talker\">\n"
"      <subject_name>CN=/talker_listener/talker</subject_name>\n"
"      <validity>\n"
"        <not_before>2021-06-01T16:57:53</not_before>\n"
"        <not_after>2031-05-31T16:57:53</not_after>\n"
"      </validity>\n"
"      <allow_rule>\n"
"        <domains>\n"
"          <id>0</id>\n"
"        </domains>\n"
"        <publish>\n"
"          <topics>\n"
"            <topic>rt/chatter</topic>\n"
"            <topic>rt/rosout</topic>\n"
"            <topic>rt/parameter_events</topic>\n"
"            <topic>*/talker/*</topic>\n"
"          </topics>\n"
"        </publish>\n"
"        <subscribe>\n"
"          <topics>\n"
"            <topic>rt/parameter_events</topic>\n"
"            <topic>*/talker/*</topic>\n"
"          </topics>\n"
"        </subscribe>\n"
"      </allow_rule>\n"
"      <allow_rule>\n"
"        <domains>\n"
"          <id>0</id>\n"
"        </domains>\n"
"        <publish>\n"
"          <topics>\n"
"            <topic>ros_discovery_info</topic>\n"
"          </topics>\n"
"        </publish>\n"
"        <subscribe>\n"
"          <topics>\n"
"            <topic>ros_discovery_info</topic>\n"
"          </topics>\n"
"        </subscribe>\n"
"      </allow_rule>\n"
"      <default>DENY</default>\n"
"    </grant>\n"
"  </permissions>\n"
"</dds>"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:102
msgid ""
"This policy allows the talker to publish on the ``chatter`` and the "
"``rosout`` topics. It also allows includes publish and subscribe permissions "
"needed for the talker node to manage parameters (a requirement for all "
"nodes). Discovery permissions remain unchanged from the original template."
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:108
msgid "Sign the policy file"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:110
msgid ""
"This next command creates the new S/MIME signed policy file ``permissions."
"p7s`` from the updated XML file ``permissions.xml``. The file must be signed "
"with the Permissions CA certificate, **which requires access to the "
"Permission CA private key**. If the private key has been protected, "
"additional steps may be required to unlock and use it according to your "
"security plan."
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:114
msgid ""
"$ openssl smime -sign -text -in permissions.xml -out permissions.p7s \\\n"
"  --signer permissions_ca.cert.pem \\\n"
"  -inkey ~/sros2_demo/demo_keys/private/permissions_ca.key.pem"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:122
msgid "Launch the node"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:124
msgid ""
"With the updated permissions in place, we can launch the node successfully "
"using the same command used in prior tutorials:"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:126
msgid ""
"$ ros2 run demo_nodes_cpp talker --ros-args --enclave /talker_listener/talker"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:130
msgid ""
"However, attempting to remap the ``chatter`` topic prevents the node from "
"launching (note that this requires the ``ROS_SECURITY_STRATEGY`` set to "
"``Enforce``)."
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:132
msgid ""
"$ ros2 run demo_nodes_cpp talker --ros-args --enclave /talker_listener/"
"talker \\\n"
"  --remap chatter:=not_chatter"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:139
msgid "Use the templates"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:141
msgid ""
"Security policies can quickly become confusing, so the ``sros2`` utilities "
"add the ability to create policies from templates. Do this by using the "
"`sample policy file <https://github.com/ros2/sros2/blob/rolling/sros2/test/"
"policies/sample.policy.xml#L1>`_ provided in the ``sros2`` repository. Let's "
"creates a policy for both the ``talker`` and the ``listener`` to only use "
"the ``chatter`` topic."
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:145
msgid ""
"Begin by downloading the ``sros2`` repository with the sample policy files:"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:147
msgid "$ git clone https://github.com/ros2/sros2.git /tmp/sros2"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:151
msgid ""
"Then use the ``create_permission`` verb while pointing to the sample policy "
"to generate the XML permission files:"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:153
msgid ""
"$ ros2 security create_permission demo_keystore \\\n"
"  /talker_listener/talker \\\n"
"  /tmp/sros2/sros2/test/policies/sample.policy.xml\n"
"$ ros2 security create_permission demo_keystore \\\n"
"  /talker_listener/listener \\\n"
"  /tmp/sros2/sros2/test/policies/sample.policy.xml"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:162
msgid ""
"These permission files allow nodes to only publish or subscribe to the "
"``chatter`` topic, and enable communications required for parameters."
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:164
msgid ""
"In one terminal with security enabled as in previous security tutorials, run "
"the ``talker`` demo program:"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:166
msgid "$ ros2 run demo_nodes_cpp talker --ros-args -e /talker_listener/talker"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:170
msgid "In another terminal do the same with the ``listener`` program:"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:172
msgid ""
"$ ros2 run demo_nodes_py listener --ros-args -e /talker_listener/listener"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:176
msgid ""
"At this point, your ``talker`` and ``listener`` nodes will be communicating "
"securely using explicit access control lists. However, the following attempt "
"for the ``listener`` node to subscribe to a topic other than ``chatter`` "
"will fail:"
msgstr ""

#: ../../../source/Tutorials/Advanced/Security/Access-Controls.rst:179
msgid ""
"$ ros2 run demo_nodes_py listener --ros-args --enclave /talker_listener/"
"listener \\\n"
"  --remap chatter:=not_chatter"
msgstr ""
