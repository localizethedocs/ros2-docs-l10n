# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation kilted\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-01 08:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:2
msgid "Subsequent Releases"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:4
msgid ""
"This guide explains how to release new versions of ROS packages that have "
"already been released before."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:8
msgid "Table of Contents"
msgstr "目录"

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:11
msgid "Be part of the release team"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:13
msgid ""
"If you are not part of the release team that has write access to the release "
"repository, follow :ref:`Join a release team <join-a-release-team>`."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:16
msgid "Install dependencies"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Install-Dependencies.rst:1
msgid ""
"Install tools that you will use in the upcoming steps according to your "
"platform:"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Install-Dependencies.rst:5
msgid "deb (e.g. Ubuntu)"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Install-Dependencies.rst:7
msgid "$ sudo apt install python3-bloom python3-catkin-pkg"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Install-Dependencies.rst:11
msgid "RPM (e.g. RHEL)"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Install-Dependencies.rst:13
msgid "$ sudo dnf install python3-bloom python3-catkin_pkg"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Install-Dependencies.rst:17
msgid "Other"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Install-Dependencies.rst:19
msgid "$ pip3 install -U bloom catkin_pkg"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Install-Dependencies.rst:23
msgid "Make sure you have rosdep initialized:"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Install-Dependencies.rst:25
msgid ""
"$ sudo rosdep init\n"
"$ rosdep update"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Install-Dependencies.rst:30
msgid ""
"Note that the ``rosdep init`` command may fail if it has already been "
"initialized in the past; this can safely be ignored."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:21
msgid "Set up a Personal Access Token"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:3
msgid ""
"If the file ``~/.config/bloom`` exists on your computer, it is likely that "
"you have done this before so you should skip this section."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:5
msgid ""
"During the release process, multiple HTTPS Git operations will be performed "
"that require password authentication. To avoid being repeatedly asked for a "
"password, a `Personal Access Token (PAT) <https://docs.github.com/en/"
"authentication/keeping-your-account-and-data-secure/creating-a-personal-"
"access-token>`_ will be set up. If you have multi-factor authentication "
"setup on your GitHub account, you **must** setup a Personal Access Token."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:9
msgid "Create a Personal Access Token by:"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:11
msgid ""
"Log in to GitHub and go to `Personal access tokens <https://github.com/"
"settings/tokens>`_."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:12
msgid "Click the **Generate new token** button."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:13
msgid "In the dropdown, select **Generate new token (classic)**"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:14
msgid "Set **Note** to something like ``Bloom token``."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:15
msgid "Set **Expiration** to **No expiration**."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:16
msgid "Tick the ``public_repo`` and ``workflow`` checkboxes."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:17
msgid "Click the **Generate token** button."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:19
msgid ""
"After you have created the token, you will end up back at the *Personal "
"access tokens* page. **Copy the alphanumeric token** that is highlighted in "
"green."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:22
msgid ""
"Save your GitHub username and PAT to a new file called ``~/.config/bloom``, "
"with the format below:"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Personal-Access-Token.rst:24
msgid ""
"{\n"
"   \"github_user\": \"<your-github-username>\",\n"
"   \"oauth_token\": \"<token-you-created-for-bloom>\"\n"
"}"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:26
msgid "Ensure repositories are up-to-date"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Ensure-Repositories-Are-Up-To-Date.rst:1
msgid "Make sure that:"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Ensure-Repositories-Are-Up-To-Date.rst:3
msgid "Your repository is hosted on a remote such as GitHub."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Ensure-Repositories-Are-Up-To-Date.rst:4
msgid ""
"You have a clone of the repository on your computer and are on the right "
"branch."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Ensure-Repositories-Are-Up-To-Date.rst:5
msgid "Both the remote repository and your clone are up-to-date."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:31
msgid "Updating Changelog"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:33
msgid ""
"For your users and for the developers, keep the changelog concise and up to "
"date."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:35
msgid "$ catkin_generate_changelog"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Clean-Up-Changelog.rst:1
msgid ""
"Open all ``CHANGELOG.rst`` files in an editor. You will see that "
"``catkin_generate_changelog`` has auto-generated a forthcoming section with "
"notes from commit messages:"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Clean-Up-Changelog.rst:4
msgid ""
"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
"Changelog for package your_package\n"
"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
"\n"
"Forthcoming\n"
"-----------\n"
"* you can modify this commit message\n"
"* and this"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Clean-Up-Changelog.rst:15
msgid ""
"Clean up the list of commit messages to concisely convey the notable changes "
"that have been made to the packages since the last release, and **commit all "
"the CHANGELOG.rst files.** Do not modify the ``Forthcoming`` header."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:42
msgid "Bump the package version"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Bump-Package-Version.rst:1
msgid ""
"Every release of the package must have a unique version number higher than "
"the previous release."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Bump-Package-Version.rst:3
msgid "Run:"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Bump-Package-Version.rst:5
msgid "$ catkin_prepare_release"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Bump-Package-Version.rst:9
msgid "which performs the following:"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Bump-Package-Version.rst:11
msgid "increases the package version in ``package.xml``"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Bump-Package-Version.rst:12
msgid ""
"replaces the heading ``Forthcoming`` with ``version (date)`` (e.g. ``0.0.1 "
"(2022-01-08)``) in ``CHANGELOG.rst``"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Bump-Package-Version.rst:13
msgid "commits those changes"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Bump-Package-Version.rst:14
msgid "creates a tag (e.g. ``0.0.1``)"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Bump-Package-Version.rst:15
msgid "pushes the changes and the tag to your remote repository"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Bump-Package-Version.rst:19
msgid ""
"By default the patch version of the package is incremented, such as from "
"``0.0.0`` to ``0.0.1``. To increment the minor or major version instead, run "
"``catkin_prepare_release --bump minor`` or ``catkin_prepare_release --bump "
"major``. For more details, see ``catkin_prepare_release --help``."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Bump-Package-Version.rst:25
msgid ""
"If your repository has a strict merge rule like ``Require a pull request "
"before merging``, you will need to create a pull request with the changes/"
"tag generated by ``catkin_prepare_release`` and then merge that, since you "
"cannot directly push to the branch. Depending on your repository's pull "
"request merge settings (such as squash merge or rebase merge), merging the "
"pull request may change the SHA of the version commit. In such cases, you "
"will need to manually re-tag the version commit after merging to ensure the "
"tag points to the correct commit."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:47
msgid "Bloom Release"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:49
msgid ""
"Run the following command, replacing ``my_repo`` with the name of your "
"repository with the packages:"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:51
msgid "$ bloom-release --rosdistro rolling my_repo"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:55
msgid ""
"Bloom will automatically create a pull request for you against `rosdistro "
"<https://github.com/ros/rosdistro>`_."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:59
msgid ""
"By default, bloom will release all packages in the source repository. To "
"selectively block the release of some packages for a particular ``rolling``, "
"add ``rolling.ignored`` files to the ``master`` branch of the release "
"repository. In each file, list the name of the package, one per line, to "
"block the release of the package. The `rosidl-release <https://github.com/"
"ros2-gbp/rosidl-release>`_ repository may serve as a useful reference for "
"this configuration."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/Subsequent-Releases.rst:65
msgid "Next Steps"
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Next-Steps.rst:1
msgid ""
"Once your pull request has been submitted, usually within one or two days, "
"one of the maintainers of rosdistro will review and merge your Pull Request. "
"If your package build is successful, in 24-48 hours your packages will "
"become available in the **ros-testing** repository, where you can :doc:`test "
"your pre-release binaries <../../../Installation/Testing>`."
msgstr ""

#: ../../../source/How-To-Guides/Releasing/_Next-Steps.rst:4
msgid ""
"Approximately every two to four weeks, the distribution's release manager "
"manually synchronizes the contents of ros-testing into the main ROS "
"repository. This is when your packages actually become available to the rest "
"of the ROS community. To get updates on when the next synchronization (sync) "
"is coming, subscribe to the `Packaging and Release Management Category on "
"ROS Discourse <https://discourse.ros.org/c/release/16>`_."
msgstr ""
