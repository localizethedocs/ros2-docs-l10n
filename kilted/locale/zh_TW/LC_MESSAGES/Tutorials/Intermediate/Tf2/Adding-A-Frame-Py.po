# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation kilted\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:6
msgid "Adding a frame (Python)"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:8
msgid "**Goal:** Learn how to to add an extra frame to tf2."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:10
msgid "**Tutorial level:** Intermediate"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:12
msgid "**Time:** 15 minutes"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:16
msgid "Contents"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:19
msgid "Background"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:21
msgid ""
"In previous tutorials, we recreated the turtle demo by writing a :doc:`tf2 "
"broadcaster <./Writing-A-Tf2-Broadcaster-Py>` and a :doc:`tf2 listener <./"
"Writing-A-Tf2-Listener-Py>`. This tutorial will teach you how to add extra "
"fixed and dynamic frames to the transformation tree. In fact, adding a frame "
"in tf2 is very similar to creating the tf2 broadcaster, but this example "
"will show you some additional features of tf2."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:25
msgid ""
"For many tasks related to transformations, it is easier to think inside a "
"local frame. For example, it is easiest to reason about laser scan "
"measurements in a frame at the center of the laser scanner. tf2 allows you "
"to define a local frame for each sensor, link, or joint in your system. When "
"transforming from one frame to another, tf2 will take care of all the hidden "
"intermediate frame transformations that are introduced."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:31
msgid "tf2 tree"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:33
msgid ""
"tf2 builds up a tree structure of frames and, thus, does not allow a closed "
"loop in the frame structure. This means that a frame only has one single "
"parent, but it can have multiple children. Currently, our tf2 tree contains "
"three frames: ``world``, ``turtle1`` and ``turtle2``. The two turtle frames "
"are children of the ``world`` frame. If we want to add a new frame to tf2, "
"one of the three existing frames needs to be the parent frame, and the new "
"one will become its child frame."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:42
msgid "Tasks"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:45
msgid "1 Write the fixed frame broadcaster"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:47
msgid ""
"In our turtle example, we'll add a new frame ``carrot1``, which will be the "
"child of the ``turtle1``. This frame will serve as the goal for the second "
"turtle."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:50
msgid ""
"Let's first create the source files. Go to the ``learning_tf2_py`` package "
"we created in the previous tutorials. Inside the ``src/learning_tf2_py/"
"learning_tf2_py`` directory download the fixed frame broadcaster code by "
"entering the following command:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:56
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:183
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:201
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:223
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:299
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:414
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:432
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:454
msgid "Linux"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:58
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:64
msgid ""
"$ wget https://raw.githubusercontent.com/ros/geometry_tutorials/rolling/"
"turtle_tf2_py/turtle_tf2_py/fixed_frame_tf2_broadcaster.py"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:62
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:189
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:207
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:229
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:305
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:420
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:438
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:460
msgid "macOS"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:68
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:193
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:213
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:235
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:311
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:424
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:444
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:466
msgid "Windows"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:70
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:237
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:313
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:469
msgid "In a Windows command line prompt:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:72
msgid ""
"$ curl -sk https://raw.githubusercontent.com/ros/geometry_tutorials/rolling/"
"turtle_tf2_py/turtle_tf2_py/fixed_frame_tf2_broadcaster.py -o "
"fixed_frame_tf2_broadcaster.py"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:76
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:243
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:319
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:475
msgid "Or in powershell:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:78
msgid ""
"$ curl https://raw.githubusercontent.com/ros/geometry_tutorials/rolling/"
"turtle_tf2_py/turtle_tf2_py/fixed_frame_tf2_broadcaster.py -o "
"fixed_frame_tf2_broadcaster.py"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:82
msgid "Now open the file called ``fixed_frame_tf2_broadcaster.py``."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:84
msgid ""
"from geometry_msgs.msg import TransformStamped\n"
"\n"
"import rclpy\n"
"from rclpy.executors import ExternalShutdownException\n"
"from rclpy.node import Node\n"
"\n"
"from tf2_ros import TransformBroadcaster\n"
"\n"
"\n"
"class FixedFrameBroadcaster(Node):\n"
"\n"
"   def __init__(self):\n"
"       super().__init__('fixed_frame_tf2_broadcaster')\n"
"       self.tf_broadcaster = TransformBroadcaster(self)\n"
"       self.timer = self.create_timer(0.1, self.broadcast_timer_callback)\n"
"\n"
"   def broadcast_timer_callback(self):\n"
"       t = TransformStamped()\n"
"\n"
"       t.header.stamp = self.get_clock().now().to_msg()\n"
"       t.header.frame_id = 'turtle1'\n"
"       t.child_frame_id = 'carrot1'\n"
"       t.transform.translation.x = 0.0\n"
"       t.transform.translation.y = 2.0\n"
"       t.transform.translation.z = 0.0\n"
"       t.transform.rotation.x = 0.0\n"
"       t.transform.rotation.y = 0.0\n"
"       t.transform.rotation.z = 0.0\n"
"       t.transform.rotation.w = 1.0\n"
"\n"
"       self.tf_broadcaster.sendTransform(t)\n"
"\n"
"\n"
"def main():\n"
"    try:\n"
"        with rclpy.init():\n"
"            node = FixedFrameBroadcaster()\n"
"            rclpy.spin(node)\n"
"    except (KeyboardInterrupt, ExternalShutdownException):\n"
"        pass"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:127
msgid ""
"The code is very similar to the tf2 broadcaster tutorial example and the "
"only difference is that the transform here does not change over time."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:130
msgid "1.1 Examine the code"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:132
msgid ""
"Let's take a look at the key lines in this piece of code. Here we create a "
"new transform, from the parent ``turtle1`` to the new child ``carrot1``. The "
"``carrot1`` frame is 2 meters offset in y axis in terms of the ``turtle1`` "
"frame."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:136
msgid ""
"t = TransformStamped()\n"
"\n"
"t.header.stamp = self.get_clock().now().to_msg()\n"
"t.header.frame_id = 'turtle1'\n"
"t.child_frame_id = 'carrot1'\n"
"t.transform.translation.x = 0.0\n"
"t.transform.translation.y = 2.0\n"
"t.transform.translation.z = 0.0"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:148
msgid "1.2 Add an entry point"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:150
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:390
msgid ""
"To allow the ``ros2 run`` command to run your node, you must add the entry "
"point to ``setup.py`` (located in the ``src/learning_tf2_py`` directory)."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:152
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:392
msgid "Add the following line between the ``'console_scripts':`` brackets:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:154
msgid ""
"'fixed_frame_tf2_broadcaster = learning_tf2_py.fixed_frame_tf2_broadcaster:"
"main',"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:159
msgid "1.3 Write the launch file"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:161
msgid ""
"Now let's create a launch file for this example. With your text editor, "
"create a new file called ``turtle_tf2_fixed_frame_demo_launch.py`` in the "
"``src/learning_tf2_py/launch`` directory, and add the following lines:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:164
msgid ""
"from launch import LaunchDescription\n"
"from launch.actions import IncludeLaunchDescription\n"
"from launch.substitutions import PathJoinSubstitution\n"
"from launch_ros.actions import Node\n"
"from launch_ros.substitutions import FindPackageShare\n"
"\n"
"\n"
"def generate_launch_description():\n"
"    return LaunchDescription([\n"
"        IncludeLaunchDescription(\n"
"            PathJoinSubstitution([\n"
"                FindPackageShare('learning_tf2_py'), 'launch', "
"'turtle_tf2_demo_launch.py'])\n"
"        ),\n"
"        Node(\n"
"            package='learning_tf2_py',\n"
"            executable='fixed_frame_tf2_broadcaster',\n"
"            name='fixed_broadcaster',\n"
"        ),\n"
"    ])\n"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:168
msgid ""
"This launch file imports the required packages and then creates a "
"``demo_nodes`` variable that will store nodes that we created in the "
"previous tutorial's launch file."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:170
msgid ""
"The last part of the code will add our fixed ``carrot1`` frame to the "
"turtlesim world using our ``fixed_frame_tf2_broadcaster`` node."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:172
msgid ""
"        Node(\n"
"            package='learning_tf2_py',\n"
"            executable='fixed_frame_tf2_broadcaster',\n"
"            name='fixed_broadcaster',\n"
"        ),\n"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:177
msgid "1.4 Build"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:179
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:410
msgid ""
"Run ``rosdep`` in the root of your workspace to check for missing "
"dependencies."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:185
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:416
msgid "$ rosdep install -i --from-path src --rosdistro rolling -y"
msgstr "$ rosdep install -i --from-path src --rosdistro rolling -y"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:191
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:195
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:422
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:426
msgid ""
"rosdep only runs on Linux, so you will need to install ``geometry_msgs`` and "
"``turtlesim`` dependencies yourself"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:197
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:428
msgid "Still in the root of your workspace, build your package:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:203
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:209
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:434
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:440
msgid "$ colcon build --packages-select learning_tf2_py"
msgstr "$ colcon build --packages-select learning_tf2_py"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:215
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:446
msgid "$ colcon build --merge-install --packages-select learning_tf2_py"
msgstr "$ colcon build --merge-install --packages-select learning_tf2_py"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:219
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:450
msgid ""
"Open a new terminal, navigate to the root of your workspace, and source the "
"setup files:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:225
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:231
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:456
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:462
msgid "$ . install/setup.bash"
msgstr "$ . install/setup.bash"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:239
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:245
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:471
msgid "$ call install\\setup.bat"
msgstr "$ call install\\setup.bat"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:250
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:482
msgid "1.5 Run"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:252
msgid "Now you can start the turtle broadcaster demo:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:254
msgid "$ ros2 launch learning_tf2_py turtle_tf2_fixed_frame_demo_launch.py"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:258
msgid ""
"You should notice that the new ``carrot1`` frame appeared in the "
"transformation tree."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:262
msgid ""
"If you drive the first turtle around, you should notice that the behavior "
"didn't change from the previous tutorial, even though we added a new frame. "
"That's because adding an extra frame does not affect the other frames and "
"our listener is still using the previously defined frames."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:265
msgid ""
"Therefore if we want our second turtle to follow the carrot instead of the "
"first turtle, we need to change value of the ``target_frame``. This can be "
"done two ways. One way is to pass the ``target_frame`` argument to the "
"launch file directly from the console:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:269
msgid ""
"$ ros2 launch learning_tf2_py turtle_tf2_fixed_frame_demo_launch.py "
"target_frame:=carrot1"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:273
msgid ""
"The second way is to update the launch file. To do so, open the "
"``turtle_tf2_fixed_frame_demo_launch.py`` file, and add the "
"``'target_frame': 'carrot1'`` parameter via ``launch_arguments`` argument."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:276
msgid ""
"def generate_launch_description():\n"
"    demo_nodes = IncludeLaunchDescription(\n"
"        ...,\n"
"        launch_arguments={'target_frame': 'carrot1'}.items(),\n"
"        )"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:284
msgid ""
"Now rebuild the package, restart the ``turtle_tf2_fixed_frame_demo_launch."
"py``, and you'll see the second turtle following the carrot instead of the "
"first turtle!"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:289
msgid "2 Write the dynamic frame broadcaster"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:291
msgid ""
"The extra frame we published in this tutorial is a fixed frame that doesn't "
"change over time in relation to the parent frame. However, if you want to "
"publish a moving frame you can code the broadcaster to change the frame over "
"time. Let's change our ``carrot1`` frame so that it changes relative to "
"``turtle1`` frame over time. Go to the ``learning_tf2_py`` package we "
"created in the previous tutorial. Inside the ``src/learning_tf2_py/"
"learning_tf2_py`` directory download the dynamic frame broadcaster code by "
"entering the following command:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:301
#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:307
msgid ""
"$ wget https://raw.githubusercontent.com/ros/geometry_tutorials/rolling/"
"turtle_tf2_py/turtle_tf2_py/dynamic_frame_tf2_broadcaster.py"
msgstr ""
"$ wget https://raw.githubusercontent.com/ros/geometry_tutorials/rolling/"
"turtle_tf2_py/turtle_tf2_py/dynamic_frame_tf2_broadcaster.py"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:315
msgid ""
"$ curl -sk https://raw.githubusercontent.com/ros/geometry_tutorials/rolling/"
"turtle_tf2_py/turtle_tf2_py/dynamic_frame_tf2_broadcaster.py -o "
"dynamic_frame_tf2_broadcaster.py"
msgstr ""
"$ curl -sk https://raw.githubusercontent.com/ros/geometry_tutorials/rolling/"
"turtle_tf2_py/turtle_tf2_py/dynamic_frame_tf2_broadcaster.py -o "
"dynamic_frame_tf2_broadcaster.py"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:321
msgid ""
"$ curl https://raw.githubusercontent.com/ros/geometry_tutorials/rolling/"
"turtle_tf2_py/turtle_tf2_py/dynamic_frame_tf2_broadcaster.py -o "
"dynamic_frame_tf2_broadcaster.py"
msgstr ""
"$ curl https://raw.githubusercontent.com/ros/geometry_tutorials/rolling/"
"turtle_tf2_py/turtle_tf2_py/dynamic_frame_tf2_broadcaster.py -o "
"dynamic_frame_tf2_broadcaster.py"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:325
msgid "Now open the file called ``dynamic_frame_tf2_broadcaster.py``:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:327
msgid ""
"import math\n"
"\n"
"from geometry_msgs.msg import TransformStamped\n"
"\n"
"import rclpy\n"
"from rclpy.executors import ExternalShutdownException\n"
"from rclpy.node import Node\n"
"\n"
"from tf2_ros import TransformBroadcaster\n"
"\n"
"\n"
"class DynamicFrameBroadcaster(Node):\n"
"\n"
"    def __init__(self):\n"
"        super().__init__('dynamic_frame_tf2_broadcaster')\n"
"        self.tf_broadcaster = TransformBroadcaster(self)\n"
"        self.timer = self.create_timer(0.1, self.broadcast_timer_callback)\n"
"\n"
"    def broadcast_timer_callback(self):\n"
"        seconds, _ = self.get_clock().now().seconds_nanoseconds()\n"
"        x = seconds * math.pi\n"
"\n"
"        t = TransformStamped()\n"
"        t.header.stamp = self.get_clock().now().to_msg()\n"
"        t.header.frame_id = 'turtle1'\n"
"        t.child_frame_id = 'carrot1'\n"
"        t.transform.translation.x = 10 * math.sin(x)\n"
"        t.transform.translation.y = 10 * math.cos(x)\n"
"        t.transform.translation.z = 0.0\n"
"        t.transform.rotation.x = 0.0\n"
"        t.transform.rotation.y = 0.0\n"
"        t.transform.rotation.z = 0.0\n"
"        t.transform.rotation.w = 1.0\n"
"\n"
"        self.tf_broadcaster.sendTransform(t)\n"
"\n"
"\n"
"def main():\n"
"    try:\n"
"        with rclpy.init():\n"
"            node = DynamicFrameBroadcaster()\n"
"            rclpy.spin(node)\n"
"    except (KeyboardInterrupt, ExternalShutdownException):\n"
"        pass"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:375
msgid "2.1 Examine the code"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:377
msgid ""
"Instead of a fixed definition of our x and y offsets, we are using the "
"``sin()`` and ``cos()`` functions on the current time so that the offset of "
"``carrot1`` is constantly changing."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:379
msgid ""
"seconds, _ = self.get_clock().now().seconds_nanoseconds()\n"
"x = seconds * math.pi\n"
"...\n"
"t.transform.translation.x = 10 * math.sin(x)\n"
"t.transform.translation.y = 10 * math.cos(x)"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:388
msgid "2.2 Add an entry point"
msgstr "2.2 增添進入點"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:394
msgid ""
"'dynamic_frame_tf2_broadcaster = learning_tf2_py."
"dynamic_frame_tf2_broadcaster:main',"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:399
msgid "2.3 Write the launch file"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:401
msgid ""
"To test this code, create a new launch file "
"``turtle_tf2_dynamic_frame_demo_launch.py`` in the ``src/learning_tf2_py/"
"launch`` directory and paste the following code:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:403
msgid ""
"from launch import LaunchDescription\n"
"from launch.actions import IncludeLaunchDescription\n"
"from launch.substitutions import PathJoinSubstitution\n"
"from launch_ros.actions import Node\n"
"from launch_ros.substitutions import FindPackageShare\n"
"\n"
"\n"
"def generate_launch_description():\n"
"    return LaunchDescription([\n"
"        IncludeLaunchDescription(\n"
"            PathJoinSubstitution([\n"
"                FindPackageShare('learning_tf2_py'), 'launch', "
"'turtle_tf2_demo_launch.py']),\n"
"            launch_arguments={'target_frame': 'carrot1'}.items(),\n"
"        ),\n"
"        Node(\n"
"            package='learning_tf2_py',\n"
"            executable='dynamic_frame_tf2_broadcaster',\n"
"            name='dynamic_broadcaster',\n"
"        ),\n"
"    ])\n"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:408
msgid "2.4 Build"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:477
msgid "$ .\\install\\setup.ps1"
msgstr "$ .\\install\\setup.ps1"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:484
msgid "Now you can start the dynamic frame demo:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:486
msgid "$ ros2 launch learning_tf2_py turtle_tf2_dynamic_frame_demo_launch.py"
msgstr "$ ros2 launch learning_tf2_py turtle_tf2_dynamic_frame_demo_launch.py"

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:490
msgid ""
"You should see that the second turtle is following the carrot's position "
"that is constantly changing."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:495
msgid "Summary"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Adding-A-Frame-Py.rst:497
msgid ""
"In this tutorial, you learned about the tf2 transformation tree, its "
"structure, and its features. You also learned that it is easiest to think "
"inside a local frame, and learned to add extra fixed and dynamic frames for "
"that local frame."
msgstr ""
