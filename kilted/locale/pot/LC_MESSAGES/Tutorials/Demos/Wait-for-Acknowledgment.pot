# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation kilted\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:2
msgid "Wait for acknowledgment"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:4
msgid "**Goal:** Wait for acknowledgment of messages sent by a publisher."
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:6
msgid "**Tutorial level:** Advanced"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:8
msgid "**Time:** 10 minutes"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:12
msgid "Table of Contents"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:15
msgid "Overview"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:17
msgid ""
"In Publisher-Subscriber architecture, messages are sent from the publisher "
"to the subscribers, and the publisher does not have any built-in mechanism "
"to confirm that the subscriber has received the messages. This feature "
"enables the publisher to wait for acknowledgment of messages it sent. This "
"is useful in scenarios where the publisher needs to ensure that the "
"subscriber has received the message before proceeding with further actions, "
"such as sending more messages or performing other operations."
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:22
msgid "RMW Support"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:24
msgid "Wait for acknowledgment requires RMW implementation support."
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:26
msgid "Wait-for-Acknowledgment Support Status"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:29
msgid "rmw_fastrtps"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:30
#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:32
#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:34
msgid "supported"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:31
msgid "rmw_connextdds"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:33
msgid "rmw_cyclonedds"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:36
msgid ""
"The publisher's :ref:`QoS reliability policy <about_qos_policies>` needs to "
"be ``RELIABLE`` to use the wait for acknowledgment feature, otherwise the "
"publisher will not wait for acknowledgment."
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:39
msgid "Installing the demo"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:41
msgid ""
"See the :doc:`installation instructions <../../Installation>` for details on "
"installing ROS 2."
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:43
msgid ""
"If you've installed ROS 2 from packages, ensure that you have ``ros-rolling-"
"examples-rclcpp-minimal-publisher`` and ``ros-rolling-examples-rclcpp-"
"minimal-subscriber`` installed. If you downloaded the archive or built ROS 2 "
"from source, it will already be part of the installation."
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:47
msgid "Running the demo"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:49
msgid ""
"This demo shows how to use the wait for acknowledgment feature in the "
"publisher to ensure that messages sent by the publisher are acknowledged by "
"all subscriptions."
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:51
msgid ""
"https://github.com/ros2/examples/blob/rolling/rclcpp/topics/"
"minimal_publisher/member_function_with_wait_for_all_acked.cpp"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:53
msgid ""
"The publisher can use the ``wait_for_all_acked`` method to wait for message "
"acknowledgments within a specified timeout before shutdown by the signal."
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:55
msgid ""
"We can start the demo by running the ``publisher_wait_for_all_acked`` and "
"``subscriber_member_function`` executables from the "
"``examples_rclcpp_minimal_publisher`` package (don't forget to source the "
"setup file first):"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:57
msgid "Start the subscriber in one terminal:"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:59
msgid ""
"$ ros2 run examples_rclcpp_minimal_subscriber subscriber_member_function\n"
"[INFO] [1743121567.030751270] [minimal_subscriber]: I heard: 'Hello, world! "
"0'\n"
"[INFO] [1743121567.530981660] [minimal_subscriber]: I heard: 'Hello, world! "
"1'\n"
"[INFO] [1743121568.031032935] [minimal_subscriber]: I heard: 'Hello, world! "
"2'\n"
"[INFO] [1743121568.531048458] [minimal_subscriber]: I heard: 'Hello, world! "
"3'\n"
"[INFO] [1743121569.031049351] [minimal_subscriber]: I heard: 'Hello, world! "
"4'\n"
"[INFO] [1743121569.530980327] [minimal_subscriber]: I heard: 'Hello, world! "
"5'\n"
"[INFO] [1743121570.030825871] [minimal_subscriber]: I heard: 'Hello, world! "
"6'\n"
"..."
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:71
msgid "Then start the publisher in another terminal:"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:73
msgid ""
"$ ros2 run examples_rclcpp_minimal_publisher publisher_wait_for_all_acked\n"
"[INFO] [1743121567.030353553] [minimal_publisher_with_wait_for_all_acked]: "
"Publishing: 'Hello, world! 0'\n"
"[INFO] [1743121567.530420788] [minimal_publisher_with_wait_for_all_acked]: "
"Publishing: 'Hello, world! 1'\n"
"[INFO] [1743121568.030461599] [minimal_publisher_with_wait_for_all_acked]: "
"Publishing: 'Hello, world! 2'\n"
"[INFO] [1743121568.530435646] [minimal_publisher_with_wait_for_all_acked]: "
"Publishing: 'Hello, world! 3'\n"
"[INFO] [1743121569.030431263] [minimal_publisher_with_wait_for_all_acked]: "
"Publishing: 'Hello, world! 4'\n"
"[INFO] [1743121569.530447106] [minimal_publisher_with_wait_for_all_acked]: "
"Publishing: 'Hello, world! 5'\n"
"[INFO] [1743121570.030353934] [minimal_publisher_with_wait_for_all_acked]: "
"Publishing: 'Hello, world! 6'\n"
"^C[INFO] [1743121570.344981639] [rclcpp]: signal_handler(signum=2)\n"
"[INFO] [1743121570.345398788] [minimal_publisher_with_wait_for_all_acked]: "
"All subscribers acknowledge messages"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:86
msgid ""
"When the publisher is terminated (e.g., by pressing :kbd:`Ctrl-C`), it will "
"wait for acknowledgment of all messages sent before shutdown. If all "
"subscribers acknowledge the messages, the publisher will print a message "
"indicating that all subscribers have acknowledged the messages. If not, it "
"will print a message indicating that not all subscribers acknowledged the "
"messages within the specified timeout."
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:91
msgid "Related content"
msgstr ""

#: ../../../source/Tutorials/Demos/Wait-for-Acknowledgment.rst:93
msgid ""
"`Wait-for-Acknowledgment example with rclpy <https://github.com/ros2/"
"examples/blob/rolling/rclpy/topics/minimal_publisher/"
"examples_rclpy_minimal_publisher/"
"publisher_member_function_with_wait_for_all_acked.py>`__."
msgstr ""
