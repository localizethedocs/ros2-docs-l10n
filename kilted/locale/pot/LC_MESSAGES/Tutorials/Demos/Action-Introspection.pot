# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation kilted\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-01 08:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:2
msgid "Configure action introspection"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:4
msgid ""
"**Goal:** Configure action introspection for an action client and an action "
"server."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:6
msgid "**Tutorial level:** Advanced"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:8
msgid "**Time:** 15 minutes"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:12
msgid "Table of Contents"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:15
msgid "Overview"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:17
msgid ""
"ROS 2 applications usually consist of actions to execute specific long-"
"running procedures or work in remote nodes. It is possible to introspect "
"action data communication with action introspection."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:20
msgid ""
"ROS 2 actions are built on topics and services, so action introspection is "
"based on :doc:`Service Introspection <Service-Introspection>`."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:22
msgid ""
"In this demo, we'll be highlighting how to configure action introspection "
"state for an action client and an action server and monitor action "
"communication with ``ros2 action echo``."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:25
msgid "Installing the demo"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:27
msgid ""
"See the :doc:`installation instructions <../../Installation>` for details on "
"installing ROS 2."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:29
msgid ""
"If you've installed ROS 2 binary packages, ensure that you have ``ros-"
"rolling-demo-nodes-cpp`` and ``ros-rolling-demo-nodes-py`` installed. If you "
"downloaded the archive or built ROS 2 from source, it will already be part "
"of the installation."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:33
msgid "Introspection Configuration State"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:35
msgid ""
"There are three configuration states for action introspection that are the "
"same states as service introspection."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:37
msgid "Action Introspection Configuration State"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:40
msgid "RCL_SERVICE_INTROSPECTION_OFF"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:41
msgid "Disabled"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:42
msgid "RCL_SERVICE_INTROSPECTION_METADATA"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:43
msgid "Only metadata without any user data contents"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:44
msgid "RCL_SERVICE_INTROSPECTION_CONTENTS"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:45
msgid "User data contents with metadata"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:48
msgid "Introspection demo"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:50
msgid ""
"This demo shows how to manage action introspection and monitor the action "
"data communication with using ``ros2 action echo``."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:53
msgid "Action server"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:55
msgid ""
"You can find the source code here: `fibonacci_action_server.py <https://"
"github.com/ros2/demos/blob/rolling/action_tutorials/action_tutorials_py/"
"action_tutorials_py/fibonacci_action_server.py>`__. "
"``FibonacciActionServer`` has a parameter named "
"``action_server_configure_introspection`` to configure the action "
"introspection state."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:58
msgid ""
"class FibonacciActionServer(Node):\n"
"...\n"
"    def on_post_set_parameters_callback(self, parameter_list):\n"
"        for param in parameter_list:\n"
"            if param.name != 'action_server_configure_introspection':\n"
"                continue\n"
"\n"
"            introspection_state = ServiceIntrospectionState.OFF\n"
"            if param.value == 'disabled':\n"
"                introspection_state = ServiceIntrospectionState.OFF\n"
"            elif param.value == 'metadata':\n"
"                introspection_state = ServiceIntrospectionState.METADATA\n"
"            elif param.value == 'contents':\n"
"                introspection_state = ServiceIntrospectionState.CONTENTS\n"
"\n"
"            self._action_server.configure_introspection(self.get_clock(),\n"
"                                                        qos_profile_system_default,\n"
"                                                        introspection_state)\n"
"            break\n"
"..."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:81
msgid ""
"If you want to try the C++ version, you can find the source code here: "
"`fibonacci_action_server.cpp <https://github.com/ros2/demos/blob/rolling/"
"action_tutorials/action_tutorials_cpp/src/fibonacci_action_server.cpp>`__."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:83
msgid ""
"Action introspection is disabled by default, so users need to enable it with "
"``action_server_configure_introspection`` parameter when the server starts "
"up. In this demo, ``FibonacciActionServer`` enables action introspection "
"when the value of the ``action_server_configure_introspection`` parameter is "
"``contents``."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:86
msgid ""
"$ ros2 run action_tutorials_py fibonacci_action_server --ros-args -p "
"action_server_configure_introspection:=contents"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:90
msgid ""
"To change action introspection state, we need to set the "
"``action_server_configure_introspection`` parameter as follows."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:92
#: ../../../source/Tutorials/Demos/Action-Introspection.rst:157
msgid "To change it to user data contents with metadata:"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:94
msgid ""
"$ ros2 param set /fibonacci_action_server "
"action_server_configure_introspection contents"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:98
#: ../../../source/Tutorials/Demos/Action-Introspection.rst:163
msgid "To change it to only metadata:"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:100
msgid ""
"$ ros2 param set /fibonacci_action_server "
"action_server_configure_introspection metadata"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:104
#: ../../../source/Tutorials/Demos/Action-Introspection.rst:169
msgid "To disable:"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:106
msgid ""
"$ ros2 param set /fibonacci_action_server "
"action_server_configure_introspection disabled"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:111
msgid "Action client"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:113
msgid ""
"You can find the source code here: `fibonacci_action_client.cpp <https://"
"github.com/ros2/demos/blob/rolling/action_tutorials/action_tutorials_cpp/src/"
"fibonacci_action_client.cpp>`__. ``FibonacciActionClient`` has a parameter "
"named ``action_client_configure_introspection`` to configure the action "
"introspection state."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:116
msgid ""
"namespace action_tutorials_cpp\n"
"{\n"
"class FibonacciActionClient : public rclcpp::Node\n"
"...\n"
"    auto post_set_parameter_callback =\n"
"      [this](const std::vector<rclcpp::Parameter> & parameters) {\n"
"        for (const rclcpp::Parameter & param : parameters) {\n"
"          if (param.get_name() != \"action_client_configure_introspection\") "
"{\n"
"            continue;\n"
"          }\n"
"\n"
"          rcl_service_introspection_state_t introspection_state = "
"RCL_SERVICE_INTROSPECTION_OFF;\n"
"\n"
"          if (param.as_string() == \"disabled\") {\n"
"            introspection_state = RCL_SERVICE_INTROSPECTION_OFF;\n"
"          } else if (param.as_string() == \"metadata\") {\n"
"            introspection_state = RCL_SERVICE_INTROSPECTION_METADATA;\n"
"          } else if (param.as_string() == \"contents\") {\n"
"            introspection_state = RCL_SERVICE_INTROSPECTION_CONTENTS;\n"
"          }\n"
"\n"
"          this->client_ptr_->configure_introspection(\n"
"            this->get_clock(), rclcpp::SystemDefaultsQoS(), "
"introspection_state);\n"
"          break;\n"
"        }\n"
"      };\n"
"..."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:146
msgid ""
"If you want to try the Python version, you can find the source code here: "
"`fibonacci_action_client.py <https://github.com/ros2/demos/blob/rolling/"
"action_tutorials/action_tutorials_py/action_tutorials_py/"
"fibonacci_action_client.py>`__."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:148
msgid ""
"And then, we start and configure ``FibonacciActionClient`` in the same way."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:150
msgid ""
"$ ros2 run action_tutorials_cpp fibonacci_action_client --ros-args -p "
"action_client_configure_introspection:=contents"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:154
msgid ""
"To change action introspection state, we need to set the "
"``action_client_configure_introspection`` parameter as follows. Note that "
"``FibonacciActionClient`` only runs in short time, so it is recommended to "
"set the parameter before running the client as above."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:159
msgid ""
"$ ros2 param set /fibonacci_action_client "
"action_client_configure_introspection contents"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:165
msgid ""
"$ ros2 param set /fibonacci_action_client "
"action_client_configure_introspection metadata"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:171
msgid ""
"$ ros2 param set /fibonacci_action_client "
"action_client_configure_introspection disabled"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:176
msgid "Introspect"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:178
msgid ""
"In this tutorial, the following is an example output with action "
"introspection state ``contents`` on both ``FibonacciActionServer`` and "
"``FibonacciActionClient``. To monitor action communication between "
"``FibonacciActionServer`` and ``FibonacciActionClient``, let's run it:"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:181
msgid ""
"$ ros2 action echo /fibonacci example_interfaces/action/Fibonacci --flow-"
"style\n"
"interface: GOAL_SERVICE\n"
"info:\n"
"  event_type: REQUEST_SENT\n"
"  stamp:\n"
"    sec: 1742070798\n"
"    nanosec: 400435819\n"
"  client_gid: [1, 15, 165, 231, 194, 197, 167, 157, 0, 0, 0, 0, 0, 0, 20, "
"4]\n"
"  sequence_number: 1\n"
"request: [{goal_id: {uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, "
"251, 210, 2, 231, 110]}, goal: {order: 10}}]\n"
"response: []\n"
"---\n"
"interface: GOAL_SERVICE\n"
"info:\n"
"  event_type: REQUEST_RECEIVED\n"
"  stamp:\n"
"    sec: 1742070798\n"
"    nanosec: 400706446\n"
"  client_gid: [1, 15, 165, 231, 194, 197, 167, 157, 0, 0, 0, 0, 0, 0, 20, "
"4]\n"
"  sequence_number: 1\n"
"request: [{goal_id: {uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, "
"251, 210, 2, 231, 110]}, goal: {order: 10}}]\n"
"response: []\n"
"---\n"
"interface: RESULT_SERVICE\n"
"info:\n"
"  event_type: REQUEST_SENT\n"
"  stamp:\n"
"    sec: 1742070798\n"
"    nanosec: 401486678\n"
"  client_gid: [1, 15, 165, 231, 194, 197, 167, 157, 0, 0, 0, 0, 0, 0, 24, "
"4]\n"
"  sequence_number: 1\n"
"request: [{goal_id: {uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, "
"251, 210, 2, 231, 110]}}]\n"
"response: []\n"
"---\n"
"interface: FEEDBACK_TOPIC\n"
"goal_id:\n"
"  uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, 251, 210, 2, 231, "
"110]\n"
"feedback:\n"
"  sequence: [0, 1, 1]\n"
"---\n"
"interface: STATUS_TOPIC\n"
"status_list: [{goal_info: {goal_id: {uuid: [230, 96, 12, 6, 100, 69, 69, 70, "
"220, 205, 135, 251, 210, 2, 231, 110]}, stamp: {sec: 1742070798, nanosec: "
"401146752}}, status: 2}]\n"
"---\n"
"interface: GOAL_SERVICE\n"
"info:\n"
"  event_type: RESPONSE_SENT\n"
"  stamp:\n"
"    sec: 1742070798\n"
"    nanosec: 401109161\n"
"  client_gid: [1, 15, 165, 231, 194, 197, 167, 157, 0, 0, 0, 0, 0, 0, 20, "
"4]\n"
"  sequence_number: 1\n"
"request: []\n"
"response: [{accepted: true, stamp: {sec: 0, nanosec: 0}}]\n"
"---\n"
"interface: RESULT_SERVICE\n"
"info:\n"
"  event_type: REQUEST_RECEIVED\n"
"  stamp:\n"
"    sec: 1742070798\n"
"    nanosec: 401579875\n"
"  client_gid: [1, 15, 165, 231, 194, 197, 167, 157, 0, 0, 0, 0, 0, 0, 24, "
"4]\n"
"  sequence_number: 1\n"
"request: [{goal_id: {uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, "
"251, 210, 2, 231, 110]}}]\n"
"response: []\n"
"---\n"
"interface: GOAL_SERVICE\n"
"info:\n"
"  event_type: RESPONSE_RECEIVED\n"
"  stamp:\n"
"    sec: 1742070798\n"
"    nanosec: 401234269\n"
"  client_gid: [1, 15, 165, 231, 194, 197, 167, 157, 0, 0, 0, 0, 0, 0, 20, "
"4]\n"
"  sequence_number: 1\n"
"request: []\n"
"response: [{accepted: true, stamp: {sec: 0, nanosec: 0}}]\n"
"---\n"
"interface: FEEDBACK_TOPIC\n"
"goal_id:\n"
"  uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, 251, 210, 2, 231, "
"110]\n"
"feedback:\n"
"  sequence: [0, 1, 1, 2]\n"
"---\n"
"interface: FEEDBACK_TOPIC\n"
"goal_id:\n"
"  uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, 251, 210, 2, 231, "
"110]\n"
"feedback:\n"
"  sequence: [0, 1, 1, 2, 3]\n"
"---\n"
"interface: FEEDBACK_TOPIC\n"
"goal_id:\n"
"  uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, 251, 210, 2, 231, "
"110]\n"
"feedback:\n"
"  sequence: [0, 1, 1, 2, 3, 5]\n"
"---\n"
"interface: FEEDBACK_TOPIC\n"
"goal_id:\n"
"  uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, 251, 210, 2, 231, "
"110]\n"
"feedback:\n"
"  sequence: [0, 1, 1, 2, 3, 5, 8]\n"
"---\n"
"interface: FEEDBACK_TOPIC\n"
"goal_id:\n"
"  uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, 251, 210, 2, 231, "
"110]\n"
"feedback:\n"
"  sequence: [0, 1, 1, 2, 3, 5, 8, 13]\n"
"---\n"
"interface: FEEDBACK_TOPIC\n"
"goal_id:\n"
"  uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, 251, 210, 2, 231, "
"110]\n"
"feedback:\n"
"  sequence: [0, 1, 1, 2, 3, 5, 8, 13, 21]\n"
"---\n"
"interface: FEEDBACK_TOPIC\n"
"goal_id:\n"
"  uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, 251, 210, 2, 231, "
"110]\n"
"feedback:\n"
"  sequence: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n"
"---\n"
"interface: FEEDBACK_TOPIC\n"
"goal_id:\n"
"  uuid: [230, 96, 12, 6, 100, 69, 69, 70, 220, 205, 135, 251, 210, 2, 231, "
"110]\n"
"feedback:\n"
"  sequence: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n"
"---\n"
"interface: RESULT_SERVICE\n"
"info:\n"
"  event_type: RESPONSE_SENT\n"
"  stamp:\n"
"    sec: 1742070807\n"
"    nanosec: 402339670\n"
"  client_gid: [1, 15, 165, 231, 194, 197, 167, 157, 0, 0, 0, 0, 0, 0, 24, "
"4]\n"
"  sequence_number: 1\n"
"request: []\n"
"response: [{status: 4, result: {sequence: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, "
"55]}}]\n"
"---\n"
"interface: RESULT_SERVICE\n"
"info:\n"
"  event_type: RESPONSE_RECEIVED\n"
"  stamp:\n"
"    sec: 1742070807\n"
"    nanosec: 402698784\n"
"  client_gid: [1, 15, 165, 231, 194, 197, 167, 157, 0, 0, 0, 0, 0, 0, 24, "
"4]\n"
"  sequence_number: 1\n"
"request: []\n"
"response: [{status: 4, result: {sequence: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, "
"55]}}]\n"
"---\n"
"interface: STATUS_TOPIC\n"
"status_list: [{goal_info: {goal_id: {uuid: [230, 96, 12, 6, 100, 69, 69, 70, "
"220, 205, 135, 251, 210, 2, 231, 110]}, stamp: {sec: 1742070798, nanosec: "
"401146752}}, status: 4}]\n"
"---\n"
"..."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:334
msgid ""
"You can see the ``interface: GOAL_SERVICE`` and ``interface: "
"RESULT_SERVICE``, those introspection service events take place in both "
"``FibonacciActionServer`` and ``FibonacciActionClient``. And you can also "
"see ``interface: FEEDBACK_TOPIC`` and ``interface: STATUS_TOPIC`` data, "
"those topics are published by ``FibonacciActionServer`` and subscribed by "
"``FibonacciActionClient``."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:337
msgid ""
"Now you can see the action communication between ``FibonacciActionServer`` "
"and ``FibonacciActionClient`` with ``ros2 action echo``."
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:340
msgid "Related content"
msgstr ""

#: ../../../source/Tutorials/Demos/Action-Introspection.rst:342
msgid ""
"`Action Introspection REP-2018 <https://github.com/ros-infrastructure/rep/"
"pull/405>`__."
msgstr ""
