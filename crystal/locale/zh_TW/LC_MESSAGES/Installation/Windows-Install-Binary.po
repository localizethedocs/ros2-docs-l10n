# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Robotics
# This file is distributed under the same license as the ros2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ros2 documentation crystal\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Installation/Windows-Install-Binary.rst:2
msgid "Installing ROS 2 on Windows"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:6
msgid "Table of Contents"
msgstr "目次表"

#: ../../../source/Installation/Windows-Install-Binary.rst:8
msgid ""
"This page explains how to install ROS 2 on Windows from a pre-built binary "
"package."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:11
msgid "System requirements"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:13
msgid "Only Windows 10 is supported."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:18
msgid "Installing prerequisites"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:21
msgid "Install Chocolatey"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:23
msgid ""
"Chocolatey is a package manager for Windows, install it by following their "
"installation instructions:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:25
msgid "https://chocolatey.org/"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:27
msgid "You'll use Chocolatey to install some other developer tools."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:30
msgid "Install Python"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:32
msgid ""
"Open a Command Prompt and type the following to install Python via "
"Chocolatey:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:34
msgid "> choco install -y python"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:39
msgid "Install OpenSSL"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:41
msgid ""
"Download an OpenSSL installer from `this page <https://slproweb.com/products/"
"Win32OpenSSL.html>`__. Scroll to the bottom of the page and download *Win64 "
"OpenSSL v1.0.2*. Don't download the Win32 or Light versions."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:43
msgid ""
"Run the installer with default parameters. The following commands assume you "
"used the default installation directory:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:45
msgid "``setx -m OPENSSL_CONF C:\\OpenSSL-Win64\\bin\\openssl.cfg``"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:47
msgid ""
"You will need to append the OpenSSL-Win64 bin folder to your PATH. You can "
"do this by clicking the Windows icon, typing \"Environment Variables\", then "
"clicking on \"Edit the system environment variables\". In the resulting "
"dialog, click \"Environment Variables\", then click \"Path\" on the bottom "
"pane, finally click \"Edit\" and add the path below."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:51
msgid "``C:\\OpenSSL-Win64\\bin\\``"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:54
msgid "Install Visual Studio"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:56
msgid "**A. Install Visual Studio 2015 if using Ardent or earlier**"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:58
msgid ""
"If you already have a paid version of Visual Studio 2015 (Professional, "
"Enterprise), skip this step."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:60
msgid ""
"Microsoft provides a free of charge version of Visual Studio 2015, named "
"Community, which can be used to build applications that use ROS 2:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:62
msgid "https://www.visualstudio.com/vs/older-downloads/"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:64
msgid ""
"Make sure that the Visual C++ features are installed. First choose 'Custom "
"installation':"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:68
msgid "Next check Visual C++:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:72
msgid "Ensure that the correct features will be installed:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:77
msgid "**B. Install Visual Studio 2017 if using Bouncy or a nightly**"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:79
msgid ""
"If you already have a paid version of Visual Studio 2017 (Professional, "
"Enterprise), skip this step."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:81
msgid ""
"Visual Studio 2017 v15.8 seems to have a compiler bug preventing from "
"building some ROS 2 packages. Please try installing an older version of "
"Visual Studio 2017."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:83
msgid ""
"Microsoft provides a free of charge version of Visual Studio 2017, named "
"Community, which can be used to build applications that use ROS 2:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:85
msgid "https://visualstudio.microsoft.com/downloads/"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:87
msgid ""
"Make sure that the Visual C++ features are installed. An easy way to make "
"sure they're installed is to select the ``Desktop development with C++`` "
"workflow during the install."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:94
msgid "Install additional DDS implementations (optional)"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:96
msgid ""
"If you would like to use another DDS or RTPS vendor besides the default, "
"eProsima's Fast RTPS, you can find instructions `here <DDS-Implementations>`."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:99
msgid "Install OpenCV"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:101
msgid "Some of the examples require OpenCV to be installed."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:103
msgid ""
"You can download a precompiled version of OpenCV 3.4.1 from https://github."
"com/ros2/ros2/releases/download/opencv-archives/opencv-3.4.1-vc15.VS2017.zip"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:105
msgid ""
"Assuming you unpacked it to ``C:\\opencv``\\ , type the following on a "
"Command Prompt (requires Admin privileges):"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:107
msgid "setx -m OpenCV_DIR C:\\opencv"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:111
msgid ""
"Since you are using a precompiled ROS version, we have to tell it where to "
"find the OpenCV libraries. You have to extend the ``PATH`` variable to ``c:"
"\\opencv\\x64\\vc15\\bin``"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:114
msgid "In ardent and earlier"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:116
msgid ""
"These releases used OpenCV 2. You can download a precompiled version of "
"OpenCV 2.4.13.2 from https://github.com/ros2/ros2/releases/download/release-"
"beta2/opencv-2.4.13.2-vc14.VS2015.zip"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:118
msgid ""
"Since you are using a precompiled ROS version, we have to tell it where to "
"find the OpenCV libraries. Assuming you were extracting OpenCV to ``c:\\`` "
"you have to extend your ``PATH`` variable to ``c:\\opencv-2.4.13.2-vc14."
"VS2015\\x64\\vc14\\bin``"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:121
msgid "Install dependencies"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:123
msgid ""
"There are a few dependencies not available in the Chocolatey package "
"database. In order to ease the manual installation process, we provide the "
"necessary Chocolatey packages."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:125
msgid "As some chocolatey packages rely on it, we start by installing CMake"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:127
msgid "> choco install -y cmake"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:131
msgid ""
"You will need to append the CMake bin folder ``C:\\Program "
"Files\\CMake\\bin`` to your PATH."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:133
msgid ""
"Please download these packages from `this <https://github.com/ros2/choco-"
"packages/releases/latest>`__ GitHub repository."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:136
msgid "asio.1.12.1.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:137
msgid "eigen-3.3.4.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:138
msgid "tinyxml-usestl.2.6.2.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:139
msgid "tinyxml2.6.0.0.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:140
msgid "log4cxx.0.10.0.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:142
msgid ""
"Once these packages are downloaded, open an administrative shell and execute "
"the following command:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:144
msgid ""
"> choco install -y -s <PATH\\TO\\DOWNLOADS\\> asio eigen tinyxml-usestl "
"tinyxml2 log4cxx"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:148
msgid ""
"Please replace ``<PATH\\TO\\DOWNLOADS>`` with the folder you downloaded the "
"packages to."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:150
msgid "You must also install some python dependencies for command-line tools:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:152
msgid ""
"python -m pip install -U catkin_pkg empy lark-parser opencv-python pyparsing "
"pyyaml setuptools"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:157
msgid "RQt dependencies"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:159
msgid "python -m pip install -U pydot PyQt5"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:164
msgid "SROS2 dependencies"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:166
msgid "python -m pip install -U lxml"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:171
msgid "Downloading ROS 2"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:174
msgid "Go the releases page: https://github.com/ros2/ros2/releases"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:175
msgid ""
"Download the latest package for Windows, e.g., ``ros2-package-windows-AMD64."
"zip``."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:177
msgid "Notes:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:179
msgid ""
"there may be more than one binary download option which might cause the file "
"name to differ."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:180
msgid ""
"[ROS Bouncy only] To download the ROS 2 debug libraries you'll need to "
"download ``ros2-bouncy-windows-Debug-AMD64.zip``"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:182
msgid ""
"Unpack the zip file somewhere (we'll assume ``C:\\dev\\ros2_crystal``\\ )."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:184
msgid ""
"Note (Ardent and earlier): There seems to be an issue where extracting the "
"zip file with 7zip causes RViz to crash on startup. Extract the zip file "
"using the Windows explorer to prevent this."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:187
msgid "Environment setup"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:189
msgid ""
"Start a command shell and source the ROS 2 setup file to set up the "
"workspace:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:191
msgid "> call C:\\dev\\ros2_crystal\\local_setup.bat"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:196
msgid "Try some examples"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:198
msgid ""
"In a command shell, set up the ROS 2 environment as described above and then "
"run a C++ ``talker``\\ :"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:200
msgid "> ros2 run demo_nodes_cpp talker"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:204
msgid "Start another command shell and run a Python ``listener``\\ :"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:206
msgid "> ros2 run demo_nodes_py listener"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:210
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages and "
"the ``listener`` saying ``I heard`` those messages. This verifies both the C+"
"+ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:214
msgid "See the `tutorials and demos </Tutorials>` for other things to try."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:217
msgid "Build your own packages"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:219
msgid ""
"If you would like to build your own packages, refer to the tutorial `\"Using "
"Colcon to build packages\" </Tutorials/Colcon-Tutorial>`."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:222
msgid "Troubleshooting"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:224
msgid ""
"Troubleshooting techniques can be found :ref:`here <windows-"
"troubleshooting>`."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:227
msgid "Uninstall"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:229
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not "
"sourcing the workspace's ``setup`` file. This way, your environment will "
"behave as though there is no Crystal install on your system."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:232
msgid ""
"If you're also trying to free up space, you can delete the entire workspace "
"directory with:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:234
msgid "rmdir /s /q \\ros2_crystal"
msgstr ""
