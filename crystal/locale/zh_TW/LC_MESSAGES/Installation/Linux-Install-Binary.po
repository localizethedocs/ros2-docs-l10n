# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Robotics
# This file is distributed under the same license as the ros2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ros2 documentation crystal\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Installation/Linux-Install-Binary.rst:2
msgid "Installing ROS 2 on Linux"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:6
msgid "Table of Contents"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:8
msgid ""
"This page explains how to install ROS 2 on Linux from a pre-built binary "
"package."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:10
msgid "There are also `Debian packages <Linux-Install-Debians>` available."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:13
msgid "System Requirements"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:15
msgid ""
"We support Ubuntu Linux Bionic Beaver (18.04) and Ubuntu Xenial Xerus "
"(16.04) on 64-bit x86 and 64-bit ARM."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:17
msgid "Note: Ardent and beta versions supported Ubuntu Xenial Xerus 16.04."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:20
msgid "Add the ROS 2 apt repository"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:1
msgid ""
"You will need to add the ROS 2 apt repositories to your system. To do so, "
"first authorize our GPG key with apt like this:"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:4
msgid ""
"sudo apt update && sudo apt install curl gnupg2 lsb-release\n"
"curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | "
"sudo apt-key add -"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:9
msgid "And then add the repository to your sources list:"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:11
msgid ""
"sudo sh -c 'echo \"deb [arch=$(dpkg --print-architecture)] http://packages."
"ros.org/ros2/ubuntu $(lsb_release -cs) main\" > /etc/apt/sources.list.d/ros2-"
"latest.list'"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:25
msgid "Downloading ROS 2"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:28
msgid "Go `the releases page <https://github.com/ros2/ros2/releases>`_"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:29
msgid ""
"Download the latest package for Linux; let's assume that it ends up at ``~/"
"Downloads/ros2-crystal-linux-x86_64.tar.bz2``."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:31
msgid ""
"Note: there may be more than one binary download option which might cause "
"the file name to differ."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:34
msgid "Unpack it:"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:36
msgid ""
"mkdir -p ~/ros2_crystal\n"
"cd ~/ros2_crystal\n"
"tar xf ~/Downloads/ros2-crystal-linux-x86_64.tar.bz2"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:45
msgid "Installing and initializing rosdep"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:47
msgid ""
"sudo apt update\n"
"sudo apt install -y python-rosdep\n"
"sudo rosdep init # if already initialized you may continue\n"
"rosdep update"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:56
msgid "Installing the missing dependencies"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:58
msgid "Set your rosdistro according to the release you downloaded."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:60
msgid ""
"CHOOSE_ROS_DISTRO=crystal # or bouncy\n"
"rosdep install --from-paths ros2-linux/share --ignore-src --rosdistro "
"$CHOOSE_ROS_DISTRO -y --skip-keys \"console_bridge fastcdr fastrtps "
"libopensplice67 libopensplice69 osrf_testing_tools_cpp poco_vendor "
"rmw_connext_cpp rosidl_typesupport_connext_c rosidl_typesupport_connext_cpp "
"rti-connext-dds-5.3.1 tinyxml_vendor tinyxml2_vendor urdfdom "
"urdfdom_headers\""
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:65
msgid ""
"*Optional*\\ : if you want to use the ROS 1<->2 bridge, then you must also "
"install ROS 1. Follow the normal install instructions: https://wiki.ros.org/"
"kinetic/Installation/Ubuntu"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:69
msgid "Installing the python3 libraries"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:71
msgid "sudo apt install -y libpython3-dev"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:76
msgid "Install additional DDS implementations (optional)"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:78
msgid ""
"If you would like to use another DDS or RTPS vendor besides the default, "
"eProsima's Fast RTPS, you can find instructions `here <DDS-Implementations>`."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:81
msgid "Environment setup"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:84
msgid "Sourcing the setup script"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:86
msgid "Set up your environment by sourcing the following file."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:88
msgid ". ~/ros2_crystal/ros2-linux/setup.bash"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:93
msgid "Install argcomplete (optional)"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:95
msgid ""
"ROS 2 command line tools use argcomplete to autocompletion. So if you want "
"autocompletion, installing argcomplete is necessary."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:98
msgid "Ubuntu 18.04"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:100
msgid "sudo apt install python3-argcomplete"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:105
msgid "Ubuntu 16.04 (argcomplete >= 0.8.5)"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:107
msgid ""
"To install ``argcomplete`` on Ubuntu 16.04 (Xenial), you'll need to use pip, "
"because the version available through ``apt`` will not work due to a bug in "
"that version of ``argcomplete``:"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:109
msgid ""
"sudo apt install python3-pip\n"
"sudo pip3 install argcomplete"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:115
msgid "Try some examples"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:117
msgid "In one terminal, source the setup file and then run a C++ ``talker``:"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:119
msgid ""
". ~/ros2_crystal/ros2-linux/setup.bash\n"
"ros2 run demo_nodes_cpp talker"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:124
msgid ""
"In another terminal source the setup file and then run a Python ``listener``:"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:126
msgid ""
". ~/ros2_crystal/ros2-linux/setup.bash\n"
"ros2 run demo_nodes_py listener"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:131
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages and "
"the ``listener`` saying ``I heard`` those messages. This verifies both the C+"
"+ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:135
msgid "See the `tutorials and demos </Tutorials>` for other things to try."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:138
msgid "Using the ROS 1 bridge"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:140
msgid ""
"If you have ROS 1 installed, you can try the ROS 1 bridge, by first sourcing "
"your ROS 1 setup file. We'll assume that it is ``/opt/ros/melodic/setup."
"bash`` in the following."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:143
msgid "If you haven't already, start a roscore:"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:145
msgid ""
". /opt/ros/melodic/setup.bash\n"
"roscore"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:151
msgid "In another terminal, start the bridge:"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:153
msgid ""
". /opt/ros/melodic/setup.bash\n"
". ~/ros2_crystal/ros2-linux/setup.bash\n"
"ros2 run ros1_bridge dynamic_bridge"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:159
msgid ""
"For more information on the bridge, read the `tutorial <https://github.com/"
"ros2/ros1_bridge/blob/master/README.md>`__."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:162
msgid "Build your own packages"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:164
msgid ""
"If you would like to build your own packages, refer to the tutorial `\"Using "
"Colcon to build packages\" </Tutorials/Colcon-Tutorial>`."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:167
msgid "Uninstall"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:169
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not "
"sourcing the workspace's ``setup`` file. This way, your environment will "
"behave as though there is no Crystal install on your system."
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:172
msgid ""
"If you're also trying to free up space, you can delete the entire workspace "
"directory with:"
msgstr ""

#: ../../../source/Installation/Linux-Install-Binary.rst:174
msgid "rm -rf ~/ros2_crystal"
msgstr ""
