# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Robotics
# This file is distributed under the same license as the ros2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ros2 documentation crystal\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:6
msgid "Porting RQt plugins to Windows"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:10
msgid "Table of Contents"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:12
msgid ""
"RQt has not been historically supported on Windows, but compatibility is "
"happening, slowly."
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:15
msgid "RQt Porting examples"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:17
msgid ""
"Microsoft pushed an effort to port much of ROS to Windows, their pull "
"request is a good resource for necessary changes. For example: https://"
"github.com/ros-visualization/qt_gui_core/pull/188"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:20
msgid ""
"Here is the ROS 2 port of `qt_gui_core <https://github.com/ros-visualization/"
"qt_gui_core/commit/6fb9624033a849f56d1bc1aad0e40d252bf99c2b>`_."
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:22
msgid ""
"Here is the ROS 2 port of `python_qt_binding <https://github.com/ros-"
"visualization/python_qt_binding/pull/56>`__."
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:25
msgid "Considerations for Windows 10"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:28
msgid "Troubles with TinyXML version 1"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:30
msgid ""
"I could not successfully use TinyXML. I upgraded to TinyXML-2 where needed. "
"It’s a pretty straight forward change."
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:34
msgid ""
"Checkout `this PR <https://github.com/ros-visualization/qt_gui_core/"
"pull/147>`__ for an example of porting to TinyXML-2."
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:37
msgid "Code that uses ``__cplusplus`` and code that requires pluginlib"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:39
msgid ""
"In some places, notably in the ROS 2 port of pluginlib, there is use of the "
"``__cplusplus`` flag. Unfortunately on Windows Visual Studio does not set "
"this flag correctly regardless of the C++ standard that is actually being "
"used. See `this page <https://docs.microsoft.com/en-us/cpp/build/reference/"
"zc-cplusplus?view=vs-2017>`__ for more information."
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:43
msgid "To set it, you need to add the compile option ``/Zc:__cplusplus``."
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:45
msgid "For example, in CMake you could do something like this:"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:47
msgid "target_compile_options(${PROJECT_NAME} PUBLIC \"/Zc:__cplusplus\")"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:52
msgid "Locations of build artifacts (before install)"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:54
msgid ""
"This only came up during when building ``qt_gui_cpp``. In that package, a "
"custom command depends on a target library in another part of the package. "
"However, that library isn’t installed until build is complete. Windows "
"builds in a ${configuration} directory. For example:"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:59
msgid ""
"On Linux, ``qt_gui_cpp.a`` would be built in: <ros2_ws>/build/qt_gui_cpp/src/"
"qt_gui_cpp/"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:62
msgid ""
"But on Windows ``qt_gui_cpp.lib`` is built in <ros2_ws>/build/qt_gui_cpp/src/"
"qt_gui_cpp/Release"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:65
msgid ""
"For compatibility across platforms in this situation, use `CMake generator "
"expressions <https://cmake.org/cmake/help/v3.5/manual/cmake-generator-"
"expressions.7.html>`__. However, when you need a library to link against be "
"sure to use ``$<TARGET_LINKER_FILE:_target>`` instead of ``$<TARGET_FILE:"
"_target>``. The latter will find ``.dll`` files, which cannot be linked "
"against on Windows. See an `example here <https://github.com/ros-"
"visualization/qt_gui_core/pull/162/files>`__."
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:71
msgid "Compiler and linker flags"
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:73
msgid ""
"In general when porting to Windows, many packages might make use of "
"additional compiler flags. You can find the Windows compiler flags on "
"`Microsoft's documentation <https://docs.microsoft.com/en-us/cpp/build/"
"reference/compiler-options-listed-by-category?view=vs-2017>`__. The C++ "
"compiler is called ``cl.exe``."
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:77
msgid ""
"For linker flags see `Microsoft's documentation <https://docs.microsoft.com/"
"en-us/cpp/build/reference/linker-options?view=vs-2017>`__. The linker "
"program is called ``link.exe``."
msgstr ""

#: ../../../source/Tutorials/RQt-Port-Plugin-Windows.rst:80
msgid ""
"However, CMake actually provides many of these options in variables. This "
"`StackOverflow page <https://stackoverflow.com/questions/9298278/cmake-print-"
"out-all-accessible-variables-in-a-script>`__ contains a good example of how "
"to see all the CMake variables available in a script."
msgstr ""
