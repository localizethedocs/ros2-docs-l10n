# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation foxy\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:8
msgid "Using time (C++)"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:10
msgid ""
"**Goal:** Learn how to get a transform at a specific time and wait for a "
"transform to be available on the tf2 tree using ``lookupTransform()`` "
"function."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:12
msgid "**Tutorial level:** Intermediate"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:14
msgid "**Time:** 10 minutes"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:18
msgid "Contents"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:21
msgid "Background"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:23
msgid ""
"In previous tutorials, we recreated the turtle demo by writing a :doc:`tf2 "
"broadcaster <Writing-A-Tf2-Broadcaster-Cpp>` and a :doc:`tf2 listener "
"<Writing-A-Tf2-Listener-Cpp>`. We also learned how to :doc:`add a new frame "
"to the transformation tree <./Adding-A-Frame-Cpp>` and learned how tf2 keeps "
"track of a tree of coordinate frames. This tree changes over time, and tf2 "
"stores a time snapshot for every transform (for up to 10 seconds by "
"default). Until now we used the ``lookupTransform()`` function to get access "
"to the latest available transforms in that tf2 tree, without knowing at what "
"time that transform was recorded. This tutorial will teach you how to get a "
"transform at a specific time."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:30
msgid "Tasks"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:33
msgid "1 tf2 and time"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:35
msgid ""
"So let's go back to where we ended in the :doc:`adding a frame tutorial <./"
"Adding-A-Frame-Cpp>`. Go to ``learning_tf2_cpp`` package. Open "
"``turtle_tf2_listener.cpp`` and take a look at the ``lookupTransform()`` "
"call:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:39
msgid ""
"transformStamped = tf_buffer_->lookupTransform(\n"
"   toFrameRel,\n"
"   fromFrameRel,\n"
"   tf2::TimePointZero);"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:46
msgid ""
"You can see that we specified a time equal to 0 by calling ``tf2::"
"TimePointZero``."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:50
msgid ""
"The ``tf2`` package has it's own time type ``tf2::TimePoint``, which is "
"different from ``rclcpp::Time``. Many APIs in the package ``tf2_ros`` "
"automatically convert between ``rclcpp::Time`` and ``tf2::TimePoint``."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:53
msgid ""
"``rclcpp::Time(0, 0, this->get_clock()->get_clock_type())`` could have been "
"used here, but it would have been converted to ``tf2::TimePointZero`` "
"anyways."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:55
msgid ""
"For tf2, time 0 means \"the latest available\" transform in the buffer. Now, "
"change this line to get the transform at the current time, ``this-"
">get_clock()->now()``:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:58
msgid ""
"rclcpp::Time now = this->get_clock()->now();\n"
"transformStamped = tf_buffer_->lookupTransform(\n"
"   toFrameRel,\n"
"   fromFrameRel,\n"
"   now);"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:66
msgid "Now try to run the launch file."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:68
#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:111
msgid "ros2 launch learning_tf2_cpp turtle_tf2_demo.launch.py"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:72
msgid "You will notice that it fails and outputs something similar to this:"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:74
msgid ""
"[INFO] [1629873136.345688064] [listener]: Could not transform turtle1 to "
"turtle2: Lookup would\n"
"require extrapolation into the future.  Requested time 1629873136.345539 but "
"the latest data\n"
"is at time 1629873136.338804, when looking up transform from frame [turtle1] "
"to frame [turtle2]"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:80
msgid ""
"It tells you that the frame does not exist or that the data is in the future."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:82
msgid ""
"To understand why is this happening we need to understand how buffers work. "
"Firstly, each listener has a buffer where it stores all the coordinate "
"transforms coming from the different tf2 broadcasters. Secondly, when a "
"broadcaster sends out a transform, it takes some time before that transform "
"gets into the buffer (usually a couple of milliseconds). As a result, when "
"you request a frame transform at time \"now\", you should wait a few "
"milliseconds for that information to arrive."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:88
msgid "2 Wait for transforms"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:90
msgid ""
"tf2 provides a nice tool that will wait until a transform becomes available. "
"You use this by adding a timeout parameter to ``lookupTransform()``. To fix "
"this, edit your code as shown below (add the last timeout parameter):"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:94
msgid ""
"rclcpp::Time now = this->get_clock()->now();\n"
"transformStamped = tf_buffer_->lookupTransform(\n"
"   toFrameRel,\n"
"   fromFrameRel,\n"
"   now,\n"
"   50ms);"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:103
msgid ""
"The ``lookupTransform()`` can take four arguments, where the last one is an "
"optional timeout. It will block for up to that duration waiting for it to "
"timeout."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:107
msgid "3 Checking the results"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:109
msgid "You can now run the launch file."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:115
msgid ""
"You should notice that ``lookupTransform()`` will actually block until the "
"transform between the two turtles becomes available (this will usually take "
"a few milliseconds). Once the timeout has been reached (fifty milliseconds "
"in this case), an exception will be raised only if the transform is still "
"not available."
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:119
msgid "Summary"
msgstr ""

#: ../../../source/Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp.rst:121
msgid ""
"In this tutorial, you learned how to acquire a transform at a specific "
"timestamp and how to wait for a transform to be available on the tf2 tree "
"when using the ``lookupTransform()`` function."
msgstr ""
