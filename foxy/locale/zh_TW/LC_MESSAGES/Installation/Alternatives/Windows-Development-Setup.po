# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation foxy\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:8
msgid "Windows (source)"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:12
msgid "Table of Contents"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:14
msgid ""
"This guide is about how to set up a development environment for ROS 2 on "
"Windows."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:17
msgid "Prerequisites"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:19
msgid ""
"First follow the steps for `Installing Prerequisites <windows-install-binary-"
"installing-prerequisites>` on the Binary Installation page."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:21
msgid "Stop and return here when you reach the \"Downloading ROS 2\" section."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:24
msgid "Language support"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:26
msgid ""
"Make sure you have a locale which supports ``UTF-8``. For example, for a "
"Chinese-language Windows 10 installation, you may need to install an "
"`English language pack <https://support.microsoft.com/en-us/windows/language-"
"packs-for-windows-a5094319-a92d-18de-5b53-1cfc697cfca8>`_."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:30
msgid "Additional prerequisites"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:32
msgid ""
"When building from source you'll need a few additional prerequisites "
"installed."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:35
msgid "Install additional prerequisites from Chocolatey"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:37
msgid "First install git:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:39
msgid "choco install -y git"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:43
msgid ""
"You will need to append the Git cmd folder ``C:\\Program Files\\Git\\cmd`` "
"to the PATH (you can do this by clicking the Windows icon, typing "
"\"Environment Variables\", then clicking on \"Edit the system environment "
"variables\". In the resulting dialog, click \"Environment Variables\", the "
"click \"Path\" on the bottom pane, then click \"Edit\" and add the path)."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:48
msgid "Install developer tools"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:50
msgid ""
"Now we are ready to install some our tools that we use to help in developing "
"ROS 2."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:52
msgid "Let's start with ``vcstool``:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:54
msgid "pip install -U vcstool"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:58
msgid ""
"You can test it out by just running ``vcs`` (you should be able to do this "
"in the same cmd prompt)."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:60
msgid "Next, install ``colcon``:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:62
msgid "pip install -U colcon-common-extensions"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:66
msgid ""
"You can test it out by just running ``colcon`` (you should be able to do "
"this in the same cmd prompt)."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:68
msgid "Also, you should install ``curl``:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:70
msgid "choco install -y curl"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:75
msgid "Install dependencies"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:77
msgid "Next install the latest version of ``setuptools`` and ``pip``:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:79
msgid "python -m pip install -U setuptools pip"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:83
msgid "Then you can continue installing other Python dependencies:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:85
msgid ""
"pip install -U catkin_pkg cryptography EmPy ifcfg lark-parser lxml numpy "
"pyparsing pyyaml"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:89
msgid "Next install testing tools like ``pytest`` and others:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:91
msgid "pip install -U pytest pytest-mock coverage mock"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:95
msgid "Next install linters and checkers like ``flake8`` and others:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:97
msgid ""
"pip install -U flake8 flake8-blind-except flake8-builtins flake8-class-"
"newline flake8-comprehensions flake8-deprecated flake8-docstrings flake8-"
"import-order flake8-quotes mypy==0.761 pep8 pydocstyle"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:101
msgid "Next install cppcheck:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:103
msgid "choco install -y cppcheck"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:107
msgid "Next install xmllint:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:109
msgid ""
"Download the `64 bit binary archives <https://www.zlatkovic.com/pub/"
"libxml/64bit/>`__ of ``libxml2`` (and its dependencies ``iconv`` and "
"``zlib``) from https://www.zlatkovic.com/projects/libxml/"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:110
msgid "Unpack all archives into e.g. ``C:\\xmllint``"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:111
msgid "Add ``C:\\xmllint\\bin`` to the ``PATH``."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:114
msgid "Install Qt5"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:116
msgid ""
"Download the `5.12.X offline installer <https://www.qt.io/offline-"
"installers>`_ from Qt's website. Run the installer. Make sure to select the "
"``MSVC 2017 64-bit`` component under the ``Qt`` -> ``Qt 5.12.12`` tree."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:120
msgid ""
"Finally, in an administrator ``cmd.exe`` window set these environment "
"variables. The commands below assume you installed it to the default "
"location of ``C:\\Qt``."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:123
msgid ""
"setx /m Qt5_DIR C:\\Qt\\Qt5.12.12\\5.12.12\\msvc2017_64\n"
"setx /m QT_QPA_PLATFORM_PLUGIN_PATH C:"
"\\Qt\\Qt5.12.12\\5.12.12\\msvc2017_64\\plugins\\platforms"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:130
msgid ""
"This path might change based on the installed MSVC version, the directory Qt "
"was installed to, and the version of Qt installed."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:133
msgid "Get the ROS 2 code"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:135
msgid ""
"Now that we have the development tools we can get the ROS 2 source code."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:137
msgid "First setup a development folder, for example ``C:\\rolling``:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:141
msgid ""
"It is very important that the chosen path is short, due to the short default "
"Windows path limits (260 characters). To allow longer paths, see https://"
"learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?"
"tabs=registry."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:144
msgid ""
"md \\rolling\\src\n"
"cd \\rolling"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:149
msgid ""
"Get the ``ros2.repos`` file which defines the repositories to clone from:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:151
msgid ""
"vcs import --input https://raw.githubusercontent.com/ros2/ros2/rolling/ros2."
"repos src"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:156
msgid "Install additional DDS implementations (optional)"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:158
msgid ""
"Fast DDS is bundled with the ROS 2 source and will always be built unless "
"you put an ``COLCON_IGNORE`` file in the ``src\\eProsima`` folder."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:160
msgid ""
"If you would like to use another DDS or RTPS vendor besides the default, you "
"can find instructions :doc:`here <../DDS-Implementations>`."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:163
msgid "Build the ROS 2 code"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:167
msgid ""
"To build ROS 2 you will need a Visual Studio Command Prompt (\"x64 Native "
"Tools Command Prompt for VS 2019\") running as Administrator."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:169
msgid "To build the ``\\rolling`` folder tree:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:171
msgid "colcon build --merge-install"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:177
msgid ""
"We're using ``--merge-install`` here to avoid a ``PATH`` variable that is "
"too long at the end of the build. If you're adapting these instructions to "
"build a smaller workspace then you might be able to use the default behavior "
"which is isolated install, i.e. where each package is installed to a "
"different folder."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:182
msgid ""
"If you are doing a debug build use ``python_d path\\to\\colcon_executable "
"build --cmake-args -DCMAKE_BUILD_TYPE=Debug``. See `Extra stuff for debug "
"mode`_ for more info on running Python code in debug builds on Windows."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:186
msgid "Environment setup"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:188
msgid ""
"Start a command shell and source the ROS 2 setup file to set up the "
"workspace:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:190
msgid "call C:\\rolling\\install\\local_setup.bat"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:194
msgid ""
"This will automatically set up the environment for any DDS vendors that "
"support was built for."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:196
msgid ""
"It is normal that the previous command, if nothing else went wrong, outputs "
"\"The system cannot find the path specified.\" exactly once."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:199
msgid "Test and run"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:201
msgid ""
"Note that the first time you run any executable you will have to allow "
"access to the network through a Windows Firewall popup."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:203
msgid "You can run the tests using this command:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:205
msgid "colcon test --merge-install"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:211
msgid ""
"``--merge-install`` should only be used if it was also used in the build "
"step."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:213
msgid "Afterwards you can get a summary of the tests using this command:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:215
msgid "colcon test-result"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:219
msgid ""
"To run the examples, first open a clean new ``cmd.exe`` and set up the "
"workspace by sourcing the ``local_setup.bat`` file. Then, run a C++ "
"``talker``\\ :"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:222
msgid ""
"call install\\local_setup.bat\n"
"ros2 run demo_nodes_cpp talker"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:227
msgid ""
"In a separate shell you can do the same, but instead run a Python "
"``listener``\\ :"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:229
msgid ""
"call install\\local_setup.bat\n"
"ros2 run demo_nodes_py listener"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:234
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages and "
"the ``listener`` saying ``I heard`` those messages. This verifies both the C+"
"+ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:240
msgid ""
"It is not recommended to build in the same cmd prompt that you've sourced "
"the ``local_setup.bat``."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:243
msgid "Next steps after installing"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:244
msgid ""
"Continue with the :doc:`tutorials and demos <../../Tutorials>` to configure "
"your environment, create your own workspace and packages, and learn ROS 2 "
"core concepts."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:247
msgid "Additional RMW implementations (optional)"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:248
msgid ""
"The default middleware that ROS 2 uses is ``Fast-RTPS``, but the middleware "
"(RMW) can be replaced at runtime. See the :doc:`guide <../../How-To-Guides/"
"Working-with-multiple-RMW-implementations>` on how to work with multiple "
"RMWs."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:253
msgid "Extra stuff for Debug mode"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:255
msgid ""
"If you want to be able to run all the tests in Debug mode, you'll need to "
"install a few more things:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:258
msgid "To be able to extract the Python source tarball, you can use PeaZip:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:260
msgid "choco install -y peazip"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:265
msgid ""
"You'll also need SVN, since some of the Python source-build dependencies are "
"checked out via SVN:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:267
msgid "choco install -y svn hg"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:272
msgid ""
"You'll need to quit and restart the command prompt after installing the "
"above."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:273
msgid "Get and extract the Python 3.8.3 source from the ``tgz``:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:275
msgid "https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:276
msgid ""
"To keep these instructions concise, please extract it to ``C:"
"\\dev\\Python-3.8.3``"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:278
msgid ""
"Now, build the Python source in debug mode from a Visual Studio command "
"prompt:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:280
msgid ""
"cd C:\\dev\\Python-3.8.3\\PCbuild\n"
"get_externals.bat\n"
"build.bat -p x64 -d"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:287
msgid ""
"Finally, copy the build products into the Python38 installation directories, "
"next to the Release-mode Python executable and DLL's:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:289
msgid ""
"cd C:\\dev\\Python-3.8.3\\PCbuild\\amd64\n"
"copy python_d.exe C:\\Python38 /Y\n"
"copy python38_d.dll C:\\Python38 /Y\n"
"copy python3_d.dll C:\\Python38 /Y\n"
"copy python38_d.lib C:\\Python38\\libs /Y\n"
"copy python3_d.lib C:\\Python38\\libs /Y\n"
"copy sqlite3_d.dll C:\\Python38\\DLLs /Y\n"
"for %I in (*_d.pyd) do copy %I C:\\Python38\\DLLs /Y"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:301
msgid "Now, from a fresh command prompt, make sure that ``python_d`` works:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:303
msgid "python_d -c \"import _ctypes ; import coverage\""
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:307
msgid ""
"Once you have verified the operation of ``python_d``, it is necessary to "
"reinstall a few dependencies with the debug-enabled libraries:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:309
msgid ""
"python_d -m pip install --force-reinstall https://github.com/ros2/ros2/"
"releases/download/numpy-archives/numpy-1.18.4-cp38-cp38d-win_amd64.whl\n"
"python_d -m pip install --force-reinstall https://github.com/ros2/ros2/"
"releases/download/lxml-archives/lxml-4.5.1-cp38-cp38d-win_amd64.whl"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:314
msgid "To verify the installation of these dependencies:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:316
msgid "python_d -c \"from lxml import etree ; import numpy\""
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:320
msgid ""
"When you wish to return to building release binaries, it is necessary to "
"uninstall the debug variants and use the release variants:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:322
msgid ""
"python -m pip uninstall numpy lxml\n"
"python -m pip install numpy lxml"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:327
msgid ""
"To create executables python scripts(.exe), python_d should be used to "
"invoke colcon, along with the corresponding CMake build type. If you "
"installed colcon using pip, the path to the colcon executable can be found "
"with ``pip show colcon-core``."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:330
msgid ""
"python_d path\\to\\colcon_executable build --merge-install --cmake-args -"
"DCMAKE_BUILD_TYPE=Debug"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:334
msgid "Hooray, you're done!"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:337
msgid "Stay up to date"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:339
msgid ""
"See :doc:`../Maintaining-a-Source-Checkout` to periodically refresh your "
"source installation."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:342
msgid "Troubleshooting"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:344
msgid ""
"Troubleshooting techniques can be found :ref:`here <windows-"
"troubleshooting>`."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:347
msgid "Uninstall"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:349
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not "
"sourcing the workspace's ``setup`` file. This way, your environment will "
"behave as though there is no Rolling install on your system."
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:352
msgid ""
"If you're also trying to free up space, you can delete the entire workspace "
"directory with:"
msgstr ""

#: ../../../source/Installation/Alternatives/Windows-Development-Setup.rst:354
msgid "rmdir /s /q \\ros2_rolling"
msgstr ""
