# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation rolling\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-18 08:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:8
msgid "Writing a simple publisher and subscriber (Python)"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:10
msgid "**Goal:** Create and run a publisher and subscriber node using Python."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:12
msgid "**Tutorial level:** Beginner"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:14
msgid "**Time:** 20 minutes"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:18
msgid "Contents"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:21
msgid "Background"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:23
msgid ""
"In this tutorial, you will create :doc:`nodes <../Beginner-CLI-Tools/"
"Understanding-ROS2-Nodes/Understanding-ROS2-Nodes>` that pass information in "
"the form of string messages to each other over a :doc:`topic <../Beginner-"
"CLI-Tools/Understanding-ROS2-Topics/Understanding-ROS2-Topics>`. The example "
"used here is a simple \"talker\" and \"listener\" system; one node publishes "
"data and the other subscribes to the topic so it can receive that data."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:27
msgid ""
"The code used in these examples can be found `here <https://github.com/ros2/"
"examples/tree/rolling/rclpy/topics>`__."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:30
msgid "Prerequisites"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:32
msgid ""
"In previous tutorials, you learned how to :doc:`create a workspace <./"
"Creating-A-Workspace/Creating-A-Workspace>` and :doc:`create a package <./"
"Creating-Your-First-ROS2-Package>`."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:34
msgid ""
"A basic understanding of Python is recommended, but not entirely necessary."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:37
msgid "Tasks"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:40
msgid "1 Create a package"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:42
msgid ""
"Open a new terminal and :doc:`source your ROS 2 installation <../Beginner-"
"CLI-Tools/Configuring-ROS2-Environment>` so that ``ros2`` commands will work."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:44
msgid ""
"Navigate into the ``ros2_ws`` directory created in a :ref:`previous tutorial "
"<new-directory>`."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:46
msgid ""
"Recall that packages should be created in the ``src`` directory, not the "
"root of the workspace. So, navigate into ``ros2_ws/src``, and run the "
"package creation command:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:49
msgid ""
"$ ros2 pkg create --build-type ament_python --license Apache-2.0 py_pubsub"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:53
msgid ""
"Your terminal will return a message verifying the creation of your package "
"``py_pubsub`` and all its necessary files and folders."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:56
msgid "2 Write the publisher node"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:58
msgid ""
"Navigate into ``ros2_ws/src/py_pubsub/py_pubsub``. Recall that this "
"directory is a `Python package <https://docs.python.org/3/tutorial/modules."
"html#packages>`__ with the same name as the ROS 2 package it's nested in."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:61
msgid "Download the example talker code by entering the following command:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:65
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:281
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:414
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:433
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:455
msgid "Linux"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:67
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:73
msgid ""
"$ wget https://raw.githubusercontent.com/ros2/examples/rolling/rclpy/topics/"
"minimal_publisher/examples_rclpy_minimal_publisher/publisher_member_function."
"py"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:71
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:287
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:420
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:439
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:461
msgid "macOS"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:77
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:293
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:424
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:445
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:467
msgid "Windows"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:79
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:295
msgid "In a Windows command line prompt:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:81
msgid ""
"$ curl -sk https://raw.githubusercontent.com/ros2/examples/rolling/rclpy/"
"topics/minimal_publisher/examples_rclpy_minimal_publisher/"
"publisher_member_function.py -o publisher_member_function.py"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:85
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:301
msgid "Or in powershell:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:87
msgid ""
"$ curl https://raw.githubusercontent.com/ros2/examples/rolling/rclpy/topics/"
"minimal_publisher/examples_rclpy_minimal_publisher/publisher_member_function."
"py -o publisher_member_function.py"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:91
msgid ""
"Now there will be a new file named ``publisher_member_function.py`` adjacent "
"to ``__init__.py``."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:93
msgid "Open the file using your preferred text editor."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:95
msgid ""
"import rclpy\n"
"from rclpy.executors import ExternalShutdownException\n"
"from rclpy.node import Node\n"
"\n"
"from std_msgs.msg import String\n"
"\n"
"\n"
"class MinimalPublisher(Node):\n"
"\n"
"    def __init__(self):\n"
"        super().__init__('minimal_publisher')\n"
"        self.publisher_ = self.create_publisher(String, 'topic', 10)\n"
"        timer_period = 0.5  # seconds\n"
"        self.timer = self.create_timer(timer_period, self.timer_callback)\n"
"        self.i = 0\n"
"\n"
"    def timer_callback(self):\n"
"        msg = String()\n"
"        msg.data = 'Hello World: %d' % self.i\n"
"        self.publisher_.publish(msg)\n"
"        self.get_logger().info('Publishing: \"%s\"' % msg.data)\n"
"        self.i += 1\n"
"\n"
"\n"
"def main(args=None):\n"
"    try:\n"
"        with rclpy.init(args=args):\n"
"            minimal_publisher = MinimalPublisher()\n"
"\n"
"            rclpy.spin(minimal_publisher)\n"
"    except (KeyboardInterrupt, ExternalShutdownException):\n"
"        pass\n"
"\n"
"\n"
"if __name__ == '__main__':\n"
"    main()"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:136
msgid "2.1 Examine the code"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:138
msgid ""
"The first lines of code after the comments import ``rclpy`` so its ``Node`` "
"class can be used."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:140
msgid ""
"import rclpy\n"
"from rclpy.executors import ExternalShutdownException\n"
"from rclpy.node import Node"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:146
msgid ""
"The next statement imports the built-in string message type that the node "
"uses to structure the data that it passes on the topic."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:148
msgid "from std_msgs.msg import String"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:152
msgid ""
"These lines represent the node's dependencies. Recall that dependencies have "
"to be added to ``package.xml``, which you'll do in the next section."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:155
msgid ""
"Next, the ``MinimalPublisher`` class is created, which inherits from (or is "
"a subclass of) ``Node``."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:157
msgid "class MinimalPublisher(Node):"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:161
msgid ""
"Following is the definition of the class's constructor. ``super().__init__`` "
"calls the ``Node`` class's constructor and gives it your node name, in this "
"case ``minimal_publisher``."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:164
msgid ""
"``create_publisher`` declares that the node publishes messages of type "
"``String`` (imported from the ``std_msgs.msg`` module), over a topic named "
"``topic``, and that the \"queue size\" is 10. Queue size is a required QoS "
"(quality of service) setting that limits the amount of queued messages if a "
"subscriber is not receiving them fast enough."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:167
msgid ""
"Next, a timer is created with a callback to execute every 0.5 seconds. "
"``self.i`` is a counter used in the callback."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:170
msgid ""
"def __init__(self):\n"
"    super().__init__('minimal_publisher')\n"
"    self.publisher_ = self.create_publisher(String, 'topic', 10)\n"
"    timer_period = 0.5  # seconds\n"
"    self.timer = self.create_timer(timer_period, self.timer_callback)\n"
"    self.i = 0"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:179
msgid ""
"``timer_callback`` creates a message with the counter value appended, and "
"publishes it to the console with ``get_logger().info``."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:181
msgid ""
"def timer_callback(self):\n"
"    msg = String()\n"
"    msg.data = 'Hello World: %d' % self.i\n"
"    self.publisher_.publish(msg)\n"
"    self.get_logger().info('Publishing: \"%s\"' % msg.data)\n"
"    self.i += 1"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:190
msgid "Lastly, the main function is defined."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:192
msgid ""
"def main(args=None):\n"
"    try:\n"
"        with rclpy.init(args=args):\n"
"            minimal_publisher = MinimalPublisher()\n"
"\n"
"            rclpy.spin(minimal_publisher)\n"
"    except (KeyboardInterrupt, ExternalShutdownException):\n"
"        pass"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:204
msgid ""
"First the ``rclpy`` library is initialized, then the node is created, and "
"then it \"spins\" the node so its callbacks are called."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:207
msgid "2.2 Add dependencies"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:209
msgid ""
"Navigate one level back to the ``ros2_ws/src/py_pubsub`` directory, where "
"the ``setup.py``, ``setup.cfg``, and ``package.xml`` files have been created "
"for you."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:211
msgid "Open ``package.xml`` with your text editor."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:213
msgid ""
"As mentioned in the :doc:`previous tutorial <./Creating-Your-First-ROS2-"
"Package>`, make sure to fill in the ``<description>``, ``<maintainer>`` and "
"``<license>`` tags:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:215
msgid ""
"<description>Examples of minimal publisher/subscriber using rclpy</"
"description>\n"
"<maintainer email=\"you@email.com\">Your Name</maintainer>\n"
"<license>Apache-2.0</license>"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:221
msgid ""
"After the lines above, add the following dependencies corresponding to your "
"node's import statements:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:223
msgid ""
"<exec_depend>rclpy</exec_depend>\n"
"<exec_depend>std_msgs</exec_depend>"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:228
msgid ""
"This declares the package needs ``rclpy`` and ``std_msgs`` when its code is "
"executed."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:230
msgid "Make sure to save the file."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:233
msgid "2.3 Add an entry point"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:235
msgid ""
"Open the ``setup.py`` file. Again, match the ``maintainer``, "
"``maintainer_email``, ``description`` and ``license`` fields to your "
"``package.xml``:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:238
msgid ""
"maintainer='YourName',\n"
"maintainer_email='you@email.com',\n"
"description='Examples of minimal publisher/subscriber using rclpy',\n"
"license='Apache-2.0',"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:245
msgid ""
"Add the following line within the ``console_scripts`` brackets of the "
"``entry_points`` field:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:247
msgid ""
"entry_points={\n"
"        'console_scripts': [\n"
"                'talker = py_pubsub.publisher_member_function:main',\n"
"        ],\n"
"},"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:255
msgid "Don't forget to save."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:258
msgid "2.4 Check setup.cfg"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:260
msgid ""
"The contents of the ``setup.cfg`` file should be correctly populated "
"automatically, like so:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:262
msgid ""
"[develop]\n"
"script_dir=$base/lib/py_pubsub\n"
"[install]\n"
"install_scripts=$base/lib/py_pubsub"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:269
msgid ""
"This is simply telling setuptools to put your executables in ``lib``, "
"because ``ros2 run`` will look for them there."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:271
msgid ""
"You could build your package now, source the local setup files, and run it, "
"but let's create the subscriber node first so you can see the full system at "
"work."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:274
msgid "3 Write the subscriber node"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:276
msgid ""
"Return to ``ros2_ws/src/py_pubsub/py_pubsub`` to create the next node. Enter "
"the following code in your terminal:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:283
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:289
msgid ""
"$ wget https://raw.githubusercontent.com/ros2/examples/rolling/rclpy/topics/"
"minimal_subscriber/examples_rclpy_minimal_subscriber/"
"subscriber_member_function.py"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:297
msgid ""
"$ curl -sk https://raw.githubusercontent.com/ros2/examples/rolling/rclpy/"
"topics/minimal_subscriber/examples_rclpy_minimal_subscriber/"
"subscriber_member_function.py -o subscriber_member_function.py"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:303
msgid ""
"$ curl https://raw.githubusercontent.com/ros2/examples/rolling/rclpy/topics/"
"minimal_subscriber/examples_rclpy_minimal_subscriber/"
"subscriber_member_function.py -o subscriber_member_function.py"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:307
msgid "Now the directory should have these files:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:309
msgid ""
"__init__.py  publisher_member_function.py  subscriber_member_function.py"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:314
msgid "3.1 Examine the code"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:316
msgid "Open the ``subscriber_member_function.py`` with your text editor."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:318
msgid ""
"import rclpy\n"
"from rclpy.executors import ExternalShutdownException\n"
"from rclpy.node import Node\n"
"\n"
"from std_msgs.msg import String\n"
"\n"
"\n"
"class MinimalSubscriber(Node):\n"
"\n"
"    def __init__(self):\n"
"        super().__init__('minimal_subscriber')\n"
"        self.subscription = self.create_subscription(\n"
"            String,\n"
"            'topic',\n"
"            self.listener_callback,\n"
"            10)\n"
"        self.subscription  # prevent unused variable warning\n"
"\n"
"    def listener_callback(self, msg):\n"
"        self.get_logger().info('I heard: \"%s\"' % msg.data)\n"
"\n"
"\n"
"def main(args=None):\n"
"    try:\n"
"        with rclpy.init(args=args):\n"
"            minimal_subscriber = MinimalSubscriber()\n"
"\n"
"            rclpy.spin(minimal_subscriber)\n"
"    except (KeyboardInterrupt, ExternalShutdownException):\n"
"        pass\n"
"\n"
"\n"
"if __name__ == '__main__':\n"
"    main()"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:355
msgid ""
"The subscriber node's code is nearly identical to the publisher's. The "
"constructor creates a subscriber with the same arguments as the publisher. "
"Recall from the :doc:`topics tutorial <../Beginner-CLI-Tools/Understanding-"
"ROS2-Topics/Understanding-ROS2-Topics>` that the topic name and message type "
"used by the publisher and subscriber must match to allow them to communicate."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:359
msgid ""
"self.subscription = self.create_subscription(\n"
"    String,\n"
"    'topic',\n"
"    self.listener_callback,\n"
"    10)"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:367
msgid ""
"The subscriber's constructor and callback don't include any timer "
"definition, because it doesn't need one. Its callback gets called as soon as "
"it receives a message."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:370
msgid ""
"The callback definition simply prints an info message to the console, along "
"with the data it received. Recall that the publisher defines ``msg.data = "
"'Hello World: %d' % self.i``"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:373
msgid ""
"def listener_callback(self, msg):\n"
"    self.get_logger().info('I heard: \"%s\"' % msg.data)"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:378
msgid ""
"The ``main`` definition is almost exactly the same, replacing the creation "
"and spinning of the publisher with the subscriber."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:380
msgid ""
"minimal_subscriber = MinimalSubscriber()\n"
"\n"
"rclpy.spin(minimal_subscriber)"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:386
msgid ""
"Since this node has the same dependencies as the publisher, there's nothing "
"new to add to ``package.xml``. The ``setup.cfg`` file can also remain "
"untouched."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:391
msgid "3.2 Add an entry point"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:393
msgid ""
"Reopen ``setup.py`` and add the entry point for the subscriber node below "
"the publisher's entry point. The ``entry_points`` field should now look like "
"this:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:396
msgid ""
"entry_points={\n"
"        'console_scripts': [\n"
"                'talker = py_pubsub.publisher_member_function:main',\n"
"                'listener = py_pubsub.subscriber_member_function:main',\n"
"        ],\n"
"},"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:405
msgid ""
"Make sure to save the file, and then your pub/sub system should be ready."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:408
msgid "4 Build and run"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:409
msgid ""
"You likely already have the ``rclpy`` and ``std_msgs`` packages installed as "
"part of your ROS 2 system. It's good practice to run ``rosdep`` in the root "
"of your workspace (``ros2_ws``) to check for missing dependencies before "
"building:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:416
msgid "$ rosdep install -i --from-path src --rosdistro rolling -y"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:422
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:426
msgid "rosdep only runs on Linux, so you can skip ahead to next step."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:429
msgid ""
"Still in the root of your workspace, ``ros2_ws``, build your new package:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:435
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:441
msgid "$ colcon build --packages-select py_pubsub"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:447
msgid "$ colcon build --merge-install --packages-select py_pubsub"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:451
msgid ""
"Open a new terminal, navigate to ``ros2_ws``, and source the setup files:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:457
msgid "$ source install/setup.bash"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:463
msgid "$ . install/setup.bash"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:469
msgid "$ call install/setup.bat"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:473
msgid ""
"Now run the talker node. The terminal should start publishing info messages "
"every 0.5 seconds, like so:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:476
msgid ""
"$ ros2 run py_pubsub talker\n"
"[info] [minimal_publisher]: publishing: \"hello world: 0\"\n"
"[info] [minimal_publisher]: publishing: \"hello world: 1\"\n"
"[info] [minimal_publisher]: publishing: \"hello world: 2\"\n"
"[info] [minimal_publisher]: publishing: \"hello world: 3\"\n"
"[info] [minimal_publisher]: publishing: \"hello world: 4\"\n"
"..."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:486
msgid ""
"Open another terminal, source the setup files from inside ``ros2_ws`` again, "
"and then start the listener node. The listener will start printing messages "
"to the console, starting at whatever message count the publisher is on at "
"that time, like so:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:489
msgid ""
"$ ros2 run py_pubsub listener\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 10\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 11\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 12\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 13\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 14\""
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:498
msgid "Enter ``Ctrl+C`` in each terminal to stop the nodes from spinning."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:501
msgid "Summary"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:503
msgid ""
"You created two nodes to publish and subscribe to data over a topic. Before "
"running them, you added their dependencies and entry points to the package "
"configuration files."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:507
msgid "Next steps"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:509
msgid ""
"Next you'll create another simple ROS 2 package using the service/client "
"model. Again, you can choose to write it in either :doc:`C++ <./Writing-A-"
"Simple-Cpp-Service-And-Client>` or :doc:`Python <./Writing-A-Simple-Py-"
"Service-And-Client>`."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:513
msgid "Related content"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.rst:515
msgid ""
"There are several ways you could write a publisher and subscriber in Python; "
"check out the ``minimal_publisher`` and ``minimal_subscriber`` packages in "
"the `ros2/examples <https://github.com/ros2/examples/tree/rolling/rclpy/"
"topics>`_ repo."
msgstr ""
