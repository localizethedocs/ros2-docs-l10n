# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation rolling\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:7
msgid "Experimenting with a dummy robot"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:9
msgid ""
"In this demo, we present a simple demo robot with all components from "
"publishing joint states over publishing fake laser data until visualizing "
"the robot model on a map in RViz."
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:12
msgid "Launching the demo"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:14
msgid ""
"We assume your ROS 2 installation dir as ``~/ros2_ws``. Please change the "
"directories according to your platform."
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:17
msgid ""
"To start the demo, we execute the demo bringup launch file, which we are "
"going to explain in more details in the next section."
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:21
msgid "Source Build"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:23
msgid ""
"$ mkdir -p ~/ros2_ws/src\n"
"$ cd ~/ros2_ws/src\n"
"$ git clone -b ${ROS_DISTRO} https://github.com/ros2/demos\n"
"$ cd .. && colcon build --packages-up-to dummy_robot_bringup\n"
"$ source ~/ros2_ws/install/setup.bash\n"
"$ ros2 launch dummy_robot_bringup dummy_robot_bringup_launch.py\n"
"[INFO] [launch]: Default logging verbosity is set to INFO\n"
"[INFO] [dummy_map_server-1]: process started with pid [2922]\n"
"[INFO] [robot_state_publisher-2]: process started with pid [2923]\n"
"[INFO] [dummy_joint_states-3]: process started with pid [2924]\n"
"[INFO] [dummy_laser-4]: process started with pid [2925]\n"
"[dummy_laser-4] [INFO] [1714837459.645517297] [dummy_laser]: angle inc:    "
"0.004363\n"
"[dummy_laser-4] [INFO] [1714837459.645613393] [dummy_laser]: scan size:    "
"1081\n"
"[dummy_laser-4] [INFO] [1714837459.645626640] [dummy_laser]: scan time "
"increment:     0.000000\n"
"[robot_state_publisher-2] [INFO] [1714837459.652977937] "
"[robot_state_publisher]: Robot initialized"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:42
msgid "deb Package"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:44
msgid ""
"$ sudo apt install ros-${ROS_DISTRO}-dummy-robot-bringup\n"
"$ ros2 launch dummy_robot_bringup dummy_robot_bringup_launch.py\n"
"[INFO] [launch]: Default logging verbosity is set to INFO\n"
"[INFO] [dummy_map_server-1]: process started with pid [2922]\n"
"[INFO] [robot_state_publisher-2]: process started with pid [2923]\n"
"[INFO] [dummy_joint_states-3]: process started with pid [2924]\n"
"[INFO] [dummy_laser-4]: process started with pid [2925]\n"
"[dummy_laser-4] [INFO] [1714837459.645517297] [dummy_laser]: angle inc:    "
"0.004363\n"
"[dummy_laser-4] [INFO] [1714837459.645613393] [dummy_laser]: scan size:    "
"1081\n"
"[dummy_laser-4] [INFO] [1714837459.645626640] [dummy_laser]: scan time "
"increment:     0.000000\n"
"[robot_state_publisher-2] [INFO] [1714837459.652977937] "
"[robot_state_publisher]: Robot initialized"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:58
msgid "If you now open RViz2 in a new terminal, you'll see your robot. ðŸŽ‰"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:61
msgid ""
"$ source ~/ros2_ws/install/setup.bash\n"
"$ rviz2"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:66
msgid ""
"This opens RViz2. Assuming you have your dummy_robot_bringup still launched, "
"you can now add the TF display plugin and configure your global frame to "
"``world``. Once you did that, you should see a similar picture:"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:75
msgid "What's happening?"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:77
msgid ""
"If you have a closer look at the launch file, we start a couple of nodes at "
"the same time."
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:80
msgid "dummy_map_server"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:81
msgid "dummy_laser"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:82
msgid "dummy_joint_states"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:83
msgid "robot_state_publisher"
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:85
msgid ""
"The first two packages are relatively simple. The ``dummy_map_server`` "
"constantly publishes an empty map with a periodic update. The "
"``dummy_laser`` does basically the same; publishing dummy fake laser scans."
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:89
msgid ""
"The ``dummy_joint_states`` node is publishing fake joint state data. As we "
"are publishing a simple RRbot with only two joints, this node publishes "
"joint states values for these two joints."
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:92
msgid ""
"The ``robot_state_publisher`` is doing the actual interesting work. It "
"parses the given URDF file, extracts the robot model and listens to the "
"incoming joint states. With this information, it publishes TF values for our "
"robot which we visualize in RViz."
msgstr ""

#: ../../../source/Tutorials/Demos/dummy-robot-demo.rst:96
msgid "Hooray!"
msgstr ""
