# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation rolling\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-18 08:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:8
msgid "Migrating C++ Packages Reference"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:12
msgid "Table of Contents"
msgstr "目录"

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:14
msgid ""
"This page shows how to migrate parts of a C++ package from ROS 1 to ROS 2. "
"If this is your first time migrating a C++ package, then read the :doc:`C++ "
"migration example <Migrating-CPP-Package-Example>` first. Afterwards, use "
"this page as a reference while you migrate your own packages."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:19
msgid "Build tool"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:21
msgid ""
"Instead of using ``catkin_make``, ``catkin_make_isolated`` or ``catkin "
"build`` ROS 2 uses the command line tool `colcon <https://design.ros2.org/"
"articles/build_tool.html>`__ to build and install a set of packages. See "
"the :doc:`beginner tutorial <../../Tutorials/Beginner-Client-Libraries/"
"Colcon-Tutorial>` to get started with ``colcon``."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:25
msgid "Update your ``CMakeLists.txt`` to use *ament_cmake*"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:27
msgid ""
"ROS 2 C++ packages use `CMake <https://cmake.org/>`__ with convenience "
"functions provided by `ament_cmake <https://index.ros.org/p/ament_cmake/"
">`__. Apply the following changes to use ``ament_cmake`` instead of "
"``catkin``."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:32
msgid "Require a newer version of CMake"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:34
msgid ""
"ROS 2 relies on newer versions of CMake than used by ROS 1. Find the minimum "
"version of CMake used by the ROS distribution you want to support in `REP "
"2000 <https://www.ros.org/reps/rep-2000.html>`__, and use that version at "
"the top of your ``CMakeLists.txt``. For example, `3.14.4 is the minimum "
"recommended support for ROS Humble <https://www.ros.org/reps/rep-2000."
"html#humble-hawksbill-may-2022-may-2027>`__."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:38
msgid "cmake_minimum_required(VERSION 3.14.4)"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:43
msgid "Set the build type to ament_cmake"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:45
msgid "Remove any dependencies on ``catkin`` from your ``package.xml``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:47
msgid ""
"# Remove this!\n"
"<buildtool_depend>catkin</buildtool_depend>"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:52
msgid ""
"Add a new dependency on ``ament_cmake_ros`` (`example <https://github.com/"
"ros2/geometry2/blob/d85102217f692746abea8546c8e41f0abc95c8b8/tf2/package."
"xml#L25>`__):"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:54
msgid "<buildtool_depend>ament_cmake_ros</buildtool_depend>"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:58
msgid ""
"Add an ``<export>`` section to your ``package.xml`` if it does not have one "
"already. Set the ``<build_type>`` to ``ament_cmake`` (`example <https://"
"github.com/ros2/geometry2/blob/d85102217f692746abea8546c8e41f0abc95c8b8/tf2/"
"package.xml#L43-L45>`__)"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:61
msgid ""
"<export>\n"
"   <build_type>ament_cmake</build_type>\n"
"</export>"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:68
msgid "Add a call to ``ament_package()``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:70
msgid ""
"Insert a call to ``ament_package()`` at the bottom of your ``CMakeLists."
"txt`` (`example <https://github.com/ros2/geometry2/blob/"
"d85102217f692746abea8546c8e41f0abc95c8b8/tf2/CMakeLists.txt#L127>`__)"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:72
msgid ""
"# Add this to the bottom of your CMakeLists.txt\n"
"ament_package()"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:78
msgid "Update ``find_package()`` calls"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:80
msgid ""
"Replace the ``find_package(catkin COMPONENTS ...)``  call with individual "
"``find_package()`` calls (`example <https://github.com/ros2/geometry2/blob/"
"d85102217f692746abea8546c8e41f0abc95c8b8/tf2/CMakeLists.txt#L14-L18>`_):"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:82
msgid "For example, change this:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:84
msgid ""
"find_package(catkin REQUIRED COMPONENTS foo bar std_msgs)\n"
"find_package(baz REQUIRED)"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:89
msgid "To this:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:91
msgid ""
"find_package(ament_cmake_ros REQUIRED)\n"
"find_package(foo REQUIRED)\n"
"find_package(bar REQUIRED)\n"
"find_package(std_msgs REQUIRED)\n"
"find_package(baz REQUIRED)"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:101
msgid "Use modern CMake targets"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:103
msgid ""
"Prefer to use per-target CMake functions so that your package can export "
"modern CMake targets."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:105
msgid ""
"If your ``CMakeLists.txt`` uses ``include_directories()``, then delete those "
"calls."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:107
msgid ""
"# Delete calls to include_directories like this one!\n"
"include_directories(include ${catkin_INCLUDE_DIRS})"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:112
msgid ""
"Add a call ``target_include_directories()`` for every library in your "
"package (`example <https://github.com/ros2/geometry2/blob/"
"d85102217f692746abea8546c8e41f0abc95c8b8/tf2/CMakeLists.txt#L24-L26>`__)."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:114
msgid ""
"target_include_directories(my_library PUBLIC\n"
"   \"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>\"\n"
"   \"$<INSTALL_INTERFACE:include/${PROJECT_NAME}>\")"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:120
msgid ""
"Change all ``target_link_libraries()`` calls to use modern CMake targets. "
"For example, if your package in ROS 1 uses old-style standard CMake "
"variables like this."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:123
msgid "target_link_libraries(my_library ${catkin_LIBRARIES} ${baz_LIBRARIES})"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:127
msgid ""
"Then change it to use specific modern CMake targets instead. Use "
"``${package_name_TARGETS}`` if the package you're depending on is a message "
"package such as ``std_msgs``."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:130
msgid ""
"target_link_libraries(my_library PUBLIC foo::foo bar::bar "
"${std_msgs_TARGETS} baz::baz)"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:134
msgid ""
"Choose ``PUBLIC`` or ``PRIVATE`` based on how the dependency is used by your "
"library (`example <https://github.com/ros2/geometry2/blob/"
"d85102217f692746abea8546c8e41f0abc95c8b8/tf2/CMakeLists.txt#L27-L31>`__)."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:136
msgid ""
"Use ``PUBLIC`` if the dependency is needed by downstream users, for example, "
"your library's public API uses it."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:137
msgid ""
"Use ``PRIVATE`` if the dependency is only used internally by your library."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:140
msgid "Replace ``catkin_package()`` with various ament_cmake calls"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:142
msgid ""
"Imagine your ``CMakeLists.txt`` has a call to ``catkin_package`` like this:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:144
msgid ""
"catkin_package(\n"
"    INCLUDE_DIRS include\n"
"    LIBRARIES my_library\n"
"    CATKIN_DEPENDS foo bar std_msgs\n"
"    DEPENDS baz\n"
")\n"
"\n"
"install(TARGETS my_library\n"
"   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n"
"   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n"
"   RUNTIME DESTINATION ${CATKIN_GLOBAL_BIN_DESTINATION}\n"
")"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:161
msgid "Replacing ``catkin_package(INCLUDE_DIRS ...)``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:163
msgid ""
"If you've used modern CMake targets and ``target_include_directories()``, "
"you don't need to do anything further. Downstream users will get the include "
"directories by depending on your modern CMake targets."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:167
msgid "Replacing ``catkin_package(LIBRARIES ...)``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:169
msgid ""
"Use ``ament_export_targets()`` and ``install(TARGETS ... EXPORT ...)`` to "
"replace the ``LIBRARIES`` argument."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:171
msgid ""
"Use the ``EXPORT`` keyword when installing your ``my_library`` target "
"(`example <https://github.com/ros2/geometry2/blob/"
"d85102217f692746abea8546c8e41f0abc95c8b8/tf2/CMakeLists.txt#L37-L41>`__)."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:173
msgid ""
"install(TARGETS my_library EXPORT export_my_package\n"
"   ARCHIVE DESTINATION lib\n"
"   LIBRARY DESTINATION lib\n"
"   RUNTIME DESTINATION bin\n"
")"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:181
msgid ""
"The above is a good default for library targets. If your package used "
"different ``CATKIN_*_DESTINATION`` variables, convert them as follows:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:187
msgid "**catkin**"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:188
msgid "**ament_cmake**"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:189
msgid "CATKIN_GLOBAL_BIN_DESTINATION"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:190
msgid "bin"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:191
msgid "CATKIN_GLOBAL_INCLUDE_DESTINATION"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:192
msgid "include"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:193
msgid "CATKIN_GLOBAL_LIB_DESTINATION"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:194
#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:196
#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:204
msgid "lib"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:195
msgid "CATKIN_GLOBAL_LIBEXEC_DESTINATION"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:197
msgid "CATKIN_GLOBAL_SHARE_DESTINATION"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:198
msgid "share"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:199
msgid "CATKIN_PACKAGE_BIN_DESTINATION"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:200
msgid "lib/${PROJECT_NAME}"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:201
msgid "CATKIN_PACKAGE_INCLUDE_DESTINATION"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:202
msgid "include/${PROJECT_NAME}"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:203
msgid "CATKIN_PACKAGE_LIB_DESTINATION"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:205
msgid "CATKIN_PACKAGE_SHARE_DESTINATION"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:206
msgid "share/${PROJECT_NAME}"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:208
msgid ""
"Add a call to ``ament_export_targets()`` with the same name you gave to the "
"``EXPORT`` keyword (`example <https://github.com/ros2/geometry2/blob/"
"d85102217f692746abea8546c8e41f0abc95c8b8/tf2/CMakeLists.txt#L124-L125>`__)."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:210
msgid "ament_export_targets(export_my_package)"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:216
msgid "Replacing ``catkin_package(CATKIN_DEPENDS .. DEPENDS ..)``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:218
msgid ""
"Your package's users must ``find_package()`` dependencies used by your "
"package's public API. In ROS 1 this was done for downstream users with the "
"``CATKIN_DEPENDS`` and ``DEPENDS`` arguments. Use `ament_export_dependencies "
"<https://github.com/ament/ament_cmake/blob/rolling/"
"ament_cmake_export_dependencies/cmake/ament_export_dependencies.cmake>`__ to "
"do this in ROS 2."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:222
msgid ""
"ament_export_dependencies(\n"
"   foo\n"
"   bar\n"
"   std_msgs\n"
"   baz\n"
")"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:232
msgid "Generate messages"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:234
msgid ""
"If your package contains both C++ code and ROS message, service, or action "
"definitions, then consider splitting it into two packages:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:236
msgid "A package with only the ROS message, service, and/or action definitions"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:237
msgid "A package with the C++ code"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:239
msgid ""
"Add the following dependencies to the ``package.xml`` of the package that "
"contains ROS messages:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:241
msgid ""
"Add a ``<buildtool_depend>`` on ``rosidl_default_generators`` (`example "
"<https://github.com/ros2/common_interfaces/blob/"
"d685509e9cb9f80bd320a347f2db954a73397ae7/std_msgs/package.xml#L19>`__)"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:243
msgid "<buildtool_depend>rosidl_default_generators</buildtool_depend>"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:247
msgid ""
"Add an ``<exec_depend>`` on ``rosidl_default_runtime`` (`example <https://"
"github.com/ros2/common_interfaces/blob/"
"d685509e9cb9f80bd320a347f2db954a73397ae7/std_msgs/package.xml#L22>`__)"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:249
msgid "<exec_depend>rosidl_default_runtime</exec_depend>"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:253
msgid ""
"Add a ``<member_of_group>`` tag with the group name "
"``rosidl_interface_packages`` (`example <https://github.com/ros2/"
"common_interfaces/blob/d685509e9cb9f80bd320a347f2db954a73397ae7/std_msgs/"
"package.xml#L26>`__)"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:255
msgid "<member_of_group>rosidl_interface_packages</member_of_group>"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:259
msgid ""
"In your ``CMakeLists.txt``, replace the invocation of ``add_message_files``, "
"``add_service_files`` and ``generate_messages`` with "
"`rosidl_generate_interfaces <https://github.com/ros2/rosidl/blob/rolling/"
"rosidl_cmake/cmake/rosidl_generate_interfaces.cmake>`__. The first argument "
"must be ``${PROJECT_NAME}`` due to `this bug <https://github.com/ros2/"
"rosidl_typesupport/issues/120>`__."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:262
msgid "For example, if your ROS 1 package looks like this:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:264
msgid ""
"add_message_files(DIRECTORY msg FILES FooBar.msg Baz.msg)\n"
"add_service_files(DIRECTORY srv FILES Ping.srv)\n"
"\n"
"add_action_files(DIRECTORY action FILES DoPong.action)\n"
"generate_messages(\n"
"   DEPENDENCIES actionlib_msgs std_msgs geometry_msgs\n"
")"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:274
msgid ""
"Then change it to this (`example <https://github.com/ros2/geometry2/blob/"
"d85102217f692746abea8546c8e41f0abc95c8b8/tf2_msgs/CMakeLists.txt#L18-L25>`__)"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:276
msgid ""
"rosidl_generate_interfaces(${PROJECT_NAME}\n"
"  \"msg/FooBar.msg\"\n"
"  \"msg/Baz.msg\"\n"
"  \"srv/Ping.srv\"\n"
"  \"action/DoPong.action\"\n"
"  DEPENDENCIES actionlib_msgs std_msgs geometry_msgs\n"
")"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:287
msgid "Remove references to the devel space"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:289
msgid ""
"Remove any references to the *devel space* such as ``CATKIN_DEVEL_PREFIX``. "
"There is no equivalent to the *devel space* in ROS 2."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:294
msgid "Unit tests"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:296
msgid ""
"If your package uses `gtest <https://github.com/google/googletest>`__ then:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:298
msgid "Replace ``CATKIN_ENABLE_TESTING`` with ``BUILD_TESTING``."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:299
msgid "Replace ``catkin_add_gtest`` with ``ament_add_gtest``."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:300
msgid "Add a ``find_package()`` for ``ament_cmake_gtest`` instead of ``GTest``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:302
msgid "For example, if your ROS 1 package adds tests like this:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:304
msgid ""
"if (CATKIN_ENABLE_TESTING)\n"
"  find_package(GTest REQUIRED)\n"
"  include_directories(${GTEST_INCLUDE_DIRS})\n"
"  catkin_add_gtest(my_test src/test/some_test.cpp)\n"
"  target_link_libraries(my_test\n"
"    # ...\n"
"    ${GTEST_LIBRARIES})\n"
"endif()"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:315
msgid "Then change it to this:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:317
msgid ""
"if (BUILD_TESTING)\n"
"  find_package(ament_cmake_gtest REQUIRED)\n"
"  ament_add_gtest(my_test src/test/test_something.cpp)\n"
"  target_link_libraries(my_test\n"
"    #...\n"
"   )\n"
"endif()"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:327
msgid ""
"Add ``<test_depend>ament_cmake_gtest</test_depend>`` to your ``package.xml`` "
"(`example <https://github.com/ros2/geometry2/blob/"
"d85102217f692746abea8546c8e41f0abc95c8b8/tf2/package.xml#L35>`__)."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:329
msgid "<test_depend>ament_cmake_gtest</test_depend>"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:334
msgid "Linters"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:336
msgid ""
"The ROS 2 code :doc:`style guide <../../The-ROS2-Project/Contributing/"
"Developer-Guide>` differs from ROS 1."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:338
msgid ""
"If you choose to follow the ROS 2 style guide, then turn on automatic linter "
"tests by adding these lines in a ``if(BUILD_TESTING)`` block:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:340
msgid ""
"if(BUILD_TESTING)\n"
"   find_package(ament_lint_auto REQUIRED)\n"
"   ament_lint_auto_find_test_dependencies()\n"
"   # ...\n"
"endif()"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:348
msgid "Add the following dependencies to your ``package.xml``:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:350
msgid ""
"<test_depend>ament_lint_auto</test_depend>\n"
"<test_depend>ament_lint_common</test_depend>"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:356
msgid "Update source code"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:359
msgid "Messages, services, and actions"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:361
msgid ""
"The namespace of ROS 2 messages, services, and actions use a subnamespace "
"(``msg``, ``srv``, or ``action``, respectively) after the package name. "
"Therefore an include looks like: ``#include <my_interfaces/msg/my_message."
"hpp>``. The C++ type is then named: ``my_interfaces::msg::MyMessage``."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:365
msgid ""
"Shared pointer types are provided as typedefs within the message structs: "
"``my_interfaces::msg::MyMessage::SharedPtr`` as well as ``my_interfaces::"
"msg::MyMessage::ConstSharedPtr``."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:367
msgid ""
"For more details please see the article about the `generated C++ interfaces "
"<https://design.ros2.org/articles/generated_interfaces_cpp.html>`__."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:369
msgid "The migration requires includes to change by:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:372
msgid ""
"inserting the subfolder ``msg`` between the package name and message datatype"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:373
msgid "changing the included filename from CamelCase to underscore separation"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:374
msgid "changing from ``*.h`` to ``*.hpp``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:376
msgid ""
"// ROS 1 style is in comments, ROS 2 follows, uncommented.\n"
"// # include <geometry_msgs/PointStamped.h>\n"
"#include <geometry_msgs/msg/point_stamped.hpp>\n"
"\n"
"// geometry_msgs::PointStamped point_stamped;\n"
"geometry_msgs::msg::PointStamped point_stamped;"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:385
msgid ""
"The migration requires code to insert the ``msg`` namespace into all "
"instances."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:388
msgid "Use of service objects"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:390
msgid ""
"Service callbacks in ROS 2 do not have boolean return values. Instead of "
"returning false on failures, throwing exceptions is recommended."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:393
msgid ""
"// ROS 1 style is in comments, ROS 2 follows, uncommented.\n"
"// #include \"nav_msgs/GetMap.h\"\n"
"#include \"nav_msgs/srv/get_map.hpp\"\n"
"\n"
"// bool service_callback(\n"
"//   nav_msgs::GetMap::Request & request,\n"
"//   nav_msgs::GetMap::Response & response)\n"
"void service_callback(\n"
"  const std::shared_ptr<nav_msgs::srv::GetMap::Request> request,\n"
"  std::shared_ptr<nav_msgs::srv::GetMap::Response> response)\n"
"{\n"
"  // ...\n"
"  // return true;  // or false for failure\n"
"}"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:411
msgid "Usages of ros::Time"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:413
msgid "For usages of ``ros::Time``:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:415
msgid "Replace all instances of ``ros::Time`` with ``rclcpp::Time``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:417
msgid "If your messages or code makes use of std_msgs::Time:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:419
msgid ""
"Convert all instances of std_msgs::Time to builtin_interfaces::msg::Time"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:421
msgid ""
"Convert all ``#include \"std_msgs/time.h`` to ``#include "
"\"builtin_interfaces/msg/time.hpp\"``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:423
msgid ""
"Convert all instances using the std_msgs::Time field ``nsec`` to the "
"builtin_interfaces::msg::Time field ``nanosec``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:426
msgid "Usages of ros::Rate"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:428
msgid ""
"There is an equivalent type ``rclcpp::Rate`` object which is basically a "
"drop in replacement for ``ros::Rate``."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:432
msgid "Boost"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:434
msgid ""
"Much of the functionality previously provided by Boost has been integrated "
"into the C++ standard library. As such we would like to take advantage of "
"the new core features and avoid the dependency on boost where possible."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:438
msgid "Shared Pointers"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:440
msgid ""
"To switch shared pointers from boost to standard C++ replace instances of:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:443
msgid "``#include <boost/shared_ptr.hpp>`` with ``#include <memory>``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:444
msgid "``boost::shared_ptr`` with ``std::shared_ptr``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:446
msgid ""
"There may also be variants such as ``weak_ptr`` which you want to convert as "
"well."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:448
msgid ""
"Also it is recommended practice to use ``using`` instead of ``typedef``. "
"``using`` has the ability to work better in templated logic. For details "
"`see here <https://stackoverflow.com/questions/10747810/what-is-the-"
"difference-between-typedef-and-using-in-c11>`__"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:453
msgid "Thread/Mutexes"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:455
msgid ""
"Another common part of boost used in ROS codebases are mutexes in ``boost::"
"thread``."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:458
msgid ""
"Replace ``boost::mutex::scoped_lock`` with ``std::unique_lock<std::mutex>``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:459
msgid "Replace ``boost::mutex`` with ``std::mutex``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:460
msgid "Replace ``#include <boost/thread/mutex.hpp>`` with ``#include <mutex>``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:463
msgid "Unordered Map"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:465
#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:474
msgid "Replace:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:468
msgid ""
"``#include <boost/unordered_map.hpp>`` with ``#include <unordered_map>``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:469
msgid "``boost::unordered_map`` with ``std::unordered_map``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:472
msgid "function"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:477
msgid "``#include <boost/function.hpp>``  with ``#include <functional>``"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-CPP-Packages.rst:478
msgid "``boost::function`` with ``std::function``"
msgstr ""
