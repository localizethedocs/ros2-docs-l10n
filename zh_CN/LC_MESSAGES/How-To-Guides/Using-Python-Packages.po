# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation jazzy\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-01 08:38+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:9
msgid "Using Python Packages with ROS 2"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:11
msgid ""
"**Goal:** Explain how to interoperate with other Python packages from the "
"ROS 2 ecosystem."
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:15
msgid "Contents"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:19
msgid ""
"A cautionary note, if you intended to use pre-packaged binaries (either "
"``deb`` files, or the binary archive distributions), the Python interpreter "
"must match what was used to build the original binaries. If you intend to "
"use something like ``virtualenv`` or ``pipenv``\\, make sure to use the "
"system interpreter. If you use something like ``conda``, it is very likely "
"that the interpreter will not match the system interpreter and will be "
"incompatible with ROS 2 binaries."
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:24
msgid "Installing via ``rosdep``"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:26
msgid ""
"The fastest way to include third-party python packages is to use their "
"corresponding rosdep keys, if available. ``rosdep`` keys can be checked via:"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:29
msgid "https://github.com/ros/rosdistro/blob/master/rosdep/base.yaml"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:30
msgid "https://github.com/ros/rosdistro/blob/master/rosdep/python.yaml"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:32
msgid ""
"These ``rosdep`` keys can be added to your ``package.xml`` file, which "
"indicates to the build system that your package (and dependent packages) "
"depend on those keys. In a new workspace, you can also quickly install all "
"rosdep keys with:"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:35
msgid "$ rosdep install -yr --from-paths ./path/to/your/workspace"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:39
msgid ""
"If there aren't currently ``rosdep`` keys for the package that you are "
"interested in, it is possible to add them by following the `rosdep key "
"contribution guide`_."
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:41
msgid ""
"To learn more about the ``rosdep`` tool and how it works, consult the "
"`rosdep documentation`_."
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:44
msgid "Installing via a package manager"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:46
msgid ""
"If you don't want to make a rosdep key, but the package is available in your "
"system package manager (eg ``apt``), you can install and use the package "
"that way:"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:48
msgid "$ sudo apt install python3-serial"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:52
msgid ""
"If the package is available on `The Python Package Index (PyPI) <https://"
"pypi.org/>`_ and you want to install globally on your system:"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:54
msgid "$ python3 -m pip install -U pyserial"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:58
msgid ""
"If the package is available on PyPI and you want to install locally to your "
"user:"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:60
msgid "$ python3 -m pip install -U --user pyserial"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:65
msgid "Installing via a virtual environment"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:67
msgid "First, create a Colcon workspace:"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:69
msgid ""
"$ mkdir -p ~/colcon_venv/src\n"
"$ cd ~/colcon_venv/"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:74
msgid "Then setup your virtual environment:"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:76
msgid ""
"$ virtualenv -p python3 ./venv # Make a virtual env and activate it\n"
"$ source ./venv/bin/activate\n"
"$ touch ./venv/COLCON_IGNORE # Make sure that colcon does not try to build "
"the venv"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:82
msgid ""
"Next, install the Python packages that you want in your virtual environment:"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:84
msgid "$ python3 -m pip install gtsam pyserialâ€¦ etc"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:88
msgid ""
"Now you can build your workspace and run your python node that depends on "
"packages installed in your virtual environment."
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:90
msgid ""
"$ source /opt/ros/rolling/setup.bash # Source Rolling and build\n"
"$ colcon build"
msgstr ""

#: ../../../source/How-To-Guides/Using-Python-Packages.rst:97
msgid ""
"If you want to release your package using Bloom, you should add the packages "
"you require to ``rosdep``, see the `rosdep key contribution guide`_."
msgstr ""
