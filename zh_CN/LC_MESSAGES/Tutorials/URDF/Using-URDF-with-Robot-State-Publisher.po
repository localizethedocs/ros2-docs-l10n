# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Robotics
# This file is distributed under the same license as the ros2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ros2 documentation crystal\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:4
msgid "Using URDF with robot_state_publisher"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:6
msgid ""
"**Goal:** Simulate a walking robot modelled in URDF and view it in Rviz."
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:8
msgid "**Tutorial level:** Intermediate"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:10
msgid "**Time:** 15 minutes"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:14
msgid "Contents"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:17
msgid "Background"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:19
msgid ""
"This tutorial will show you how to model a walking robot, publish the state "
"as a `/tf2 <https://wiki.ros.org/tf2>`__ message and view the simulation in "
"Rviz. First, we create the URDF model describing the robot assembly. Next we "
"write a node which simulates the motion and publishes the JointState and "
"transforms. We then use ``robot_state_publisher`` to publish the entire "
"robot state to ``/tf2``."
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:26
msgid "Prerequisites"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:28
msgid "`rviz2 <https://index.ros.org/r/rviz/>`__"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:31
msgid "Tasks"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:34
msgid "1 Create a package"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:36
msgid ""
"cd ~/dev_ws/src  # change as needed\n"
"ros2 pkg create urdf_tutorial --build-type ament_python --dependencies rclpy"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:41
msgid ""
"You should now see a ``urdf_tutorial`` folder. Next you will make several "
"changes to it."
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:44
msgid "2 Create the URDF File"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:46
msgid ""
"Here is the `URDF file <http://wiki.ros.org/urdf/Tutorials/"
"Using%20urdf%20with%20robot_state_publisher?"
"action=AttachFile&do=get&target=model.xml>`__ for a 7-link model roughly "
"approximating R2-D2. Save it as ``~/dev_ws/src/urdf_tutorial/urdf/r2d2.urdf."
"xml``"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:48
msgid ""
"In order to view the robot in Rviz, save this `Rviz config <https://github."
"com/benbongalon/ros2-migration/blob/master/urdf_tutorial/urdf/r2d2.rviz>`__ "
"as ``~/dev_ws/src/urdf_tutorial/urdf/r2d2.rviz``"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:50
msgid "**Note:** Both files must be in the subfolder *urdf*"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:53
msgid "3 Publish the state"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:55
msgid ""
"Now we need a method for specifying what state the robot is in. To do this, "
"we must specify all three joints and the overall odometry."
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:57
msgid ""
"Fire up your favorite editor and paste the following code into ``src/"
"urdf_tutorial/urdf_tutorial/state_publisher.py``"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:59
msgid ""
"**Note:** Make sure to save it in the Python \"urdf_tutorial\" subfolder "
"where the ``__init__.py`` file is located."
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:61
msgid ""
"#! /usr/bin/env python\n"
"from math import sin, cos, pi\n"
"import threading\n"
"import rclpy\n"
"from rclpy.node import Node\n"
"from rclpy.qos import QoSProfile\n"
"from geometry_msgs.msg import Quaternion\n"
"from sensor_msgs.msg import JointState\n"
"from tf2_ros import TransformBroadcaster, TransformStamped\n"
"class StatePublisher(Node):\n"
"\n"
"  def __init__(self):\n"
"      rclpy.init()\n"
"      super().__init__('state_publisher')\n"
"\n"
"      qos_profile = QoSProfile(depth=10)\n"
"      self.joint_pub = self.create_publisher(JointState, 'joint_states', "
"qos_profile)\n"
"      self.broadcaster = TransformBroadcaster(self, qos=qos_profile)\n"
"      self.nodeName = self.get_name()\n"
"      self.get_logger().info(\"{0} started\".format(self.nodeName))\n"
"\n"
"      degree = pi / 180.0\n"
"      loop_rate = self.create_rate(30)\n"
"\n"
"      # robot state\n"
"      tilt = 0.\n"
"      tinc = degree\n"
"      swivel = 0.\n"
"      angle = 0.\n"
"      height = 0.\n"
"      hinc = 0.005\n"
"\n"
"      # message declarations\n"
"      odom_trans = TransformStamped()\n"
"      odom_trans.header.frame_id = 'odom'\n"
"      odom_trans.child_frame_id = 'axis'\n"
"      joint_state = JointState()\n"
"\n"
"      try:\n"
"          while rclpy.ok():\n"
"              rclpy.spin_once(self)\n"
"\n"
"              # update joint_state\n"
"              now = self.get_clock().now()\n"
"              joint_state.header.stamp = now.to_msg()\n"
"              joint_state.name = ['swivel', 'tilt', 'periscope']\n"
"              joint_state.position = [swivel, tilt, height]\n"
"\n"
"              # update transform\n"
"              # (moving in a circle with radius=2)\n"
"              odom_trans.header.stamp = now.to_msg()\n"
"              odom_trans.transform.translation.x = cos(angle)*2\n"
"              odom_trans.transform.translation.y = sin(angle)*2\n"
"              odom_trans.transform.translation.z = 0.7\n"
"              odom_trans.transform.rotation = \\\n"
"                  euler_to_quaternion(0, 0, angle + pi/2) # roll,pitch,yaw\n"
"\n"
"              # send the joint state and transform\n"
"              self.joint_pub.publish(joint_state)\n"
"              self.broadcaster.sendTransform(odom_trans)\n"
"\n"
"              # Create new robot state\n"
"              tilt += tinc\n"
"              if tilt < -0.5 or tilt > 0.0:\n"
"                  tinc *= -1\n"
"              height += hinc\n"
"              if height > 0.2 or height < 0.0:\n"
"                  hinc *= -1\n"
"              swivel += degree\n"
"              angle += degree/4\n"
"\n"
"              # This will adjust as needed per iteration\n"
"              loop_rate.sleep()\n"
"\n"
"      except KeyboardInterrupt:\n"
"          pass\n"
"\n"
"def euler_to_quaternion(roll, pitch, yaw):\n"
"  qx = sin(roll/2) * cos(pitch/2) * cos(yaw/2) - cos(roll/2) * sin(pitch/2) "
"* sin(yaw/2)\n"
"  qy = cos(roll/2) * sin(pitch/2) * cos(yaw/2) + sin(roll/2) * cos(pitch/2) "
"* sin(yaw/2)\n"
"  qz = cos(roll/2) * cos(pitch/2) * sin(yaw/2) - sin(roll/2) * sin(pitch/2) "
"* cos(yaw/2)\n"
"  qw = cos(roll/2) * cos(pitch/2) * cos(yaw/2) + sin(roll/2) * sin(pitch/2) "
"* sin(yaw/2)\n"
"  return Quaternion(x=qx, y=qy, z=qz, w=qw)\n"
"\n"
"def main():\n"
"  node = StatePublisher()\n"
"\n"
"if __name__ == '__main__':\n"
"  main()"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:154
msgid "4 Create a launch file"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:156
msgid ""
"Create a new ``launch`` folder. Open your editor and paste the following "
"code, saving it as ``launch/demo.launch.py``"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:158
msgid ""
"import os\n"
"from ament_index_python.packages import get_package_share_directory\n"
"from launch import LaunchDescription\n"
"from launch.actions import DeclareLaunchArgument\n"
"from launch.substitutions import LaunchConfiguration\n"
"from launch_ros.actions import Node\n"
"\n"
"def generate_launch_description():\n"
"\n"
"  use_sim_time = LaunchConfiguration('use_sim_time', default='false')\n"
"  urdf_file_name = 'r2d2.urdf.xml'\n"
"\n"
"  print(\"urdf_file_name : {}\".format(urdf_file_name))\n"
"\n"
"  urdf = os.path.join(\n"
"      get_package_share_directory('urdf_tutorial'),\n"
"      urdf_file_name)\n"
"\n"
"  return LaunchDescription([\n"
"      DeclareLaunchArgument(\n"
"          'use_sim_time',\n"
"          default_value='false',\n"
"          description='Use simulation (Gazebo) clock if true'),\n"
"      Node(\n"
"          package='robot_state_publisher',\n"
"          executable='robot_state_publisher',\n"
"          name='robot_state_publisher',\n"
"          output='screen',\n"
"          parameters=[{'use_sim_time': use_sim_time}],\n"
"          arguments=[urdf]),\n"
"      Node(\n"
"          package='urdf_tutorial',\n"
"          executable='state_publisher',\n"
"          name='state_publisher',\n"
"          output='screen'),\n"
"  ])"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:199
msgid "5 Edit the setup.py file"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:201
msgid ""
"You must tell the **colcon** build tool how to install your Python package. "
"Edit the ``setup.py`` file as follows:"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:203
msgid "include these import statements"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:205
msgid ""
"import os\n"
"from glob import glob\n"
"from setuptools import setup\n"
"from setuptools import find_packages"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:212
msgid "append these 2 lines inside ``data_files``"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:214
msgid ""
"data_files=[\n"
"  ...\n"
"  (os.path.join('share', package_name), glob('launch/*.py')),\n"
"  (os.path.join('share', package_name), glob('urdf/*'))\n"
"],"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:222
msgid ""
"modify the ``entry_points`` table so you can later run 'state_publisher' "
"from a console"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:224
msgid ""
"'console_scripts': [\n"
"    'state_publisher = urdf_tutorial.state_publisher:main'\n"
"],"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:230
msgid "Save the ``setup.py`` file with your changes."
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:233
msgid "6 Install the package"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:235
msgid ""
"cd ~/dev_ws\n"
"colcon build --symlink-install --packages-select urdf_tutorial\n"
"source install/setup.bash"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:243
msgid "7 View the results"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:245
msgid "Launch the package"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:247
msgid "ros2 launch urdf_tutorial demo.launch.py"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:251
msgid "Open a new terminal, the run Rviz using"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:253
msgid "rviz2 -d ~/dev_ws/install/urdf_tutorial/share/urdf_tutorial/r2d2.rviz"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:257
msgid ""
"See the [User Guide](http://wiki.ros.org/rviz/UserGuide) for details on how "
"to use Rviz."
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:260
msgid "Summary"
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:262
msgid ""
"You created a JointState publisher node and coupled it with "
"``robot_state_publisher`` to simulate a walking robot. The code used in "
"these examples can be found `here <https://github.com/benbongalon/ros2-"
"migration/tree/master/urdf_tutorial>`__."
msgstr ""

#: ../../../source/Tutorials/URDF/Using-URDF-with-Robot-State-Publisher.rst:265
msgid ""
"Credit is given to the authors of this `ROS 1 tutorial <http://wiki.ros.org/"
"urdf/Tutorials/Using%20urdf%20with%20robot_state_publisher>`__ from which "
"some content was reused."
msgstr ""
