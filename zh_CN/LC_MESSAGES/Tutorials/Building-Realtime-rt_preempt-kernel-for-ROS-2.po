# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Robotics
# This file is distributed under the same license as the ros2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ros2 documentation dashing\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:6
msgid "Building realtime Linux for ROS 2 [community-contributed]"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:8
msgid ""
"This tutorial begins with a clean Ubuntu 20.04.1 install on Intel x86_64. "
"Actual kernel is 5.4.0-54-generic, but we will install the Latest Stable "
"RT_PREEMPT Version. To build the kernel you need at least 30GB free disk "
"space."
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:10
msgid ""
"Check https://wiki.linuxfoundation.org/realtime/start for the latest stable "
"version, at the time of writing this is \"Latest Stable Version 5.4-rt\". If "
"we click on the `link <http://cdn.kernel.org/pub/linux/kernel/projects/"
"rt/5.4/>`_, we get the exact version. Currently it is patch-5.4.78-rt44."
"patch.gz."
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:14
msgid "eclipse-1"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:18
msgid "We create a directory in our home dir with"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:20
msgid "mkdir ~/kernel"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:24
msgid "and switch into it with"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:26
msgid "cd ~/kernel"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:30
msgid ""
"We can go with a browser to https://mirrors.edge.kernel.org/pub/linux/kernel/"
"v5.x/ and see if the version is there. You can download it from the site and "
"move it manually from /Downloads to the /kernel folder, or download it using "
"wget by right clicking the link using \"copy link location\". Example:"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:32
msgid ""
"wget https://mirrors.edge.kernel.org/pub/linux/kernel/v5.x/linux-5.4.78.tar."
"gz"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:36
#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:48
msgid "unpack it with"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:38
msgid "tar -xzf linux-5.4.78.tar.gz"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:42
msgid ""
"download rt_preempt patch matching the Kernel version we just downloaded "
"over at http://cdn.kernel.org/pub/linux/kernel/projects/rt/5.4/"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:44
msgid ""
"wget http://cdn.kernel.org/pub/linux/kernel/projects/rt/5.4/older/"
"patch-5.4.78-rt44.patch.gz"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:50
msgid "gunzip patch-5.4.78-rt44.patch.gz"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:54
msgid "Then switch into the linux directory with"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:56
msgid "cd linux-5.4.78/"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:60
msgid "and patch the kernel with the realtime patch"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:62
msgid "patch -p1 < ../patch-5.4.78-rt44.patch"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:66
msgid ""
"We simply want to use the config of our Ubuntu installation, so we get the "
"Ubuntu config with"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:68
msgid "cp /boot/config-5.4.0-54-generic .config"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:72
msgid ""
"Open Software & Updates. in the Ubuntu Software menu tick the 'Source code' "
"box"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:74
msgid "We need some tools to build kernel, install them with"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:76
msgid ""
"sudo apt-get build-dep linux\n"
"sudo apt-get install libncurses-dev flex bison openssl libssl-dev dkms "
"libelf-dev libudev-dev libpci-dev libiberty-dev autoconf fakeroot"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:81
msgid "To enable all Ubuntu configurations, we simply use"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:83
msgid "yes '' | make oldconfig"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:87
msgid "Then we need to enable rt_preempt in the kernel. We call"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:89
msgid "make menuconfig"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:93
msgid "and set the following"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:95
msgid ""
"# Enable CONFIG_PREEMPT_RT\n"
" -> General Setup\n"
"  -> Preemption Model (Fully Preemptible Kernel (Real-Time))\n"
"   (X) Fully Preemptible Kernel (Real-Time)\n"
"\n"
"# Enable CONFIG_HIGH_RES_TIMERS\n"
" -> General setup\n"
"  -> Timers subsystem\n"
"   [*] High Resolution Timer Support\n"
"\n"
"# Enable CONFIG_NO_HZ_FULL\n"
" -> General setup\n"
"  -> Timers subsystem\n"
"   -> Timer tick handling (Full dynticks system (tickless))\n"
"    (X) Full dynticks system (tickless)\n"
"\n"
"# Set CONFIG_HZ_1000 (note: this is no longer in the General Setup menu, go "
"back twice)\n"
" -> Processor type and features\n"
"  -> Timer frequency (1000 HZ)\n"
"   (X) 1000 HZ\n"
"\n"
"# Set CPU_FREQ_DEFAULT_GOV_PERFORMANCE [=y]\n"
" ->  Power management and ACPI options\n"
"  -> CPU Frequency scaling\n"
"   -> CPU Frequency scaling (CPU_FREQ [=y])\n"
"    -> Default CPUFreq governor (<choice> [=y])\n"
"     (X) performance"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:125
msgid ""
"Save and exit menuconfig. Now we're going to build the kernel which will "
"take quite some time. (10-30min on a modern cpu)"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:127
msgid "make -j `nproc` deb-pkg"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:131
msgid "After the build is finished check the debian packages"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:133
msgid ""
"ls ../*deb\n"
"../linux-headers-5.4.78-rt41_5.4.78-rt44-1_amd64.deb  ../linux-image-5.4.78-"
"rt44-dbg_5.4.78-rt44-1_amd64.deb\n"
"../linux-image-5.4.78-rt41_5.4.78-rt44-1_amd64.deb    ../linux-libc-"
"dev_5.4.78-rt44-1_amd64.deb"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:139
msgid "Then we install all kernel debian packages"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:141
msgid "sudo dpkg -i ../*.deb"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:145
msgid ""
"Now the real time kernel should be installed. Reboot the system and check "
"the new kernel version"
msgstr ""

#: ../../../source/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.rst:147
msgid ""
"sudo reboot\n"
"uname -a\n"
"Linux ros2host 5.4.78-rt44 #1 SMP PREEMPT_RT Fri Nov 6 10:37:59 CET 2020 "
"x86_64 xx"
msgstr ""
