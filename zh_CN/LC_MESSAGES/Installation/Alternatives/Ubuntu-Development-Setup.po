# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation galactic\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:9
msgid "Ubuntu (source)"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:14
msgid "Table of Contents"
msgstr "目录"

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:17
msgid "System requirements"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:18
msgid "The current Debian-based target platforms for Rolling Ridley are:"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:20
msgid "Tier 1: Ubuntu Linux - Focal Fossa (20.04) 64-bit"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:21
msgid "Tier 3: Debian Linux - Bullseye (11) 64-bit"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:24
msgid "Other Linux platforms with varying support levels include:"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:26
msgid ""
"Arch Linux, see `alternate instructions <https://wiki.archlinux.org/index."
"php/ROS#ROS_2>`__"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:27
msgid ""
"Fedora Linux, see :doc:`alternate instructions <Fedora-Development-Setup>`"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:28
msgid ""
"OpenEmbedded / webOS OSE, see `alternate instructions <https://github.com/"
"ros/meta-ros/wiki/OpenEmbedded-Build-Instructions>`__"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:30
msgid "As defined in `REP 2000 <https://www.ros.org/reps/rep-2000.html>`_."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:33
msgid "System setup"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:36
msgid "Set locale"
msgstr ""

#: ../../../source/Installation/_Ubuntu-Set-Locale.rst:1
msgid ""
"Make sure you have a locale which supports ``UTF-8``. If you are in a "
"minimal environment (such as a docker container), the locale may be "
"something minimal like ``POSIX``. We test with the following settings. "
"However, it should be fine if you're using a different UTF-8 supported "
"locale."
msgstr ""

#: ../../../source/Installation/_Ubuntu-Set-Locale.rst:5
msgid ""
"locale  # check for UTF-8\n"
"\n"
"sudo apt update && sudo apt install locales\n"
"sudo locale-gen en_US en_US.UTF-8\n"
"sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\n"
"export LANG=en_US.UTF-8\n"
"\n"
"locale  # verify settings"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:41
msgid "Add the ROS 2 apt repository"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:1
msgid "You will need to add the ROS 2 apt repository to your system."
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:3
msgid ""
"First ensure that the `Ubuntu Universe repository <https://help.ubuntu.com/"
"community/Repositories/Ubuntu>`_ is enabled."
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:5
msgid ""
"sudo apt install software-properties-common\n"
"sudo add-apt-repository universe"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:10
msgid "Now add the ROS 2 GPG key with apt."
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:12
msgid ""
"sudo apt update && sudo apt install curl\n"
"sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros."
"key -o /usr/share/keyrings/ros-archive-keyring.gpg"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:17
msgid "Then add the repository to your sources list."
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:19
msgid ""
"echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/"
"ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-"
"release && echo $UBUNTU_CODENAME) main\" | sudo tee /etc/apt/sources.list.d/"
"ros2.list > /dev/null"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:46
msgid "Install development tools and ROS tools"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:48
msgid ""
"sudo apt update && sudo apt install -y \\\n"
"  python3-pip \\\n"
"  python3-pytest-cov \\\n"
"  ros-dev-tools\n"
"\n"
"# install some pip packages needed for testing\n"
"python3 -m pip install -U \\\n"
"  flake8-blind-except \\\n"
"  flake8-builtins \\\n"
"  flake8-class-newline \\\n"
"  flake8-comprehensions \\\n"
"  flake8-deprecated \\\n"
"  flake8-docstrings \\\n"
"  flake8-import-order \\\n"
"  flake8-quotes \\\n"
"  pytest-repeat \\\n"
"  pytest-rerunfailures \\\n"
"  pytest \\\n"
"  setuptools"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:70
msgid ""
"Ubuntu 18.04 is not an officially supported platform, but may still work.  "
"You'll need at least the following additional dependencies:"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:72
msgid "python3 -m pip install -U importlib-metadata importlib-resources"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:79
msgid "Get ROS 2 code"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:81
msgid "Create a workspace and clone all repos:"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:83
msgid ""
"mkdir -p ~/ros2_rolling/src\n"
"cd ~/ros2_rolling\n"
"vcs import --input https://raw.githubusercontent.com/ros2/ros2/rolling/ros2."
"repos src"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:92
msgid "Install dependencies using rosdep"
msgstr ""

#: ../../../source/Installation/_Apt-Upgrade-Admonition.rst:1
msgid ""
"ROS 2 packages are built on frequently updated Ubuntu systems. It is always "
"recommended that you ensure your system is up to date before installing new "
"packages."
msgstr ""

#: ../../../source/Installation/_Apt-Upgrade-Admonition.rst:4
msgid "sudo apt upgrade"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:96
msgid ""
"sudo rosdep init\n"
"rosdep update\n"
"rosdep install --from-paths src --ignore-src -y --skip-keys \"fastcdr rti-"
"connext-dds-5.3.1 urdfdom_headers\""
msgstr ""

#: ../../../source/Installation/_rosdep_Linux_Mint.rst:1
msgid ""
"**Note**: If you're using a distribution that is based on Ubuntu (like Linux "
"Mint) but does not identify itself as such, you'll get an error message like "
"``Unsupported OS [mint]``. In this case append ``--os=ubuntu:focal`` to the "
"above command."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:105
msgid "Install additional DDS implementations (optional)"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:107
msgid ""
"If you would like to use another DDS or RTPS vendor besides the default, you "
"can find instructions :doc:`here <../DDS-Implementations>`."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:110
msgid "Build the code in the workspace"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:112
msgid ""
"If you have already installed ROS 2 another way (either via Debians or the "
"binary distribution), make sure that you run the below commands in a fresh "
"environment that does not have those other installations sourced. Also "
"ensure that you do not have ``source /opt/ros/${ROS_DISTRO}/setup.bash`` in "
"your ``.bashrc``. You can make sure that ROS 2 is not sourced with the "
"command ``printenv | grep -i ROS``. The output should be empty."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:117
msgid ""
"More info on working with a ROS workspace can be found in :doc:`this "
"tutorial <../../Tutorials/Beginner-Client-Libraries/Colcon-Tutorial>`."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:119
msgid ""
"cd ~/ros2_rolling/\n"
"colcon build --symlink-install"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:124
msgid ""
"Note: if you are having trouble compiling all examples and this is "
"preventing you from completing a successful build, you can use "
"``COLCON_IGNORE`` in the same manner as `CATKIN_IGNORE <https://github.com/"
"ros-infrastructure/rep/blob/master/rep-0128.rst>`__ to ignore the subtree or "
"remove the folder from the workspace. Take for instance: you would like to "
"avoid installing the large OpenCV library. Well then simply run ``touch "
"COLCON_IGNORE`` in the ``cam2image`` demo directory to leave it out of the "
"build process."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:129
msgid "Environment setup"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:132
msgid "Source the setup script"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:134
msgid "Set up your environment by sourcing the following file."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:136
msgid ""
"# Replace \".bash\" with your shell if you're not using bash\n"
"# Possible values are: setup.bash, setup.sh, setup.zsh\n"
". ~/ros2_rolling/install/local_setup.bash"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:145
msgid "Try some examples"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:147
msgid ""
"In one terminal, source the setup file and then run a C++ ``talker``\\ :"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:149
msgid ""
". ~/ros2_rolling/install/local_setup.bash\n"
"ros2 run demo_nodes_cpp talker"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:154
msgid ""
"In another terminal source the setup file and then run a Python "
"``listener``\\ :"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:156
msgid ""
". ~/ros2_rolling/install/local_setup.bash\n"
"ros2 run demo_nodes_py listener"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:161
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages and "
"the ``listener`` saying ``I heard`` those messages. This verifies both the C+"
"+ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:166
msgid "Next steps after installing"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:167
msgid ""
"Continue with the :doc:`tutorials and demos <../../Tutorials>` to configure "
"your environment, create your own workspace and packages, and learn ROS 2 "
"core concepts."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:170
msgid "Using the ROS 1 bridge"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:171
msgid ""
"The ROS 1 bridge can connect topics from ROS 1 to ROS 2 and vice-versa. See "
"the dedicated `documentation <https://github.com/ros2/ros1_bridge/blob/"
"rolling/README.md>`__ on how to build and use the ROS 1 bridge."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:174
msgid "Additional RMW implementations (optional)"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:175
msgid ""
"The default middleware that ROS 2 uses is ``Cyclone DDS``, but the "
"middleware (RMW) can be replaced at runtime. See the :doc:`guide <../../How-"
"To-Guides/Working-with-multiple-RMW-implementations>` on how to work with "
"multiple RMWs."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:179
msgid "Alternate compilers"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:181
msgid ""
"Using a different compiler besides gcc to compile ROS 2 is easy. If you set "
"the environment variables ``CC`` and ``CXX`` to executables for a working C "
"and C++ compiler, respectively, and retrigger CMake configuration (by using "
"``--force-cmake-config`` or by deleting the packages you want to be "
"affected), CMake will reconfigure and use the different compiler."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:184
msgid "Clang"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:186
msgid "To configure CMake to detect and use Clang:"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:188
msgid ""
"sudo apt install clang\n"
"export CC=clang\n"
"export CXX=clang++\n"
"colcon build --cmake-force-configure"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:196
msgid "Stay up to date"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:198
msgid ""
"See :doc:`../Maintaining-a-Source-Checkout` to periodically refresh your "
"source installation."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:201
msgid "Troubleshooting"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:203
msgid ""
"Troubleshooting techniques can be found :ref:`here <linux-troubleshooting>`."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:206
msgid "Uninstall"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:208
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not "
"sourcing the workspace's ``setup`` file. This way, your environment will "
"behave as though there is no Rolling install on your system."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:211
msgid ""
"If you're also trying to free up space, you can delete the entire workspace "
"directory with:"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:213
msgid "rm -rf ~/ros2_rolling"
msgstr ""
