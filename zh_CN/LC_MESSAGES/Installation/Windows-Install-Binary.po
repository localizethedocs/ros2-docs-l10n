# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation foxy\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Installation/Windows-Install-Binary.rst:2
msgid "Windows (binary)"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:6
msgid "Table of Contents"
msgstr "目录"

#: ../../../source/Installation/Windows-Install-Binary.rst:8
msgid ""
"This page explains how to install ROS 2 on Windows from a pre-built binary "
"package."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:12
msgid ""
"The pre-built binary does not include all ROS 2 packages. All packages in "
"the `ROS base variant <https://ros.org/reps/rep-2001.html#ros-base>`_ are "
"included, and only a subset of packages in the `ROS desktop variant <https://"
"ros.org/reps/rep-2001.html#desktop-variants>`_ are included. The exact list "
"of packages are described by the repositories listed in `this ros2.repos "
"file <https://github.com/ros2/ros2/blob/rolling/ros2.repos>`_."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:17
msgid "System requirements"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:19
msgid "Only Windows 10 is supported."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:24
msgid "Installing prerequisites"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:27
msgid "Install Chocolatey"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:29
msgid ""
"Chocolatey is a package manager for Windows, install it by following their "
"installation instructions:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:31
msgid "https://chocolatey.org/"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:33
msgid "You'll use Chocolatey to install some other developer tools."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:36
msgid "Install Python"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:38
msgid ""
"Open a Command Prompt and type the following to install Python via "
"Chocolatey:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:40
msgid "choco install -y python --version 3.8.3"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:44
msgid ""
"ROS 2 expects the python installation to be available in directory ``C:"
"\\python38``. Double check that it is installed there."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:48
msgid "Install Visual C++ Redistributables"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:50
msgid ""
"Open a Command Prompt and type the following to install them via Chocolatey:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:52
msgid "choco install -y vcredist2013 vcredist140"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:57
msgid "Install OpenSSL"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:59
msgid ""
"Download the *Win64 OpenSSL v1.1.1n* OpenSSL installer from `this page "
"<https://slproweb.com/products/Win32OpenSSL.html>`__. Scroll to the bottom "
"of the page and download *Win64 OpenSSL v1.1.1n*. Don't download the Win32 "
"or Light versions, or the v3.X.Y installers."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:63
msgid ""
"Run the installer with default parameters, as the following commands assume "
"you used the default installation directory."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:65
msgid "This command sets an environment variable that persists over sessions:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:67
msgid ""
"setx /m OPENSSL_CONF \"C:\\Program Files\\OpenSSL-Win64\\bin\\openssl.cfg\""
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:71
msgid ""
"You will also need to append the OpenSSL-Win64 bin folder to your PATH. You "
"can do this by clicking the Windows icon, typing \"Environment Variables\", "
"then clicking on \"Edit the system environment variables\". In the resulting "
"dialog, click \"Environment Variables\", then click \"Path\" on the bottom "
"pane, finally click \"Edit\" and add the path below."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:75
msgid "``C:\\Program Files\\OpenSSL-Win64\\bin\\``"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:78
msgid "Install Visual Studio"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:80
msgid "Install Visual Studio 2019."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:82
msgid ""
"If you already have a paid version of Visual Studio 2019 (Professional, "
"Enterprise), skip this step."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:84
msgid ""
"Microsoft provides a free of charge version of Visual Studio 2019, named "
"Community, which can be used to build applications that use ROS 2. `You can "
"download the installer directly through this link. <https://visualstudio."
"microsoft.com/thank-you-downloading-visual-studio/?"
"sku=Community&rel=16&src=myvs&utm_medium=microsoft&utm_source=my."
"visualstudio.com&utm_campaign=download&utm_content=vs+community+2019>`_"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:87
msgid "Make sure that the Visual C++ features are installed."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:89
msgid ""
"An easy way to make sure they're installed is to select the ``Desktop "
"development with C++`` workflow during the install."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:93
msgid ""
"Make sure that no C++ CMake tools are installed by unselecting them in the "
"list of components to be installed."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:96
msgid "Install additional DDS implementations (optional)"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:98
msgid ""
"If you would like to use another DDS or RTPS vendor besides the default, "
"eProsima's Fast RTPS, you can find instructions :doc:`here <DDS-"
"Implementations>`."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:101
msgid "Install OpenCV"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:103
msgid "Some of the examples require OpenCV to be installed."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:105
msgid ""
"You can download a precompiled version of OpenCV 3.4.6 from https://github."
"com/ros2/ros2/releases/download/opencv-archives/opencv-3.4.6-vc16.VS2019."
"zip ."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:107
msgid ""
"Assuming you unpacked it to ``C:\\opencv``\\ , type the following on a "
"Command Prompt (requires Admin privileges):"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:109
msgid "setx /m OpenCV_DIR C:\\opencv"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:113
msgid ""
"Since you are using a precompiled ROS version, we have to tell it where to "
"find the OpenCV libraries. You have to extend the ``PATH`` variable to ``C:"
"\\opencv\\x64\\vc16\\bin``."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:117
msgid "Install dependencies"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:119
msgid ""
"There are a few dependencies not available in the Chocolatey package "
"database. In order to ease the manual installation process, we provide the "
"necessary Chocolatey packages."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:122
msgid "As some chocolatey packages rely on it, we start by installing CMake"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:124
msgid "choco install -y cmake"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:128
msgid ""
"You will need to append the CMake bin folder ``C:\\Program "
"Files\\CMake\\bin`` to your PATH."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:130
msgid ""
"Please download these packages from `this <https://github.com/ros2/choco-"
"packages/releases/latest>`__ GitHub repository."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:132
msgid "asio.1.12.1.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:133
msgid "bullet.2.89.0.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:134
msgid "cunit.2.1.3.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:135
msgid "eigen-3.3.4.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:136
msgid "tinyxml-usestl.2.6.2.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:137
msgid "tinyxml2.6.0.0.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:138
msgid "log4cxx.0.10.0.nupkg"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:140
msgid ""
"Once these packages are downloaded, open an administrative shell and execute "
"the following command:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:142
msgid ""
"choco install -y -s <PATH\\TO\\DOWNLOADS> asio cunit eigen tinyxml-usestl "
"tinyxml2 log4cxx bullet"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:146
msgid ""
"Please replace ``<PATH\\TO\\DOWNLOADS>`` with the folder you downloaded the "
"packages to."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:148
msgid "You must also install some python dependencies for command-line tools:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:150
msgid ""
"python -m pip install -U catkin_pkg cryptography empy ifcfg lark-parser lxml "
"netifaces numpy opencv-python pyparsing pyyaml setuptools rosdistro"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:155
msgid "RQt dependencies"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:157
msgid "python -m pip install -U pydot PyQt5"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:163
msgid ""
"To run rqt_graph, you'll need `Graphviz <https://graphviz.gitlab.io/>`__."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:165
msgid "choco install graphviz"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:169
msgid ""
"You will need to append the Graphviz bin folder ``C:\\Program "
"Files\\Graphviz\\bin`` to your PATH, by navigating to \"Edit the system "
"environment variables\" as described above."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:172
msgid "Downloading ROS 2"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:174
msgid "Go to the releases page: https://github.com/ros2/ros2/releases"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:175
msgid ""
"Download the latest package for Windows, e.g., ``ros2-rolling-*-windows-"
"AMD64.zip``."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:179
msgid ""
"There may be more than one binary download option which might cause the file "
"name to differ."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:183
msgid ""
"To install debug libraries for ROS 2, see `Extra Stuff for Debug`_. Then "
"continue on with downloading ``ros2-rolling-*-windows-debug-AMD64.zip``."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:186
msgid ""
"Unpack the zip file somewhere (we'll assume ``C:\\dev\\ros2_rolling``\\ )."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:189
msgid "Environment setup"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:191
msgid ""
"Start a command shell and source the ROS 2 setup file to set up the "
"workspace:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:193
msgid "call C:\\dev\\ros2_rolling\\local_setup.bat"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:197
msgid ""
"It is normal that the previous command, if nothing else went wrong, outputs "
"\"The system cannot find the path specified.\" exactly once."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:200
msgid "Try some examples"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:202
msgid ""
"In a command shell, set up the ROS 2 environment as described above and then "
"run a C++ ``talker``\\ :"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:204
msgid "ros2 run demo_nodes_cpp talker"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:208
msgid "Start another command shell and run a Python ``listener``\\ :"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:210
msgid "ros2 run demo_nodes_py listener"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:214
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages and "
"the ``listener`` saying ``I heard`` those messages. This verifies both the C+"
"+ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:220
msgid "Next steps after installing"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:221
msgid ""
"Continue with the :doc:`tutorials and demos <../../Tutorials>` to configure "
"your environment, create your own workspace and packages, and learn ROS 2 "
"core concepts."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:224
msgid "Additional RMW implementations (optional)"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:225
msgid ""
"The default middleware that ROS 2 uses is ``Fast-RTPS``, but the middleware "
"(RMW) can be replaced at runtime. See the :doc:`guide <../How-To-Guides/"
"Working-with-multiple-RMW-implementations>` on how to work with multiple "
"RMWs."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:229
msgid "Troubleshooting"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:231
msgid ""
"Troubleshooting techniques can be found :ref:`here <windows-"
"troubleshooting>`."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:234
msgid "Uninstall"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:236
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not "
"sourcing the workspace's ``setup`` file. This way, your environment will "
"behave as though there is no Rolling install on your system."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:239
msgid ""
"If you're also trying to free up space, you can delete the entire workspace "
"directory with:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:241
msgid "rmdir /s /q \\ros2_rolling"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:246
msgid "Extra Stuff for Debug"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:248
msgid ""
"To download the ROS 2 debug libraries you'll need to download ``ros2-rolling-"
"*-windows-debug-AMD64.zip``. Please note that debug libraries require some "
"more additional configuration/setup to work as given below."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:251
msgid ""
"Python installation may require modification to enable debugging symbols and "
"debug binaries:"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:253
msgid "Search in windows **Search Bar** and open **Apps and Features**."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:254
msgid "Search for the installed Python version."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:256
msgid "Click Modify."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:261
msgid "Click Next to go to **Advanced Options**."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:266
msgid ""
"Make sure **Download debugging symbols** and **Download debug binaries** are "
"checked."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:271
msgid "Click Install."
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:274
msgid "(Alternative) ROS 2 Build Installation from aka.ms/ros"
msgstr ""

#: ../../../source/Installation/Windows-Install-Binary.rst:276
msgid ""
"https://aka.ms/ros project hosts ROS 2 builds against the release snapshots. "
"You can find the up-to-date instructions `here <https://ms-iot.github.io/"
"ROSOnWindows/GettingStarted/SetupRos2.html>`_."
msgstr ""
