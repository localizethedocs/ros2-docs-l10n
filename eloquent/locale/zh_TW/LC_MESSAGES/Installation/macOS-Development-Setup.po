# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Robotics
# This file is distributed under the same license as the ros2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ros2 documentation eloquent\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Installation/macOS-Development-Setup.rst:3
msgid "Building ROS 2 on macOS"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:7
msgid "Table of Contents"
msgstr "目次表"

#: ../../../source/Installation/macOS-Development-Setup.rst:10
msgid "System requirements"
msgstr "系統要求"

#: ../../../source/Installation/macOS-Development-Setup.rst:12
msgid "We support macOS 10.14 (Mojave)."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:14
msgid "However, some older versions like 10.13.x are known to work as well."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:17
msgid "Install prerequisites"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:19
msgid "You need the following things installed to build ROS 2:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:23
msgid "**Xcode**"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:27
msgid ""
"If you don't already have it installed, install Xcode and the Command Line "
"Tools:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:29
msgid ""
"xcode-select --install\n"
"sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:35
msgid ""
"**brew** *(needed to install more stuff; you probably already have this)*:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:38
msgid "Follow installation instructions at http://brew.sh/"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:40
msgid ""
"*Optional*: Check that ``brew`` is happy with your system configuration by "
"running:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:42
msgid "brew doctor"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:46
msgid "Fix any problems that it identifies."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:49
msgid "Use ``brew`` to install more stuff:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:51
msgid ""
"brew install cmake cppcheck eigen pcre poco python3 tinyxml wget\n"
"\n"
"# install dependencies for Fast-RTPS if you are using it\n"
"brew install asio tinyxml2\n"
"\n"
"brew install opencv\n"
"\n"
"# install console_bridge for rosbag2\n"
"brew install console_bridge\n"
"\n"
"# install OpenSSL for DDS-Security\n"
"brew install openssl\n"
"# if you are using ZSH, then replace '.bashrc' with '.zshrc'\n"
"echo \"export OPENSSL_ROOT_DIR=$(brew --prefix openssl)\" >> ~/.bashrc\n"
"\n"
"# install dependencies for rcl_logging_log4cxx\n"
"brew install log4cxx\n"
"\n"
"# install CUnit for Cyclone DDS\n"
"brew install cunit"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:75
msgid "Install rviz dependencies"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:77
msgid ""
"# install dependencies for Rviz\n"
"brew install qt freetype assimp\n"
"\n"
"# Add the Qt directory to the PATH and CMAKE_PREFIX_PATH\n"
"export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:/usr/local/opt/qt\n"
"export PATH=$PATH:/usr/local/opt/qt/bin"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:87
msgid "Install rqt dependencies"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:89
msgid "``brew install graphviz pyqt5 sip``"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:91
msgid ""
"Fix some path names when looking for sip stuff during install (see `ROS 1 "
"wiki <https://wiki.ros.org/kinetic/Installation/OSX/Homebrew/"
"Source#Qt_naming_issue>`__):"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:93
msgid "``ln -s /usr/local/share/sip/Qt5 /usr/local/share/sip/PyQt5``"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:96
msgid ""
"Use ``python3 -m pip`` (just ``pip`` may install Python3 or Python2) to "
"install more stuff:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:98
msgid ""
"python3 -m pip install -U argcomplete catkin_pkg colcon-common-extensions "
"coverage cryptography empy flake8 flake8-blind-except flake8-builtins flake8-"
"class-newline flake8-comprehensions flake8-deprecated flake8-docstrings "
"flake8-import-order flake8-quotes ifcfg lark-parser lxml mock mypy netifaces "
"nose pep8 pydocstyle pydot pygraphviz pyparsing pytest-mock rosdep "
"setuptools vcstool"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:102
msgid ""
"Please ensure that the ``$PATH`` environment variable contains the install "
"location of the binaries (default: ``$HOME/Library/Python/<version>/bin``)"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:105
msgid ""
"*Optional*: if you want to build the ROS 1<->2 bridge, then you must also "
"install ROS 1:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:108
msgid ""
"Start with the normal install instructions: https://wiki.ros.org/kinetic/"
"Installation/OSX/Homebrew/Source"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:110
msgid ""
"When you get to the step where you call ``rosinstall_generator`` to get the "
"source code, here's an alternate invocation that brings in just the minimum "
"required to produce a useful bridge:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:112
msgid ""
"rosinstall_generator catkin common_msgs roscpp rosmsg --rosdistro kinetic --"
"deps --wet-only --tar > kinetic-ros2-bridge-deps.rosinstall\n"
"wstool init -j8 src kinetic-ros2-bridge-deps.rosinstall"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:118
msgid ""
"Otherwise, just follow the normal instructions, then source the resulting "
"``install_isolated/setup.bash`` before proceeding here to build ROS 2."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:121
msgid "Disable System Integrity Protection (SIP)"
msgstr "停用系統完整保護（System Integrity Protection，SIP）"

#: ../../../source/Installation/macOS-Development-Setup.rst:123
msgid ""
"macOS/OS X versions >=10.11 have System Integrity Protection enabled by "
"default. So that SIP doesn't prevent processes from inheriting dynamic "
"linker environment variables, such as ``DYLD_LIBRARY_PATH``, you'll need to "
"disable it `following these instructions <https://developer.apple.com/"
"library/content/documentation/Security/Conceptual/"
"System_Integrity_Protection_Guide/ConfiguringSystemIntegrityProtection/"
"ConfiguringSystemIntegrityProtection.html>`__."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:127
msgid "Get the ROS 2 code"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:129
msgid "Create a workspace and clone all repos:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:131
msgid ""
"mkdir -p ~/ros2_eloquent/src\n"
"cd ~/ros2_eloquent\n"
"wget https://raw.githubusercontent.com/ros2/ros2/eloquent/ros2.repos\n"
"vcs import src < ros2.repos"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:139
msgid "Install additional DDS vendors (optional)"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:141
msgid ""
"If you would like to use another DDS or RTPS vendor besides the default, "
"eProsima's Fast RTPS, you can find instructions `here <DDS-Implementations>`."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:144
msgid "Build the ROS 2 code"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:145
msgid ""
"Run the ``colcon`` tool to build everything (more on using ``colcon`` in "
"`this tutorial </Tutorials/Colcon-Tutorial>`):"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:147
msgid ""
"cd ~/ros2_eloquent/\n"
"colcon build --symlink-install"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:153
msgid "Environment setup"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:155
msgid "Source the ROS 2 setup file:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:157
msgid ". ~/ros2_eloquent/install/setup.bash"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:161
msgid ""
"This will automatically set up the environment for any DDS vendors that "
"support was built for."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:164
msgid "Try some examples"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:166
msgid ""
"In one terminal, set up the ROS 2 environment as described above and then "
"run a C++ ``talker``:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:168
msgid "ros2 run demo_nodes_cpp talker"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:172
msgid ""
"In another terminal source the setup file and then run a Python ``listener``:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:174
msgid "ros2 run demo_nodes_py listener"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:178
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages and "
"the ``listener`` saying ``I heard`` those messages. This verifies both the C+"
"+ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:183
msgid "Next steps after installing"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:184
msgid ""
"Continue with the `tutorials and demos </Tutorials>` to configure your "
"environment, create your own workspace and packages, and learn ROS 2 core "
"concepts."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:187
msgid "Using the ROS 1 bridge"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:188
msgid ""
"The ROS 1 bridge can connect topics from ROS 1 to ROS 2 and vice-versa. See "
"the dedicated `documentation <https://github.com/ros2/ros1_bridge/blob/"
"master/README.md>`__ on how to build and use the ROS 1 bridge."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:191
msgid "Additional RMW implementations (optional)"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:192
msgid ""
"The default middleware that ROS 2 uses is ``Fast-RTPS``, but the middleware "
"(RMW) can be replaced at runtime. See the `tutorial </Tutorials/Working-with-"
"multiple-RMW-implementations>` on how to work with multiple RMWs."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:197
msgid "Stay up to date"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:199
msgid ""
"See :ref:`MaintainingSource` to periodically refresh your source "
"installation."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:202
msgid "Troubleshooting"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:204
msgid ""
"Troubleshooting techniques can be found :ref:`here <macOS-troubleshooting>`."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:207
msgid "Uninstall"
msgstr "解除安裝"

#: ../../../source/Installation/macOS-Development-Setup.rst:209
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not "
"sourcing the workspace's ``setup`` file. This way, your environment will "
"behave as though there is no Eloquent install on your system."
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:212
msgid ""
"If you're also trying to free up space, you can delete the entire workspace "
"directory with:"
msgstr ""

#: ../../../source/Installation/macOS-Development-Setup.rst:214
msgid "rm -rf ~/ros2_eloquent"
msgstr ""
