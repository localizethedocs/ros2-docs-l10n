# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Robotics
# This file is distributed under the same license as the ros2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ros2 documentation eloquent\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:2
msgid "Installation troubleshooting"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:4
msgid ""
"Troubleshooting techniques for installation are sorted by the platforms they "
"apply to."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:8
msgid "Platforms"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:11
msgid "General"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:13
msgid "General troubleshooting techniques apply to all platforms."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:16
msgid "Enable multicast"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:18
msgid ""
"In order to communicate successfully via DDS, the used network interface has "
"to be multicast enabled. We've seen in past experiences that this might not "
"necessarily be enabled by default (on Ubuntu or OSX) when using the loopback "
"adapter. See the `original issue <https://github.com/ros2/ros2/"
"issues/552>`__ or a `conversation on ros-answers <https://answers.ros.org/"
"question/300370/ros2-talker-cannot-communicate-with-listener/>`__. You can "
"verify that your current setup allows multicast with the ROS 2 tool:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:23
msgid "In Terminal 1:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:25
msgid "ros2 multicast receive"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:29
msgid "In Terminal 2:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:31
msgid "ros2 multicast send"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:35
msgid "If the first command did not return a response similar to:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:37
msgid "Received from xx.xxx.xxx.xx:43751: 'Hello World!'"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:41
msgid ""
"then you will need to update your firewall configuration to allow multicast "
"using `ufw <https://help.ubuntu.com/community/UFW>`__."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:43
msgid ""
"sudo ufw allow in proto udp to 224.0.0.0/4\n"
"sudo ufw allow in proto udp from 224.0.0.0/4"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:49
msgid ""
"You can check if the multicast flag is enabled for your network interface "
"using the :code:`ifconfig` tool and looking for :code:`MULITCAST` in the "
"flags section:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:51
msgid ""
"eno1: flags=4163<...,MULTICAST>\n"
"   ..."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:57
msgid "Import failing without library present on the system"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:59
msgid ""
"Sometimes ``rclpy`` fails to be imported because the expected C extension "
"libraries are not found. If so, compare the libraries present in the "
"directory with the one mentioned in the error message. Assuming a file with "
"a similar name exists (same prefix like ``_rclpy.`` and same suffix like ``."
"so`` but a different Python version / architecture) you are using a "
"different Python interpreter than which was used to build the C extension. "
"Be sure to use the same Python interpreter as the one used to build the "
"binary."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:64
msgid ""
"For example, such a mismatch can crop up after an update of the OS. Then, "
"rebuilding the workspace may fix the issue."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:69
msgid "Linux"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:72
msgid "Internal compiler error"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:74
msgid ""
"If you experience an ICE when trying to compile on a memory constrained "
"platform like a Raspberry PI you might want to build single threaded (prefix "
"the build invocation with ``MAKEFLAGS=-j1``)."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:77
msgid "Out of memory"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:79
msgid ""
"The ``ros1_bridge`` in its current form requires 4Gb of free RAM to compile. "
"If you don't have that amount of RAM available it's suggested to use "
"``COLCON_IGNORE`` in that folder and skip its compilation."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:83
msgid "Multiple host interference"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:85
msgid ""
"If you're running multiple instances on the same network you may get "
"interference. To avoid this you can set the environment variable "
"``ROS_DOMAIN_ID`` to a different integer, the default is zero. This will "
"define the DDS domain id for your system. Note that if you are using the "
"OpenSplice DDS implementation you will also need to update the OpenSplice "
"configuration file accordingly. The location of the configuration file is "
"referenced in the ``OSPL_URI`` environment variable."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:92
msgid "Exception sourcing setup.bash"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:96
msgid ""
"If you encounter exceptions when trying to source the environment after "
"building from source, try to upgrade ``colcon`` related packages using"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:98
msgid ""
"colcon version-check  # check if newer versions available\n"
"sudo apt install python3-colcon* --only-upgrade  # upgrade installed colcon "
"packages to latest version"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:106
msgid "macOS"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:109
msgid "Segmentation fault when using ``pyenv``"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:111
msgid ""
"``pyenv`` seems to default to building Python with ``.a`` files, but that "
"causes issues with ``rclpy``, so it's recommended to build Python with "
"Frameworks enabled on macOS when using ``pyenv``:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:113
msgid ""
"https://github.com/pyenv/pyenv/wiki#how-to-build-cpython-with-framework-"
"support-on-os-x"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:116
msgid "Library not loaded; image not found"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:118
msgid ""
"If you are seeing library loading issues at runtime (either running tests or "
"running nodes), such as the following:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:120
msgid ""
"ImportError: dlopen(.../ros2_<distro>/ros2-osx/lib/python3.7/site-packages/"
"rclpy/_rclpy.cpython-37m-darwin.so, 2): Library not loaded: @rpath/"
"librcl_interfaces__rosidl_typesupport_c.dylib\n"
"  Referenced from: .../ros2_<distro>/ros2-osx/lib/python3.7/site-packages/"
"rclpy/_rclpy.cpython-37m-darwin.so\n"
"  Reason: image not found"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:126
msgid ""
"Then you probably have System Integrity Protection enabled. Follow `these "
"instructions <https://developer.apple.com/library/content/documentation/"
"Security/Conceptual/System_Integrity_Protection_Guide/"
"ConfiguringSystemIntegrityProtection/ConfiguringSystemIntegrityProtection."
"html>`__ to disable System Integrity Protection (SIP)."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:130
msgid "Qt build error: ``unknown type name 'Q_ENUM'``"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:132
msgid "If you see build errors related to Qt, e.g.:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:134
msgid ""
"In file included from /usr/local/opt/qt/lib/QtGui.framework/Headers/"
"qguiapplication.h:46:\n"
"/usr/local/opt/qt/lib/QtGui.framework/Headers/qinputmethod.h:87:5: error:\n"
"      unknown type name 'Q_ENUM'\n"
"    Q_ENUM(Action)\n"
"    ^"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:142
msgid ""
"you may be using qt4 instead of qt5: see https://github.com/ros2/ros2/"
"issues/441"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:146
msgid ""
"Missing symbol when opencv (and therefore libjpeg, libtiff, and libpng) are "
"installed with Homebrew"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:148
msgid "If you have opencv installed you might get this:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:150
msgid ""
"dyld: Symbol not found: __cg_jpeg_resync_to_restart\n"
"  Referenced from: /System/Library/Frameworks/ImageIO.framework/Versions/A/"
"ImageIO\n"
"  Expected in: /usr/local/lib/libJPEG.dylib\n"
" in /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\n"
"/bin/sh: line 1: 25274 Trace/BPT trap: 5       /usr/local/bin/cmake"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:158
msgid "If so, to build you'll have to do this:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:160
msgid "$ brew unlink libpng libtiff libjpeg"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:164
msgid ""
"But this will break opencv, so you'll also need to update it to continue "
"working:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:166
msgid ""
"$ sudo install_name_tool -change /usr/local/lib/libjpeg.8.dylib /usr/local/"
"opt/jpeg/lib/libjpeg.8.dylib /usr/local/lib/libopencv_highgui.2.4.dylib\n"
"$ sudo install_name_tool -change /usr/local/lib/libpng16.16.dylib /usr/local/"
"opt/libpng/lib/libpng16.16.dylib /usr/local/lib/libopencv_highgui.2.4.dylib\n"
"$ sudo install_name_tool -change /usr/local/lib/libtiff.5.dylib /usr/local/"
"opt/libtiff/lib/libtiff.5.dylib /usr/local/lib/libopencv_highgui.2.4.dylib\n"
"$ sudo install_name_tool -change /usr/local/lib/libjpeg.8.dylib /usr/local/"
"opt/jpeg/lib/libjpeg.8.dylib /usr/local/Cellar/libtiff/4.0.4/lib/libtiff.5."
"dylib"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:173
msgid ""
"The first command is necessary to avoid things built against the system "
"libjpeg (etc.) from getting the version in /usr/local/lib. The others are "
"updating things built by Homebrew so that they can find the version of "
"libjpeg (etc.) without having them in /usr/local/lib."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:177
msgid ""
"Xcode-select error: tool ``xcodebuild`` requires Xcode, but active developer "
"directory is a command line instance"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:181
msgid "If you recently installed Xcode, you may encounter this error:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:183
msgid ""
"Xcode: xcode-select: error: tool 'xcodebuild' requires Xcode,\n"
"but active developer directory '/Library/Developer/CommandLineTools' is a "
"command line tools instance"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:188
msgid "To resolve this error, you will need to:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:190
msgid "Double check that you have the command line tool installed:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:192
msgid "$ xcode-select --install"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:196
msgid "Accept the terms and conditions of Xcode by typing in terminal:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:198
msgid "$ sudo xcodebuild -license accept"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:202
msgid ""
"Ensure Xcode app is in the ``/Applications`` directory (NOT ``/Users/{user}/"
"Applications``)"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:204
msgid ""
"Point ``xcode-select`` to the Xcode app Developer directory using the "
"following command:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:206
msgid "$ sudo xcode-select -s /Applications/Xcode.app/Contents/Developer"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:211
msgid "qt_gui_cpp error: SIP binding generator NOT available"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:215
msgid "When building qt_gui_cpp there may be errors look like the following:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:217
msgid ""
"--- stderr: qt_gui_cpp\n"
"\n"
"CMake Error at src/CMakeLists.txt:10 (message):\n"
"  No Python binding generator found.\n"
"\n"
"---\n"
"Failed   <<< qt_gui_cpp [ Exited with code 1 ]"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:227
msgid ""
"To fix this issue, follow `these steps <../../Tutorials/RQt-Source-Install-"
"MacOS>` to install dependencies for RQt."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:230
msgid ""
"rosdep install error ``homebrew: Failed to detect successful installation of "
"[qt5]``"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:231
msgid ""
"While following the `Creating a workspace <https://index.ros.org/doc/ros2/"
"Tutorials/Workspace/Creating-A-Workspace/#creating-a-workspace>`__ tutorial, "
"you might encounter the following error stating that ``rosdep`` failes to "
"install Qt5."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:233
msgid ""
"$ rosdep install -i --from-path src --rosdistro eloquent -y\n"
"executing command [brew install qt5]\n"
"Warning: qt 5.15.0 is already installed and up-to-date\n"
"To reinstall 5.15.0, run `brew reinstall qt`\n"
"ERROR: the following rosdeps failed to install\n"
"  homebrew: Failed to detect successful installation of [qt5]"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:242
msgid ""
"This error seems to stem from a `linking issue <https://github.com/ros-"
"infrastructure/rosdep/issues/490#issuecomment-334959426>`__ and can be "
"resolved by running the following command."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:244
msgid ""
"$ cd /usr/local/Cellar\n"
"$ sudo ln -s qt qt5"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:249
msgid "Running the ``rosdep`` command should now execute normally:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:251
msgid ""
"$ rosdep install -i --from-path src --rosdistro eloquent -y\n"
"#All required rosdeps installed successfully"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:260
msgid "Windows"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:263
msgid "Import failing even with library present on the system"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:265
msgid ""
"Sometimes ``rclpy`` fails to be imported because of some missing DLLs on "
"your system. If so, make sure to install all the dependencies listed in the "
"\"Installing prerequisites\" sections of the `installation instructions "
"<windows-install-binary-installing-prerequisites>`)."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:268
msgid ""
"If you are installing from binaries, you may need to update your "
"dependencies: they must be the same version as those used to build the "
"binaries."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:270
msgid ""
"If you are still having issues, you can use the `Dependencies <https://"
"github.com/lucasg/Dependencies>`_ tool to determine which dependencies are "
"missing on your system. Use the tool to load the corresponding ``.pyd`` "
"file, and it should report unavailable ``DLL`` modules. Be sure that the "
"current workspace is sourced before you execute the tool, otherwise there "
"will be unresolved ROS DLL files. Use this information to install additional "
"dependencies or adjust your path as necessary."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:276
msgid "CMake error setting modification time"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:278
msgid ""
"If you run into the CMake error ``file INSTALL cannot set modification time "
"on ...`` when installing files it is likely that an anti virus software or "
"Windows Defender are interfering with the build. E.g. for Windows Defender "
"you can list the workspace location to be excluded to prevent it from "
"scanning those files."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:281
msgid "260 character path limit"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:283
msgid ""
"The input line is too long.\n"
"The syntax of the command is incorrect."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:288
msgid ""
"Depending on your directory hierarchy, you may see path length limit errors "
"when building ROS 2 from source or your own libraries."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:290
msgid "To allow deeper path lengths:"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:292
msgid ""
"Run ``regedit.exe``, navigate to "
"``Computer\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem``, "
"and set ``LongPathsEnabled`` to 0x00000001 (1)."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:294
msgid ""
"Hit the windows key and type ``Edit Group Policy``. Navigate to Local "
"Computer Policy > Computer Configuration > Administrative Templates > System "
"> Filesystem. Right click ``Enable Win32 long paths``, click Edit. In the "
"dialog, select Enabled and click OK."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:299
msgid ""
"Close and open your terminal to reset the environment and try building again."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:302
msgid ""
"CMake packages unable to find asio, tinyxml2, tinyxml, eigen, or log4cxx"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:304
msgid ""
"We've seen that sometimes the chocolatey packages for ``asio``, "
"``tinyxml2``, etc. do not add important registry entries and CMake will be "
"unable to find them when building ROS 2. We've not yet been able to identify "
"the root cause, but uninstalling the chocolatey packages (with ``-n`` if the "
"uninstall fails the first time), and then reinstalling them will fix the "
"issue."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:308
msgid "patch.exe opens a new command window and asks for administrator"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:310
msgid ""
"This will also cause the build of packages which need to use patch to fail, "
"even you allow it to use administrator rights."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:312
msgid ""
"Make sure you're building in a Visual Studio command prompt which has been "
"run as administrator."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:313
msgid ""
"On some machines canceling the prompt without selecting \"Yes\" will also "
"work."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:316
msgid "Failed to load Fast RTPS shared library"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:320
msgid ""
"Fast RTPS requires ``msvcr20.dll``, which is part of the ``Visual C++ "
"Redistributable Packages for Visual Studio 2013``. Although it is usually "
"installed by default in Windows 10, we know that some Windows 10-like "
"versions don't have it installed by default (e.g.: Windows Server 2019). In "
"case you don't have it installed, you can download it from `here <https://"
"www.microsoft.com/en-us/download/details.aspx?id=40784>`_."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:325
msgid "Binary installation specific"
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:327
msgid ""
"If your example does not start because of missing DLLs, please verify that "
"all libraries from external dependencies such as OpenCV are located inside "
"your ``PATH`` variable."
msgstr ""

#: ../../../source/Troubleshooting/Installation-Troubleshooting.rst:328
msgid ""
"If you forget to call the ``local_setup.bat`` file from your terminal, the "
"demo programs will most likely crash immediately."
msgstr ""
