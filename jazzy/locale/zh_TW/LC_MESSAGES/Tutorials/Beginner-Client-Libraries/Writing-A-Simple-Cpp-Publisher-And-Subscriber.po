# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation jazzy\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:8
msgid "Writing a simple publisher and subscriber (C++)"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:10
msgid "**Goal:** Create and run a publisher and subscriber node using C++."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:12
msgid "**Tutorial level:** Beginner"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:14
msgid "**Time:** 20 minutes"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:18
msgid "Contents"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:21
msgid "Background"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:23
msgid ""
":doc:`Nodes <../Beginner-CLI-Tools/Understanding-ROS2-Nodes/Understanding-"
"ROS2-Nodes>` are executable processes that communicate over the ROS graph. "
"In this tutorial, the nodes will pass information in the form of string "
"messages to each other over a :doc:`topic <../Beginner-CLI-Tools/"
"Understanding-ROS2-Topics/Understanding-ROS2-Topics>`. The example used here "
"is a simple \"talker\" and \"listener\" system; one node publishes data and "
"the other subscribes to the topic so it can receive that data."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:27
msgid ""
"The code used in these examples can be found `here <https://github.com/ros2/"
"examples/tree/rolling/rclcpp/topics>`__."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:30
msgid "Prerequisites"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:32
msgid ""
"In previous tutorials, you learned how to :doc:`create a workspace <./"
"Creating-A-Workspace/Creating-A-Workspace>` and :doc:`create a package <./"
"Creating-Your-First-ROS2-Package>`."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:35
msgid "Tasks"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:38
msgid "1 Create a package"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:40
msgid ""
"Open a new terminal and :doc:`source your ROS 2 installation <../Beginner-"
"CLI-Tools/Configuring-ROS2-Environment>` so that ``ros2`` commands will work."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:42
msgid ""
"Navigate into the ``ros2_ws`` directory created in a :ref:`previous tutorial "
"<new-directory>`."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:44
msgid ""
"Recall that packages should be created in the ``src`` directory, not the "
"root of the workspace. So, navigate into ``ros2_ws/src``, and run the "
"package creation command:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:47
msgid ""
"$ ros2 pkg create --build-type ament_cmake --license Apache-2.0 cpp_pubsub"
msgstr ""
"$ ros2 pkg create --build-type ament_cmake --license Apache-2.0 cpp_pubsub"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:51
msgid ""
"Your terminal will return a message verifying the creation of your package "
"``cpp_pubsub`` and all its necessary files and folders."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:53
msgid ""
"Navigate into ``ros2_ws/src/cpp_pubsub/src``. Recall that this is the "
"directory in any CMake package where the source files containing executables "
"belong."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:58
msgid "2 Write the publisher node"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:60
msgid "Download the example talker code by entering the following command:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:64
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:305
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:436
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:455
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:477
msgid "Linux"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:66
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:72
msgid ""
"$ wget -O publisher_lambda_function.cpp https://raw.githubusercontent.com/"
"ros2/examples/rolling/rclcpp/topics/minimal_publisher/lambda.cpp"
msgstr ""
"$ wget -O publisher_lambda_function.cpp https://raw.githubusercontent.com/"
"ros2/examples/rolling/rclcpp/topics/minimal_publisher/lambda.cpp"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:70
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:311
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:442
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:461
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:483
msgid "macOS"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:76
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:317
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:446
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:467
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:489
msgid "Windows"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:78
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:319
msgid "In a Windows command line prompt:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:80
msgid ""
"$ curl -sk https://raw.githubusercontent.com/ros2/examples/rolling/rclcpp/"
"topics/minimal_publisher/lambda.cpp -o publisher_lambda_function.cpp"
msgstr ""
"$ curl -sk https://raw.githubusercontent.com/ros2/examples/rolling/rclcpp/"
"topics/minimal_publisher/lambda.cpp -o publisher_lambda_function.cpp"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:84
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:325
msgid "Or in powershell:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:86
msgid ""
"$ curl https://raw.githubusercontent.com/ros2/examples/rolling/rclcpp/topics/"
"minimal_publisher/lambda.cpp -o publisher_lambda_function.cpp"
msgstr ""
"$ curl https://raw.githubusercontent.com/ros2/examples/rolling/rclcpp/topics/"
"minimal_publisher/lambda.cpp -o publisher_lambda_function.cpp"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:90
msgid ""
"Now there will be a new file named ``publisher_lambda_function.cpp``. Open "
"the file using your preferred text editor."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:93
msgid ""
"#include <chrono>\n"
"#include <memory>\n"
"#include <string>\n"
"\n"
"#include \"rclcpp/rclcpp.hpp\"\n"
"#include \"std_msgs/msg/string.hpp\"\n"
"\n"
"using namespace std::chrono_literals;\n"
"\n"
"/* This example creates a subclass of Node and uses a fancy C++11 lambda\n"
"* function to shorten the callback syntax, at the expense of making the\n"
"* code somewhat more difficult to understand at first glance. */\n"
"\n"
"class MinimalPublisher : public rclcpp::Node\n"
"{\n"
"public:\n"
"  MinimalPublisher()\n"
"  : Node(\"minimal_publisher\"), count_(0)\n"
"  {\n"
"    publisher_ = this->create_publisher<std_msgs::msg::String>(\"topic\", "
"10);\n"
"    auto timer_callback =\n"
"      [this]() -> void {\n"
"        auto message = std_msgs::msg::String();\n"
"        message.data = \"Hello, world! \" + std::to_string(this->count_++);\n"
"        RCLCPP_INFO(this->get_logger(), \"Publishing: '%s'\", message.data."
"c_str());\n"
"        this->publisher_->publish(message);\n"
"      };\n"
"    timer_ = this->create_wall_timer(500ms, timer_callback);\n"
"  }\n"
"\n"
"private:\n"
"  rclcpp::TimerBase::SharedPtr timer_;\n"
"  rclcpp::Publisher<std_msgs::msg::String>::SharedPtr publisher_;\n"
"  size_t count_;\n"
"};\n"
"\n"
"int main(int argc, char * argv[])\n"
"{\n"
"  rclcpp::init(argc, argv);\n"
"  rclcpp::spin(std::make_shared<MinimalPublisher>());\n"
"  rclcpp::shutdown();\n"
"  return 0;\n"
"}"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:140
msgid "2.1 Examine the code"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:142
msgid ""
"The top of the code includes the standard C++ headers you will be using. "
"After the standard C++ headers is the ``rclcpp/rclcpp.hpp`` include which "
"allows you to use the most common pieces of the ROS 2 system. Last is "
"``std_msgs/msg/string.hpp``, which includes the built-in message type you "
"will use to publish data."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:146
msgid ""
"#include <chrono>\n"
"#include <memory>\n"
"#include <string>\n"
"\n"
"#include \"rclcpp/rclcpp.hpp\"\n"
"#include \"std_msgs/msg/string.hpp\"\n"
"\n"
"using namespace std::chrono_literals;"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:157
msgid ""
"These lines represent the node's dependencies. Recall that dependencies have "
"to be added to ``package.xml`` and ``CMakeLists.txt``, which you'll do in "
"the next section."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:160
msgid ""
"The next line creates the node class ``MinimalPublisher`` by inheriting from "
"``rclcpp::Node``. Every ``this`` in the code is referring to the node."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:163
msgid "class MinimalPublisher : public rclcpp::Node"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:167
msgid ""
"The public constructor names the node ``minimal_publisher`` and initializes "
"``count_`` to 0. Inside the constructor, the publisher is initialized with "
"the ``String`` message type, the topic name ``topic``, and the required "
"queue size to limit messages in the event of a backup. Next, a `lambda "
"function <https://en.cppreference.com/w/cpp/language/lambda>`_ called "
"``timer_callback`` is declared. It performs a by-reference capture of the "
"current object ``this``, takes no input arguments and returns void. The "
"``timer_callback`` function creates a new message of type ``String``, sets "
"its data with the desired string and publishes it. The ``RCLCPP_INFO`` macro "
"ensures every published message is printed to the console. At last, "
"``timer_`` is initialized, which causes the ``timer_callback`` function to "
"be executed twice a second."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:175
msgid ""
"public:\n"
"  MinimalPublisher()\n"
"  : Node(\"minimal_publisher\"), count_(0)\n"
"  {\n"
"    publisher_ = this->create_publisher<std_msgs::msg::String>(\"topic\", "
"10);\n"
"    auto timer_callback =\n"
"      [this]() -> void {\n"
"        auto message = std_msgs::msg::String();\n"
"        message.data = \"Hello, world! \" + std::to_string(this->count_++);\n"
"        RCLCPP_INFO(this->get_logger(), \"Publishing: '%s'\", message.data."
"c_str());\n"
"        this->publisher_->publish(message);\n"
"      };\n"
"    timer_ = this->create_wall_timer(500ms, timer_callback);\n"
"  }"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:192
msgid ""
"In the bottom of the class is the declaration of the timer, publisher, and "
"counter fields."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:194
msgid ""
"private:\n"
"  rclcpp::TimerBase::SharedPtr timer_;\n"
"  rclcpp::Publisher<std_msgs::msg::String>::SharedPtr publisher_;\n"
"  size_t count_;"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:201
msgid ""
"Following the ``MinimalPublisher`` class is ``main``, where the node "
"actually executes. ``rclcpp::init`` initializes ROS 2, and ``rclcpp::spin`` "
"starts processing data from the node, including callbacks from the timer."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:204
msgid ""
"int main(int argc, char * argv[])\n"
"{\n"
"  rclcpp::init(argc, argv);\n"
"  rclcpp::spin(std::make_shared<MinimalPublisher>());\n"
"  rclcpp::shutdown();\n"
"  return 0;\n"
"}"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:215
msgid "2.2 Add dependencies"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:217
msgid ""
"Navigate one level back to the ``ros2_ws/src/cpp_pubsub`` directory, where "
"the ``CMakeLists.txt`` and ``package.xml`` files have been created for you."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:219
msgid "Open ``package.xml`` with your text editor."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:221
msgid ""
"As mentioned in the :doc:`previous tutorial <./Creating-Your-First-ROS2-"
"Package>`, make sure to fill in the ``<description>``, ``<maintainer>`` and "
"``<license>`` tags:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:223
msgid ""
"<description>Examples of minimal publisher/subscriber using rclcpp</"
"description>\n"
"<maintainer email=\"you@email.com\">Your Name</maintainer>\n"
"<license>Apache-2.0</license>"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:229
msgid ""
"Add a new line after the ``ament_cmake`` buildtool dependency and paste the "
"following dependencies corresponding to your node's include statements:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:231
msgid ""
"<depend>rclcpp</depend>\n"
"<depend>std_msgs</depend>"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:236
msgid ""
"This declares the package needs ``rclcpp`` and ``std_msgs`` when its code is "
"built and executed."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:238
msgid "Make sure to save the file."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:241
msgid "2.3 CMakeLists.txt"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:243
msgid ""
"Now open the ``CMakeLists.txt`` file. Below the existing dependency "
"``find_package(ament_cmake REQUIRED)``, add the lines:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:246
msgid ""
"find_package(rclcpp REQUIRED)\n"
"find_package(std_msgs REQUIRED)"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:251
msgid ""
"After that, add the executable and name it ``talker`` so you can run your "
"node using ``ros2 run``:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:253
msgid ""
"add_executable(talker src/publisher_lambda_function.cpp)\n"
"ament_target_dependencies(talker rclcpp std_msgs)"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:258
msgid ""
"Finally, add the ``install(TARGETS...)`` section so ``ros2 run`` can find "
"your executable:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:260
msgid ""
"install(TARGETS\n"
"  talker\n"
"  DESTINATION lib/${PROJECT_NAME})"
msgstr ""
"install(TARGETS\n"
"  talker\n"
"  DESTINATION lib/${PROJECT_NAME})"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:266
msgid ""
"You can clean up your ``CMakeLists.txt`` by removing some unnecessary "
"sections and comments, so it looks like this:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:268
msgid ""
"cmake_minimum_required(VERSION 3.5)\n"
"project(cpp_pubsub)\n"
"\n"
"# Default to C++14\n"
"if(NOT CMAKE_CXX_STANDARD)\n"
"  set(CMAKE_CXX_STANDARD 14)\n"
"endif()\n"
"\n"
"if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n"
"  add_compile_options(-Wall -Wextra -Wpedantic)\n"
"endif()\n"
"\n"
"find_package(ament_cmake REQUIRED)\n"
"find_package(rclcpp REQUIRED)\n"
"find_package(std_msgs REQUIRED)\n"
"\n"
"add_executable(talker src/publisher_lambda_function.cpp)\n"
"ament_target_dependencies(talker rclcpp std_msgs)\n"
"\n"
"install(TARGETS\n"
"  talker\n"
"  DESTINATION lib/${PROJECT_NAME})\n"
"\n"
"ament_package()"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:295
msgid ""
"You could build your package now, source the local setup files, and run it, "
"but let's create the subscriber node first so you can see the full system at "
"work."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:298
msgid "3 Write the subscriber node"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:300
msgid ""
"Return to ``ros2_ws/src/cpp_pubsub/src`` to create the next node. Enter the "
"following code in your terminal:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:307
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:313
msgid ""
"$ wget -O subscriber_lambda_function.cpp https://raw.githubusercontent.com/"
"ros2/examples/rolling/rclcpp/topics/minimal_subscriber/lambda.cpp"
msgstr ""
"$ wget -O subscriber_lambda_function.cpp https://raw.githubusercontent.com/"
"ros2/examples/rolling/rclcpp/topics/minimal_subscriber/lambda.cpp"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:321
msgid ""
"$ curl -sk https://raw.githubusercontent.com/ros2/examples/rolling/rclcpp/"
"topics/minimal_subscriber/lambda.cpp -o subscriber_lambda_function.cpp"
msgstr ""
"$ curl -sk https://raw.githubusercontent.com/ros2/examples/rolling/rclcpp/"
"topics/minimal_subscriber/lambda.cpp -o subscriber_lambda_function.cpp"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:327
msgid ""
"$ curl https://raw.githubusercontent.com/ros2/examples/rolling/rclcpp/topics/"
"minimal_subscriber/lambda.cpp -o subscriber_lambda_function.cpp"
msgstr ""
"$ curl https://raw.githubusercontent.com/ros2/examples/rolling/rclcpp/topics/"
"minimal_subscriber/lambda.cpp -o subscriber_lambda_function.cpp"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:331
msgid "Check to ensure that these files exist:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:333
msgid "publisher_lambda_function.cpp  subscriber_lambda_function.cpp"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:337
msgid "Open the ``subscriber_lambda_function.cpp`` with your text editor."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:339
msgid ""
"#include <memory>\n"
"\n"
"#include \"rclcpp/rclcpp.hpp\"\n"
"#include \"std_msgs/msg/string.hpp\"\n"
"\n"
"class MinimalSubscriber : public rclcpp::Node\n"
"{\n"
"public:\n"
"  MinimalSubscriber()\n"
"  : Node(\"minimal_subscriber\")\n"
"  {\n"
"    auto topic_callback =\n"
"      [this](std_msgs::msg::String::UniquePtr msg) -> void {\n"
"        RCLCPP_INFO(this->get_logger(), \"I heard: '%s'\", msg->data."
"c_str());\n"
"      };\n"
"    subscription_ =\n"
"      this->create_subscription<std_msgs::msg::String>(\"topic\", 10, "
"topic_callback);\n"
"  }\n"
"\n"
"private:\n"
"  rclcpp::Subscription<std_msgs::msg::String>::SharedPtr subscription_;\n"
"};\n"
"\n"
"int main(int argc, char * argv[])\n"
"{\n"
"  rclcpp::init(argc, argv);\n"
"  rclcpp::spin(std::make_shared<MinimalSubscriber>());\n"
"  rclcpp::shutdown();\n"
"  return 0;\n"
"}"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:373
msgid "3.1 Examine the code"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:375
msgid ""
"The subscriber node's code is nearly identical to the publisher's. Now the "
"node is named ``minimal_subscriber``, and the constructor uses the node's "
"``create_subscription`` function to execute the callback."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:378
msgid ""
"There is no timer because the subscriber simply responds whenever data is "
"published to the ``topic`` topic."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:380
msgid ""
"The ``topic_callback`` function receives the string message data published "
"over the topic, and simply writes it to the console using the "
"``RCLCPP_INFO`` macro."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:382
msgid ""
"Recall from the :doc:`topic tutorial <../Beginner-CLI-Tools/Understanding-"
"ROS2-Topics/Understanding-ROS2-Topics>` that the topic name and message type "
"used by the publisher and subscriber must match to allow them to communicate."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:384
msgid ""
"public:\n"
"  MinimalSubscriber()\n"
"  : Node(\"minimal_subscriber\")\n"
"  {\n"
"    auto topic_callback =\n"
"      [this](std_msgs::msg::String::UniquePtr msg) -> void {\n"
"        RCLCPP_INFO(this->get_logger(), \"I heard: '%s'\", msg->data."
"c_str());\n"
"      };\n"
"    subscription_ =\n"
"      this->create_subscription<std_msgs::msg::String>(\"topic\", 10, "
"topic_callback);\n"
"  }"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:398
msgid "The only field declaration in this class is the subscription."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:400
msgid ""
"private:\n"
"  rclcpp::Subscription<std_msgs::msg::String>::SharedPtr subscription_;"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:405
msgid ""
"The ``main`` function is exactly the same, except now it spins the "
"``MinimalSubscriber`` node. For the publisher node, spinning meant starting "
"the timer, but for the subscriber it simply means preparing to receive "
"messages whenever they come."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:408
msgid ""
"Since this node has the same dependencies as the publisher node, there's "
"nothing new to add to ``package.xml``."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:411
msgid "3.2 CMakeLists.txt"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:413
msgid ""
"Reopen ``CMakeLists.txt`` and add the executable and target for the "
"subscriber node below the publisher's entries."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:415
msgid ""
"add_executable(listener src/subscriber_lambda_function.cpp)\n"
"ament_target_dependencies(listener rclcpp std_msgs)\n"
"\n"
"install(TARGETS\n"
"  talker\n"
"  listener\n"
"  DESTINATION lib/${PROJECT_NAME})"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:425
msgid ""
"Make sure to save the file, and then your pub/sub system should be ready."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:430
msgid "4 Build and run"
msgstr "4 建置並執行"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:431
msgid ""
"You likely already have the ``rclcpp`` and ``std_msgs`` packages installed "
"as part of your ROS 2 system. It's good practice to run ``rosdep`` in the "
"root of your workspace (``ros2_ws``) to check for missing dependencies "
"before building:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:438
msgid "$ rosdep install -i --from-path src --rosdistro rolling -y"
msgstr "$ rosdep install -i --from-path src --rosdistro rolling -y"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:444
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:448
msgid "rosdep only runs on Linux, so you can skip ahead to next step."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:451
msgid ""
"Still in the root of your workspace, ``ros2_ws``, build your new package:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:457
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:463
msgid "$ colcon build --packages-select cpp_pubsub"
msgstr "$ colcon build --packages-select cpp_pubsub"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:469
msgid "$ colcon build --merge-install --packages-select cpp_pubsub"
msgstr "$ colcon build --merge-install --packages-select cpp_pubsub"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:473
msgid ""
"Open a new terminal, navigate to ``ros2_ws``, and source the setup files:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:479
#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:485
msgid "$ . install/setup.bash"
msgstr "$ . install/setup.bash"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:491
msgid "$ call install/setup.bat"
msgstr "$ call install/setup.bat"

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:495
msgid ""
"Now run the talker node. The terminal should start publishing info messages "
"every 0.5 seconds, like so:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:498
msgid ""
"$ ros2 run cpp_pubsub talker\n"
"[INFO] [minimal_publisher]: Publishing: \"Hello World: 0\"\n"
"[INFO] [minimal_publisher]: Publishing: \"Hello World: 1\"\n"
"[INFO] [minimal_publisher]: Publishing: \"Hello World: 2\"\n"
"[INFO] [minimal_publisher]: Publishing: \"Hello World: 3\"\n"
"[INFO] [minimal_publisher]: Publishing: \"Hello World: 4\""
msgstr ""
"$ ros2 run cpp_pubsub talker\n"
"[INFO] [minimal_publisher]: Publishing: \"Hello World: 0\"\n"
"[INFO] [minimal_publisher]: Publishing: \"Hello World: 1\"\n"
"[INFO] [minimal_publisher]: Publishing: \"Hello World: 2\"\n"
"[INFO] [minimal_publisher]: Publishing: \"Hello World: 3\"\n"
"[INFO] [minimal_publisher]: Publishing: \"Hello World: 4\""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:507
msgid ""
"Open another terminal, source the setup files from inside ``ros2_ws`` again, "
"and then start the listener node. The listener will start printing messages "
"to the console, starting at whatever message count the publisher is on at "
"that time:"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:510
msgid ""
"$ ros2 run cpp_pubsub listener\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 10\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 11\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 12\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 13\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 14\""
msgstr ""
"$ ros2 run cpp_pubsub listener\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 10\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 11\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 12\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 13\"\n"
"[INFO] [minimal_subscriber]: I heard: \"Hello World: 14\""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:519
msgid "Enter ``Ctrl+C`` in each terminal to stop the nodes from spinning."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:522
msgid "Summary"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:524
msgid ""
"You created two nodes to publish and subscribe to data over a topic. Before "
"compiling and running them, you added their dependencies and executables to "
"the package configuration files."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:528
msgid "Next steps"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:530
msgid ""
"Next you'll create another simple ROS 2 package using the service/client "
"model. Again, you can choose to write it in either :doc:`C++ <./Writing-A-"
"Simple-Cpp-Service-And-Client>` or :doc:`Python <./Writing-A-Simple-Py-"
"Service-And-Client>`."
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:534
msgid "Related content"
msgstr ""

#: ../../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Cpp-Publisher-And-Subscriber.rst:536
msgid ""
"There are several ways you could write a publisher and subscriber in C++; "
"check out the ``minimal_publisher`` and ``minimal_subscriber`` packages in "
"the `ros2/examples <https://github.com/ros2/examples/tree/rolling/rclcpp/"
"topics>`_ repo."
msgstr ""
