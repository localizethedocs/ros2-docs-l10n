# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation jazzy\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:8
msgid "Understanding services"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:10
msgid "**Goal:** Learn about services in ROS 2 using command line tools."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:12
msgid "**Tutorial level:** Beginner"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:14
msgid "**Time:** 10 minutes"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:18
msgid "Contents"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:21
msgid "Background"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:23
msgid ""
"Services are another method of communication for nodes in the ROS graph. "
"Services are based on a call-and-response model versus the publisher-"
"subscriber model of topics. While topics allow nodes to subscribe to data "
"streams and get continual updates, services only provide data when they are "
"specifically called by a client."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:32
msgid "Prerequisites"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:34
msgid ""
"Some concepts mentioned in this tutorial, like :doc:`Nodes <../Understanding-"
"ROS2-Nodes/Understanding-ROS2-Nodes>` and :doc:`Topics <../Understanding-"
"ROS2-Topics/Understanding-ROS2-Topics>`, were covered in previous tutorials "
"in the series."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:36
msgid ""
"You will need the :doc:`turtlesim package <../Introducing-Turtlesim/"
"Introducing-Turtlesim>`."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:38
msgid ""
"As always, don't forget to source ROS 2 in :doc:`every new terminal you open "
"<../Configuring-ROS2-Environment>`."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:41
msgid "Tasks"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:44
msgid "1 Setup"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:45
msgid ""
"Start up the two turtlesim nodes, ``/turtlesim`` and ``/teleop_turtle``."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:47
msgid "Open a new terminal and run:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:49
msgid "$ ros2 run turtlesim turtlesim_node"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:53
msgid "Open another terminal and run:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:55
msgid "$ ros2 run turtlesim turtle_teleop_key"
msgstr "$ ros2 run turtlesim turtle_teleop_key"

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:60
msgid "2 ros2 service list"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:62
msgid ""
"Running the ``ros2 service list`` command in a new terminal will return a "
"list of all the services currently active in the system:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:64
msgid ""
"$ ros2 service list\n"
"/clear\n"
"/kill\n"
"/reset\n"
"/spawn\n"
"/teleop_turtle/describe_parameters\n"
"/teleop_turtle/get_parameter_types\n"
"/teleop_turtle/get_parameters\n"
"/teleop_turtle/list_parameters\n"
"/teleop_turtle/set_parameters\n"
"/teleop_turtle/set_parameters_atomically\n"
"/turtle1/set_pen\n"
"/turtle1/teleport_absolute\n"
"/turtle1/teleport_relative\n"
"/turtlesim/describe_parameters\n"
"/turtlesim/get_parameter_types\n"
"/turtlesim/get_parameters\n"
"/turtlesim/list_parameters\n"
"/turtlesim/set_parameters\n"
"/turtlesim/set_parameters_atomically"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:87
msgid ""
"You will see that both nodes have the same six services with ``parameters`` "
"in their names. Nearly every node in ROS 2 has these infrastructure services "
"that parameters are built off of. There will be more about parameters in the "
"next tutorial. In this tutorial, the parameter services will be omitted from "
"the discussion."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:92
msgid ""
"For now, let's focus on the turtlesim-specific services, ``/clear``, ``/"
"kill``, ``/reset``, ``/spawn``, ``/turtle1/set_pen``, ``/turtle1/"
"teleport_absolute``, and ``/turtle1/teleport_relative``. You may recall "
"interacting with some of these services using rqt in the :doc:`Use "
"turtlesim, ros2, and rqt <../Introducing-Turtlesim/Introducing-Turtlesim>` "
"tutorial."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:97
msgid "3 ros2 service type"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:99
msgid ""
"Services have types that describe how the request and response data of a "
"service is structured. Service types are defined similarly to topic types, "
"except service types have two parts: one message for the request and another "
"for the response."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:102
msgid "To find out the type of a service, use the command:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:104
msgid "$ ros2 service type <service_name>"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:108
msgid ""
"Let's take a look at turtlesim's ``/clear`` service. In a new terminal, "
"enter the command:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:111
msgid ""
"$ ros2 service type /clear\n"
"std_srvs/srv/Empty"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:116
msgid ""
"The ``Empty`` type means the service call sends no data when making a "
"request and receives no data when receiving a response."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:119
msgid "3.1 ros2 service list -t"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:121
msgid ""
"To see the types of all the active services at the same time, you can append "
"the ``--show-types`` option, abbreviated as ``-t``, to the ``list`` command:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:123
msgid ""
"$ ros2 service list -t\n"
"/clear [std_srvs/srv/Empty]\n"
"/kill [turtlesim/srv/Kill]\n"
"/reset [std_srvs/srv/Empty]\n"
"/spawn [turtlesim/srv/Spawn]\n"
"...\n"
"/turtle1/set_pen [turtlesim/srv/SetPen]\n"
"/turtle1/teleport_absolute [turtlesim/srv/TeleportAbsolute]\n"
"/turtle1/teleport_relative [turtlesim/srv/TeleportRelative]\n"
"..."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:137
msgid "4 ros2 service info"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:139
msgid "To see information of a particular service, use the command:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:141
msgid "$ ros2 service info <service_name>"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:145
msgid ""
"This returns the service type and the count of service clients and servers."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:147
msgid ""
"For example, you can find the count of clients and servers for the ``/"
"clear`` service:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:149
msgid ""
"$ ros2 service info /clear\n"
"Type: std_srvs/srv/Empty\n"
"Clients count: 0\n"
"Services count: 1"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:157
msgid "5 ros2 service find"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:159
msgid ""
"If you want to find all the services of a specific type, you can use the "
"command:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:161
msgid "$ ros2 service find <type_name>"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:165
msgid "For example, you can find all the ``Empty`` typed services like this:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:167
msgid ""
"$ ros2 service find std_srvs/srv/Empty\n"
"/clear\n"
"/reset"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:174
msgid "6 ros2 interface show"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:176
msgid ""
"You can call services from the command line, but first you need to know the "
"structure of the input arguments."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:178
msgid "$ ros2 interface show <type_name>"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:182
msgid "Try this on the ``/clear`` service's type, ``Empty``:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:184
msgid ""
"$ ros2 interface show std_srvs/srv/Empty\n"
"---"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:189
msgid ""
"The ``---`` separates the request structure (above) from the response "
"structure (below). But, as you learned earlier, the ``Empty`` type doesn't "
"send or receive any data. So, naturally, its structure is blank."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:193
msgid ""
"Let's introspect a service with a type that sends and receives data, like ``/"
"spawn``. From the results of ``ros2 service list -t``, we know ``/spawn``'s "
"type is ``turtlesim/srv/Spawn``."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:196
msgid ""
"To see the request and response arguments of the ``/spawn`` service, run the "
"command:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:198
msgid ""
"$ ros2 interface show turtlesim/srv/Spawn\n"
"float32 x\n"
"float32 y\n"
"float32 theta\n"
"string name # Optional.  A unique name will be created and returned if this "
"is empty\n"
"---\n"
"string name"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:208
msgid ""
"The information above the ``---`` line tells us the arguments needed to call "
"``/spawn``. ``x``, ``y`` and ``theta`` determine the 2D pose of the spawned "
"turtle, and ``name`` is clearly optional."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:211
msgid ""
"The information below the line isn't something you need to know in this "
"case, but it can help you understand the data type of the response you get "
"from the call."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:214
msgid "7 ros2 service call"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:216
msgid ""
"Now that you know what a service type is, how to find a service's type, and "
"how to find the structure of that type's arguments, you can call a service "
"using:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:218
msgid "$ ros2 service call <service_name> <service_type> <arguments>"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:222
msgid ""
"The ``<arguments>`` part is optional. For example, you know that ``Empty`` "
"typed services don't have any arguments:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:225
msgid "$ ros2 service call /clear std_srvs/srv/Empty"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:229
msgid ""
"This command will clear the turtlesim window of any lines your turtle has "
"drawn."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:233
msgid ""
"Now let's spawn a new turtle by calling ``/spawn`` and setting arguments. "
"Input ``<arguments>`` in a service call from the command-line need to be in "
"YAML syntax."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:236
msgid "Enter the command:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:238
msgid ""
"$ ros2 service call /spawn turtlesim/srv/Spawn \"{x: 2, y: 2, theta: 0.2, "
"name: ''}\"\n"
"requester: making request: turtlesim.srv.Spawn_Request(x=2.0, y=2.0, "
"theta=0.2, name='')\n"
"\n"
"response:\n"
"turtlesim.srv.Spawn_Response(name='turtle2')"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:246
msgid ""
"You will get this method-style view of what's happening, and then the "
"service response."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:248
msgid ""
"Your turtlesim window will update with the newly spawned turtle right away:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:253
msgid "8 ros2 service echo"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:255
msgid ""
"To see the data communication between a service client and a service server "
"you can ``echo`` the service using:"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:257
msgid "$ ros2 service echo <service_name | service_type> <arguments>"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:261
msgid ""
"``ros2 service echo`` depends on service introspection of a service client "
"and server, that is disabled by default. To enable it, users must call "
"``configure_introspection`` after creating a service client or server."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:264
msgid ""
"Start up the ``introspection_client`` and ``introspection_service`` service "
"introspection demo."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:266
msgid "$ ros2 launch demo_nodes_cpp introspect_services_launch.py"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:270
msgid ""
"Open another terminal and run the following to enable service introspection "
"for ``introspection_client`` and ``introspection_service``."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:272
msgid ""
"$ ros2 param set /introspection_service service_configure_introspection "
"contents\n"
"$ ros2 param set /introspection_client client_configure_introspection "
"contents"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:277
msgid ""
"Now we are able to see the service communication between "
"``introspection_client`` and ``introspection_service`` via ``ros2 service "
"echo``."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:279
msgid ""
"$ ros2 service echo --flow-style /add_two_ints\n"
" info:\n"
"   event_type: REQUEST_SENT\n"
"   stamp:\n"
"     sec: 1709408301\n"
"     nanosec: 423227292\n"
"   client_gid: [1, 15, 0, 18, 250, 205, 12, 100, 0, 0, 0, 0, 0, 0, 21, 3]\n"
"   sequence_number: 618\n"
" request: [{a: 2, b: 3}]\n"
" response: []\n"
" ---\n"
" info:\n"
"   event_type: REQUEST_RECEIVED\n"
"   stamp:\n"
"     sec: 1709408301\n"
"     nanosec: 423601471\n"
"   client_gid: [1, 15, 0, 18, 250, 205, 12, 100, 0, 0, 0, 0, 0, 0, 20, 4]\n"
"   sequence_number: 618\n"
" request: [{a: 2, b: 3}]\n"
" response: []\n"
" ---\n"
" info:\n"
"   event_type: RESPONSE_SENT\n"
"   stamp:\n"
"     sec: 1709408301\n"
"     nanosec: 423900744\n"
"   client_gid: [1, 15, 0, 18, 250, 205, 12, 100, 0, 0, 0, 0, 0, 0, 20, 4]\n"
"   sequence_number: 618\n"
" request: []\n"
" response: [{sum: 5}]\n"
" ---\n"
" info:\n"
"   event_type: RESPONSE_RECEIVED\n"
"   stamp:\n"
"     sec: 1709408301\n"
"     nanosec: 424153133\n"
"   client_gid: [1, 15, 0, 18, 250, 205, 12, 100, 0, 0, 0, 0, 0, 0, 21, 3]\n"
"   sequence_number: 618\n"
" request: []\n"
" response: [{sum: 5}]\n"
" ---"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:324
msgid "Summary"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:326
msgid ""
"Nodes can communicate using services in ROS 2. Unlike a topic - a one way "
"communication pattern where a node publishes information that can be "
"consumed by one or more subscribers - a service is a request/response "
"pattern where a client makes a request to a node providing the service and "
"the service processes the request and generates a response."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:329
msgid ""
"You generally don't want to use a service for continuous calls; topics or "
"even actions would be better suited."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:331
msgid ""
"In this tutorial you used command line tools to identify, introspect, and "
"call services."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:334
msgid "Next steps"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:336
msgid ""
"In the next tutorial, :doc:`../Understanding-ROS2-Parameters/Understanding-"
"ROS2-Parameters`, you will learn about configuring node settings."
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:339
msgid "Related content"
msgstr ""

#: ../../../source/Tutorials/Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-ROS2-Services.rst:341
msgid ""
"Check out `this tutorial <https://discourse.ubuntu.com/t/call-services-in-"
"ros-2/15261>`_; it's an excellent realistic application of ROS services "
"using a Robotis robot arm."
msgstr ""
