# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation jazzy\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 08:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:6
msgid "Ubuntu (binary)"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:10
msgid "Table of Contents"
msgstr "目次表"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:12
msgid ""
"This page explains how to install ROS 2 on Ubuntu Linux from a pre-built "
"binary package."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:16
msgid ""
"The pre-built binary does not include all ROS 2 packages. All packages in "
"the `ROS base variant <https://ros.org/reps/rep-2001.html#ros-base>`_ are "
"included, and only a subset of packages in the `ROS desktop variant <https://"
"ros.org/reps/rep-2001.html#desktop-variants>`_ are included. The exact list "
"of packages are described by the repositories listed in `this ros2.repos "
"file <https://github.com/ros2/ros2/blob/rolling/ros2.repos>`_."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:20
msgid "There are also :doc:`deb packages <../Ubuntu-Install-Debs>` available."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:23
msgid "System requirements"
msgstr "系統要求"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:25
msgid "We currently support Ubuntu Noble (24.04) 64-bit x86 and 64-bit ARM."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:28
msgid "System setup"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:31
msgid "Set locale"
msgstr ""

#: ../../../source/Installation/_Ubuntu-Set-Locale.rst:1
msgid ""
"Make sure you have a locale which supports ``UTF-8``. If you are in a "
"minimal environment (such as a docker container), the locale may be "
"something minimal like ``POSIX``. We test with the following settings. "
"However, it should be fine if you're using a different UTF-8 supported "
"locale."
msgstr ""

#: ../../../source/Installation/_Ubuntu-Set-Locale.rst:6
msgid ""
"$ locale  # check for UTF-8\n"
"\n"
"$ sudo apt update && sudo apt install locales\n"
"$ sudo locale-gen en_US en_US.UTF-8\n"
"$ sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\n"
"$ export LANG=en_US.UTF-8\n"
"\n"
"$ locale  # verify settings"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:36
msgid "Enable required repositories"
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:1
msgid "You will need to add the ROS 2 apt repository to your system."
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:3
msgid ""
"First ensure that the `Ubuntu Universe repository <https://help.ubuntu.com/"
"community/Repositories/Ubuntu>`_ is enabled."
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:5
msgid ""
"$ sudo apt install software-properties-common\n"
"$ sudo add-apt-repository universe"
msgstr ""
"$ sudo apt install software-properties-common\n"
"$ sudo add-apt-repository universe"

#: ../../../source/Installation/_Apt-Repositories.rst:10
msgid ""
"The `ros-apt-source <https://github.com/ros-infrastructure/ros-apt-source/"
">`_ packages provide keys and apt source configuration for the various ROS "
"repositories."
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:12
msgid ""
"Installing the ros2-apt-source package will configure ROS 2 repositories for "
"your system. Updates to repository configuration will occur automatically "
"when new versions of this package are released to the ROS repositories."
msgstr ""

#: ../../../source/Installation/_Apt-Repositories.rst:15
msgid ""
"$ sudo apt update && sudo apt install curl -y\n"
"$ export ROS_APT_SOURCE_VERSION=$(curl -s https://api.github.com/repos/ros-"
"infrastructure/ros-apt-source/releases/latest | grep -F \"tag_name\" | awk -"
"F\\\" '{print $4}')\n"
"$ curl -L -o /tmp/ros2-apt-source.deb \"https://github.com/ros-"
"infrastructure/ros-apt-source/releases/download/${ROS_APT_SOURCE_VERSION}/"
"ros2-apt-source_${ROS_APT_SOURCE_VERSION}.$(. /etc/os-release && echo "
"${UBUNTU_CODENAME:-${VERSION_CODENAME}})_all.deb\"\n"
"$ sudo dpkg -i /tmp/ros2-apt-source.deb"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:41
msgid "Install prerequisites"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:43
msgid ""
"There are a few packages that must be installed in order to get and unpack "
"the binary release."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:45
msgid "$ sudo apt install tar bzip2 wget -y"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:50
msgid "Install development tools (optional)"
msgstr "安裝開發工具（可選）"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:52
msgid ""
"If you are going to build ROS packages or otherwise do development, you can "
"also install the development tools:"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:54
msgid "$ sudo apt update && sudo apt install ros-dev-tools"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:59
msgid "Install ROS 2"
msgstr "安裝 ROS 2"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:61
msgid "Go to the `releases page <https://github.com/ros2/ros2/releases>`_"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:62
msgid ""
"Download the latest package for Ubuntu; let's assume that it ends up at ``~/"
"Downloads/ros2-package-linux-x86_64.tar.bz2``."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:64
msgid ""
"Note: there may be more than one binary download option which might cause "
"the file name to differ."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:67
msgid "Unpack it:"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:69
msgid ""
"$ mkdir -p ~/ros2_rolling\n"
"$ cd ~/ros2_rolling\n"
"$ tar xf ~/Downloads/ros2-package-linux-x86_64.tar.bz2"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:78
msgid "Install dependencies using rosdep"
msgstr ""

#: ../../../source/Installation/_Apt-Upgrade-Admonition.rst:1
msgid ""
"ROS 2 packages are built on frequently updated Ubuntu systems. It is always "
"recommended that you ensure your system is up to date before installing new "
"packages."
msgstr ""

#: ../../../source/Installation/_Apt-Upgrade-Admonition.rst:4
msgid "$ sudo apt upgrade"
msgstr "$ sudo apt upgrade"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:82
msgid ""
"$ sudo apt update\n"
"$ sudo apt install -y python3-rosdep\n"
"$ sudo rosdep init\n"
"$ rosdep update\n"
"$ rosdep install --from-paths ~/ros2_rolling/ros2-linux/share --ignore-src -"
"y --skip-keys \"cyclonedds fastcdr fastrtps iceoryx_binding_c rmw_connextdds "
"rti-connext-dds-6.0.1 urdfdom_headers\""
msgstr ""

#: ../../../source/Installation/_rosdep_Linux_Mint.rst:1
msgid ""
"**Note**: If you're using a distribution that is based on Ubuntu (like Linux "
"Mint) but does not identify itself as such, you'll get an error message like "
"``Unsupported OS [mint]``. In this case append ``--os=ubuntu:noble`` to the "
"above command."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:93
msgid "Install additional RMW implementations (optional)"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:95
msgid ""
"The default middleware that ROS 2 uses is ``Fast DDS``, but the middleware "
"(RMW) can be replaced at runtime. See the :doc:`guide <../../How-To-Guides/"
"Working-with-multiple-RMW-implementations>` on how to work with multiple "
"RMWs."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:99
msgid "Setup environment"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:101
msgid "Set up your environment by sourcing the following file."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:103
msgid "$ . ~/ros2_rolling/ros2-linux/setup.bash"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:109
msgid ""
"Replace ``.bash`` with your shell if you're not using bash. Possible values "
"are: ``setup.bash``, ``setup.sh``, ``setup.zsh``."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:113
msgid "Try some examples"
msgstr "嘗試一些範例"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:115
msgid "In one terminal, source the setup file and then run a C++ ``talker``:"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:117
msgid ""
"$ . ~/ros2_rolling/ros2-linux/setup.bash\n"
"$ ros2 run demo_nodes_cpp talker"
msgstr ""
"$ . ~/ros2_rolling/ros2-linux/setup.bash\n"
"$ ros2 run demo_nodes_cpp talker"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:122
msgid ""
"In another terminal source the setup file and then run a Python ``listener``:"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:124
msgid ""
"$ . ~/ros2_rolling/ros2-linux/setup.bash\n"
"$ ros2 run demo_nodes_py listener"
msgstr ""
"$ . ~/ros2_rolling/ros2-linux/setup.bash\n"
"$ ros2 run demo_nodes_py listener"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:129
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages and "
"the ``listener`` saying ``I heard`` those messages. This verifies both the C+"
"+ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:134
msgid "Next steps"
msgstr "下一步"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:136
msgid ""
"Continue with the :doc:`tutorials and demos <../../Tutorials>` to configure "
"your environment, create your own workspace and packages, and learn ROS 2 "
"core concepts."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:139
msgid "Troubleshoot"
msgstr "疑難排解"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:141
msgid ""
"Troubleshooting techniques can be found :doc:`here <../../How-To-Guides/"
"Installation-Troubleshooting>`."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:144
msgid "Uninstall"
msgstr "解除安裝"

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:146
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not "
"sourcing the workspace's ``setup`` file. This way, your environment will "
"behave as though there is no Rolling install on your system."
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:149
msgid ""
"If you're also trying to free up space, you can delete the entire workspace "
"directory with:"
msgstr ""

#: ../../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:151
msgid "$ rm -rf ~/ros2_rolling"
msgstr "$ rm -rf ~/ros2_rolling"
