# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Robotics
# This file is distributed under the same license as the ros2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ros2 documentation crystal\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Concepts/About-Middleware-Implementations.rst:3
msgid "About ROS 2 middleware implementations"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:7
msgid ""
"ROS middleware implementations are sets of |packages| that implement some of "
"the internal ROS interfaces, e.g. the ``rmw``, ``rcl``, and ``rosidl`` |"
"APIs|."
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:10
msgid "Common Packages for DDS Middleware Packages"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:12
msgid ""
"All of the current ROS middleware implementations are based on full or "
"partial DDS implementations. For example, there is a middleware "
"implementation that uses RTI's Connext DDS and an implementation which uses "
"eProsima's Fast-RTPS. Because of this, there are some shared |packages| "
"amongst most DDS based middleware implementations."
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:16
msgid ""
"In the `ros2/rosidl_dds <https://github.com/ros2/rosidl_dds>`_ repository on "
"|GitHub|_, there is the following |package|:"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:18
msgid ""
"``rosidl_generator_dds_idl``: provides tools to generate DDS ``.idl`` files "
"from ``rosidl`` files, e.g. ``.msg`` files, ``.srv`` files, etc."
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:20
msgid ""
"The ``rosidl_generator_dds_idl`` |package| generates a DDS ``.idl`` file for "
"each ``rosidl`` file, e.g. ``.msg`` file, defined by |packages| containing "
"messages. Currently DDS based ROS middleware implementations make use of "
"this generator's output ``.idl`` files to generate pre-compiled type support "
"that is vendor specific."
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:24
msgid "Structure of ROS Middleware Implementations"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:26
msgid ""
"A ROS middleware implementation is typically made up of a few |packages| in "
"a single repository:"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:28
msgid ""
"``<implementation_name>_cmake_module``: contains CMake Module for "
"discovering and exposing required dependencies"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:29
msgid ""
"``rmw_<implementation_name>_<language>``: contains the implementation of the "
"``rmw`` |API| in a particular language, typically C++"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:30
msgid ""
"``rosidl_typesupport_<implementation_name>_<language>``: contains tools to "
"generate static type support code for ``rosidl`` files, tailored to the "
"implementation in a particular language, typically C or C++"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:32
msgid ""
"The ``<implementation_name>_cmake_module`` |package| contains any CMake "
"Modules and functions needed to find the supporting dependencies for the "
"middleware implementation. In the case of ``connext_cmake_module`` it has "
"CMake Modules for finding the RTI Connext implementation in different places "
"on the system since it does not ship with a CMake Module itself. Not all "
"repositories will have a package like this, for example eProsima's Fast-RTPS "
"provides a CMake module and so no additional one is required."
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:36
msgid ""
"The ``rmw_<implementation_name>_<language>`` |package| implements the "
"``rmw`` C |API| in a particular language. The implementation itself can be C+"
"+, it just must expose the header's symbols as ``extern \"C\"`` so that C "
"applications can link against it."
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:39
msgid ""
"The ``rosidl_typesupport_<implementation_name>_<language>`` |package| "
"provides a generator which generates DDS code in a particular language. This "
"is done using the ``.idl`` files generated by the "
"``rosidl_generator_dds_idl`` |package| and the DDS IDL code generator "
"provided by the DDS vendor. It also generates code for converting ROS "
"message structures to and from DDS message structures. This generator is "
"also responsible for creating a shared library for the message package it is "
"being used in, which is specific to the messages in the message package and "
"to the DDS vendor being used."
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:44
msgid ""
"As mentioned above, the ``rosidl_typesupport_introspection_<language>`` may "
"be used instead of a vendor specific type support package if an rmw "
"implementation supports runtime interpretation of messages. This ability to "
"programmatically send and receive types over topics without generating code "
"beforehand is achieved by supporting the `DDS X-Types Dynamic Data standard "
"<http://www.omg.org/spec/DDS-XTypes>`_. As such, rmw implementations may "
"provide support for the X-Types standard, and/or provide a package for type "
"support generated at compile time specific to their DDS implementation."
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:48
msgid ""
"As an example of an rmw implementation repository, the ``opensplice`` ROS "
"middleware implementation lives on |GitHub|_ at `ros2/rmw_opensplice "
"<https://github.com/ros2/rmw_opensplice>`_ and has these |packages|:"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:50
msgid "``opensplice_cmake_module``"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:51
msgid "``rmw_opensplice_cpp``"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:52
msgid "``rosidl_typesupport_opensplice_c``"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:53
msgid "``rosidl_typesupport_opensplice_cpp``"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:55
msgid ""
"In addition to the ``opensplice`` repository of |packages|, there is the "
"``connext`` implementation on |GitHub|_ at `ros2/rmw_connext <https://github."
"com/ros2/rmw_connext>`_. It contains mostly the same |packages|, but it "
"additionally contains a |package| to support the type support introspection "
"using the DDS X-Types standard."
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:58
msgid ""
"The rmw implementation using ``FastRTPS`` is on |GitHub|_ at `eProsima/ROS-"
"RMW-Fast-RTPS-cpp <https://github.com/eProsima/ROS-RMW-Fast-RTPS-cpp>`_. As "
"``FastRTPS`` currently only supports the type support introspection, there "
"is no vendor specific type support package in this repository."
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:61
msgid ""
"To learn more about what is required to create a new middleware "
"implementation for ROS see this page:"
msgstr ""

#: ../../../source/Concepts/About-Middleware-Implementations.rst:65
msgid ""
"TODO: Link to more detailed middleware implementation docs and/or tutorial."
msgstr ""
