# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation galactic\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Concepts/About-Cross-Compilation.rst:2
msgid "About Cross-compilation"
msgstr ""

#: ../../../source/Concepts/About-Cross-Compilation.rst:5
msgid "Overview"
msgstr "概覽"

#: ../../../source/Concepts/About-Cross-Compilation.rst:10
msgid ""
"Open Robotics provides pre-built ROS 2 packages for multiple platforms, but "
"a number of developers still rely on `cross-compilation <https://en."
"wikipedia.org/wiki/Cross_compiler>`__ for different reasons such as:"
msgstr ""

#: ../../../source/Concepts/About-Cross-Compilation.rst:8
msgid "The development machine does not match the target system."
msgstr ""

#: ../../../source/Concepts/About-Cross-Compilation.rst:9
msgid ""
"Tuning the build for specific core architecture (e.g. setting -mcpu=cortex-"
"a53 -mfpu=neon-fp-armv8 when building for Raspberry Pi3)."
msgstr ""

#: ../../../source/Concepts/About-Cross-Compilation.rst:10
msgid ""
"Targeting a different file systems other than the ones supported by the pre-"
"built images released by Open Robotics."
msgstr ""

#: ../../../source/Concepts/About-Cross-Compilation.rst:13
msgid "How does it work ?"
msgstr ""

#: ../../../source/Concepts/About-Cross-Compilation.rst:15
msgid ""
"Cross-compiling simple software (e.g. no dependencies on external libraries) "
"is relatively simple and only requiring a cross-compiler toolchain to be "
"used instead of the native toolchain."
msgstr ""

#: ../../../source/Concepts/About-Cross-Compilation.rst:17
msgid ""
"There are a number of factors which make this process more complex: - The "
"software being built must support the target architecture. Architecture "
"specific code must be properly isolated and enabled during the build "
"according to the target architecture. Examples include assembly code. - All "
"dependencies (e.g. libraries) must be present, either as pre-built packages "
"or also cross-compiled before the target software using them is cross-"
"compiled. - When building software stacks (as opposed to standalone "
"software) using build tools (e.g. colcon), it is expected that the build "
"tool provides a mechanism to allow the developer to enable cross-compilation "
"on the underlying build system used by each piece of software in the stack."
msgstr ""

#: ../../../source/Concepts/About-Cross-Compilation.rst:23
msgid "Cross-compiling ROS 2"
msgstr ""

#: ../../../source/Concepts/About-Cross-Compilation.rst:25
msgid ""
"The ROS 2 cross-compile tool is under shared ownership of Open Robotics and "
"ROS Tooling Working Group. It is a Python script that compiles ROS 2 source "
"files for supported target architectures using an emulator in a docker "
"container. Detailed design of the tool can be found on `ROS 2 design "
"<https://design.ros2.org/articles/cc_build_tools.html>`__. Instructions to "
"use the tool are in the `cross_compile package <https://github.com/ros-"
"tooling/cross_compile>`__."
msgstr ""

#: ../../../source/Concepts/About-Cross-Compilation.rst:30
msgid ""
"If you are using an older version, please follow the :doc:`cross-compilation "
"guide <../How-To-Guides/Cross-compilation>`."
msgstr ""
