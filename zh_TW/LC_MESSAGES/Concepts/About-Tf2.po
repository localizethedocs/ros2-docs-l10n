# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation foxy\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Concepts/About-Tf2.rst:4
msgid "About tf2"
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:8
msgid "Table of Contents"
msgstr "目次表"

#: ../../../source/Concepts/About-Tf2.rst:11
msgid "Overview"
msgstr "概覽"

#: ../../../source/Concepts/About-Tf2.rst:13
msgid ""
"tf2 is the transform library, which lets the user keep track of multiple "
"coordinate frames over time. tf2 maintains the relationship between "
"coordinate frames in a tree structure buffered in time and lets the user "
"transform points, vectors, etc. between any two coordinate frames at any "
"desired point in time."
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:19
msgid "Properties of tf2"
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:21
msgid ""
"A robotic system typically has many 3D coordinate frames that change over "
"time, such as a world frame, base frame, gripper frame, head frame, etc. tf2 "
"keeps track of all these frames over time, and allows you to ask questions "
"like:"
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:24
msgid "Where was the head frame relative to the world frame 5 seconds ago?"
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:25
msgid "What is the pose of the object in my gripper relative to my base?"
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:26
msgid "What is the current pose of the base frame in the map frame?"
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:28
msgid ""
"tf2 can operate in a distributed system. This means all the information "
"about the coordinate frames of a robot is available to all ROS 2 components "
"on any computer in the system. tf2 can have every component in your "
"distributed system build its own transform information database or have a "
"central node that gathers and stores all transform information."
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:33
msgid "Tutorials"
msgstr "教學"

#: ../../../source/Concepts/About-Tf2.rst:35
msgid ""
"We created a set of :doc:`tutorials <../Tutorials/Intermediate/Tf2/Tf2-"
"Main>` that walks you through using tf2, step by step. You can get started "
"on the :doc:`introduction to tf2 <../Tutorials/Intermediate/Tf2/Introduction-"
"To-Tf2>` tutorial. For a complete list of all tf2 and tf2-related tutorials "
"check out the :doc:`tutorials <../Tutorials/Intermediate/Tf2/Tf2-Main>` page."
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:39
msgid ""
"There are essentially two main tasks that any user would use tf2 for, "
"listening for transforms and broadcasting transforms."
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:41
msgid ""
"If you want to use tf2 to transform between coordinate frames, your nodes "
"will need to listen for transforms. What you will do is receive and buffer "
"all coordinate frames that are broadcasted in the system, and query for "
"specific transforms between frames. Check out the \"Writing a listener\" "
"tutorial :doc:`(Python) <../Tutorials/Intermediate/Tf2/Writing-A-Tf2-"
"Listener-Py>` :doc:`(C++) <../Tutorials/Intermediate/Tf2/Writing-A-Tf2-"
"Listener-Cpp>` to learn more."
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:45
msgid ""
"To extend the capabilities of a robot, you will need to start broadcasting "
"transforms. Broadcasting transforms means to send out the relative pose of "
"coordinate frames to the rest of the system. A system can have many "
"broadcasters that each provide information about a different part of the "
"robot. Check out the \"Writing a broadcaster\" tutorial :doc:`(Python) <../"
"Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py>` :doc:`(C++) <../"
"Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp>` to learn more."
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:50
msgid ""
"In addition to that, tf2 can broadcast static transforms that do not change "
"over time. This mainly saves storage and lookup time, but also reduces the "
"publishing overhead. You should note that static transforms are published "
"once and assumed to not change, so no history is stored. If you want to "
"define static transforms in your tf2 tree, take a look at the \"Writing a "
"static broadcaster\" :doc:`(Python) <../Tutorials/Intermediate/Tf2/Writing-A-"
"Tf2-Static-Broadcaster-Py>` :doc:`(C++) <../Tutorials/Intermediate/Tf2/"
"Writing-A-Tf2-Static-Broadcaster-Cpp>` tutorial."
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:55
msgid ""
"You can also learn how to add fixed and dynamic frames to your tf2 tree in "
"the \"Adding a frame\" :doc:`(Python) <../Tutorials/Intermediate/Tf2/Adding-"
"A-Frame-Py>` :doc:`(C++) <../Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp>` "
"tutorial."
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:57
msgid ""
"Once you are finished with the basic tutorials, you can move on to learn "
"about tf2 and time. The tf2 and time tutorial :doc:`(Python) <../Tutorials/"
"Intermediate/Tf2/Learning-About-Tf2-And-Time-Py>` :doc:`(C++) <../Tutorials/"
"Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp>` teaches the basic "
"principles of tf2 and time. The advanced tutorial about tf2 and time :doc:"
"`(Python) <../Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py>` :doc:`(C+"
"+) <../Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp>` teaches the "
"principles of time traveling with tf2."
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:62
msgid "Paper"
msgstr ""

#: ../../../source/Concepts/About-Tf2.rst:64
msgid ""
"There is a paper on tf2 presented at TePRA 2013: `tf: The transform library "
"<https://ieeexplore.ieee.org/abstract/document/6556373>`_."
msgstr ""
