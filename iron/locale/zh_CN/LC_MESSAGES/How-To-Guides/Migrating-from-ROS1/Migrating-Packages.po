# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation iron\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:2
msgid "Migrating Packages"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:6
msgid "Table of Contents"
msgstr "目录"

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:8
msgid "There are two different kinds of package migrations:"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:10
msgid ""
"Migrating the source code of an existing package from ROS 1 to ROS 2 with "
"the intent that a significant part of the source code will stay the same or "
"at least similar. An example for this is `pluginlib <https://github.com/ros/"
"pluginlib>`_ where the source code is maintained in different branches "
"within the same repository and common patches can be ported between those "
"branches when necessary."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:12
msgid ""
"Implementing the same or similar functionality of a ROS 1 package for ROS 2 "
"but with the assumption that the source code will be significantly "
"different. An example for this is `roscpp <https://github.com/ros/ros_comm/"
"tree/melodic-devel/clients/roscpp>`_ in ROS 1 and `rclcpp <https://github."
"com/ros2/rclcpp/tree/rolling/rclcpp>`_ in ROS 2 which are separate "
"repositories and don't share any code."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:16
msgid "Prerequisites"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:18
msgid ""
"Before being able to migrate a ROS 1 package to ROS 2 all of its "
"dependencies must be available in ROS 2."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:21
msgid "Package.xml format version"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:23
msgid ""
"ROS 2 only supports ``package.xml`` format versions 2 and higher. If your "
"package's ``package.xml`` uses format 1, then update it using the :doc:"
"`Package.xml format 1 to 2 migration guide <./Migrating-Package-XML>`."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:27
msgid "Dependency names"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:29
msgid ""
"Dependency names that come from :doc:`rosdep <../../Tutorials/Intermediate/"
"Rosdep>` should not need to change, as those are shared across ROS 1 and ROS "
"2."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:31
msgid ""
"Some packages released into ROS might have different names in ROS 2 so the "
"dependencies might need to be updated accordingly."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:34
msgid "Metapackages"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:36
msgid ""
"ROS 2 doesn't have a special package type for metapackages. Metapackages can "
"still exist as regular packages that only contain runtime dependencies. When "
"migrating metapackages from ROS 1, simply remove the ``<metapackage />`` tag "
"in your package manifest. See :doc:`Using variants <../Using-Variants>` for "
"more information on metapackages/variants."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:42
msgid "Licensing"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:44
msgid ""
"In ROS 1 our recommended license was the `3-Clause BSD License <https://"
"opensource.org/licenses/BSD-3-Clause>`__. In ROS 2 our recommended license "
"is the `Apache 2.0 License <https://www.apache.org/licenses/LICENSE-2.0>`__."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:47
msgid ""
"For any new project we recommend using the Apache 2.0 License, whether ROS 1 "
"or ROS 2."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:49
msgid ""
"However, when migrating code from ROS 1 to ROS 2 we cannot simply change the "
"license. The existing license must be preserved for any preexisting "
"contributions."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:52
msgid ""
"To that end if a package is being migrated we recommend keeping the existing "
"license and continuing to contribute to that package under the existing OSI "
"license, which we expect to be the BSD license for core elements."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:54
msgid "This will keep things clear and easy to understand."
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:57
msgid "Changing the License"
msgstr ""

#: ../../../source/How-To-Guides/Migrating-from-ROS1/Migrating-Packages.rst:59
msgid ""
"It is possible to change the license, however you will need to contact all "
"the contributors and get permission. For most packages this is likely to be "
"a significant effort and not worth considering. If the package has a small "
"set of contributors then this may be feasible."
msgstr ""
