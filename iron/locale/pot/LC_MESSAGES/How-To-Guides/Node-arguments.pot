# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation iron\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/How-To-Guides/Node-arguments.rst:8
msgid "Passing ROS arguments to nodes via the command-line"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:13
msgid "Table of Contents"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:15
msgid ""
"All ROS nodes take a set of arguments that allow various properties to be "
"reconfigured. Examples include configuring the name/namespace of the node, "
"topic/service names used, and parameters on the node. All ROS-specific "
"arguments have to be specified after a ``--ros-args`` flag:"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:20
msgid "ros2 run my_package node_executable --ros-args ..."
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:25
msgid ""
"For more details, see `this design doc <https://design.ros2.org/articles/"
"ros_command_line_arguments.html>`__."
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:28
msgid "Name remapping"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:30
msgid ""
"Names within a node (e.g. topics/services) can be remapped using the syntax "
"``-r <old name>:=<new name>``. The name/namespace of the node itself can be "
"remapped using ``-r __node:=<new node name>`` and ``-r __ns:=<new node "
"namespace>``."
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:34
msgid ""
"Note that these remappings are \"static\" remappings, in that they apply for "
"the lifetime of the node. \"Dynamic\" remapping of names after nodes have "
"been started is not yet supported."
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:37
msgid ""
"See `this design doc <https://design.ros2.org/articles/static_remapping."
"html>`__ for more details on remapping arguments (not all functionality is "
"available yet)."
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:40
msgid "Example"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:42
msgid ""
"The following invocation will cause the ``talker`` node to be started under "
"the node name ``my_talker``, publishing on the topic named ``my_topic`` "
"instead of the default of ``chatter``. The namespace, which must start with "
"a forward slash, is set to ``/demo``, which means that topics are created in "
"that namespace (``/demo/my_topic``), as opposed to globally (``/my_topic``)."
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:45
msgid ""
"ros2 run demo_nodes_cpp talker --ros-args -r __ns:=/demo -r __node:"
"=my_talker -r chatter:=my_topic"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:50
msgid "Passing remapping arguments to specific nodes"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:52
msgid ""
"If multiple nodes are being run within a single process (e.g. using :doc:"
"`Composition <../Concepts/Intermediate/About-Composition>`), remapping "
"arguments can be passed to a specific node using its name as a prefix. For "
"example, the following will pass the remapping arguments to the specified "
"nodes:"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:55
msgid ""
"ros2 run composition manual_composition --ros-args -r talker:__node:"
"=my_talker -r listener:__node:=my_listener"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:60
msgid ""
"The following example will both change the node name and remap a topic (node "
"and namespace changes are always applied *before* topic remapping):"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:62
msgid ""
"ros2 run composition manual_composition --ros-args -r talker:__node:"
"=my_talker -r my_talker:chatter:=my_topic -r listener:__node:=my_listener -r "
"my_listener:chatter:=my_topic"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:68
msgid "Logger configuration"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:70
msgid ""
"See ``--log-level`` argument usage in :doc:`the logging page <../Tutorials/"
"Demos/Logging-and-logger-configuration>`."
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:73
msgid "Parameters"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:78
msgid "Setting parameters directly from the command line"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:80
msgid ""
"You can set parameters directly from the command line using the following "
"syntax:"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:82
msgid ""
"ros2 run package_name executable_name --ros-args -p param_name:=param_value"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:86
msgid "As an example, you can run:"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:88
msgid ""
"ros2 run demo_nodes_cpp parameter_blackboard --ros-args -p some_int:=42 -p "
"\"a_string:=Hello world\" -p \"some_lists.some_integers:=[1, 2, 3, 4]\" -p "
"\"some_lists.some_doubles:=[3.14, 2.718]\""
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:92
#: ../../../source/How-To-Guides/Node-arguments.rst:135
msgid "Other nodes will be able to retrieve the parameter values, e.g.:"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:94
#: ../../../source/How-To-Guides/Node-arguments.rst:137
msgid ""
"$ ros2 param list parameter_blackboard\n"
"a_string\n"
"qos_overrides./parameter_events.publisher.depth\n"
"qos_overrides./parameter_events.publisher.durability\n"
"qos_overrides./parameter_events.publisher.history\n"
"qos_overrides./parameter_events.publisher.reliability\n"
"some_int\n"
"some_lists.some_doubles\n"
"some_lists.some_integers\n"
"use_sim_time"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:108
msgid "Setting parameters from YAML files"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:110
msgid "Parameters can be set from the command-line in the form of yaml files."
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:112
msgid ""
"`See here <https://github.com/ros2/rcl/tree/rolling/"
"rcl_yaml_param_parser>`__ for examples of the yaml file syntax."
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:114
msgid "As an example, save the following as ``demo_params.yaml``:"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:116
msgid ""
"parameter_blackboard:\n"
"    ros__parameters:\n"
"        some_int: 42\n"
"        a_string: \"Hello world\"\n"
"        some_lists:\n"
"            some_integers: [1, 2, 3, 4]\n"
"            some_doubles : [3.14, 2.718]"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:126
msgid ""
"Then either declare the parameters within your node with `declare_parameter "
"<http://docs.ros.org/en/rolling/p/rclcpp/generated/classrclcpp_1_1Node."
"html#_CPPv4N6rclcpp4Node17declare_parameterERKNSt6stringERKN6rclcpp14ParameterValueERKN14rcl_interfaces3msg19ParameterDescriptorEb>`__  "
"or `declare_parameters <http://docs.ros.org/en/rolling/p/rclcpp/generated/"
"classrclcpp_1_1Node."
"html#_CPPv4I0EN6rclcpp4Node18declare_parametersENSt6vectorI10ParameterTEERKNSt6stringERKNSt3mapINSt6stringENSt4pairI10ParameterTN14rcl_interfaces3msg19ParameterDescriptorEEEEEb>`__, "
"or `set the node to automatically declare parameters <http://docs.ros.org/en/"
"rolling/p/rclcpp/generated/classrclcpp_1_1NodeOptions."
"html#_CPPv4NK6rclcpp11NodeOptions47automatically_declare_parameters_from_overridesEv>`__ "
"if they were passed in via a command line override."
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:128
msgid "Then run the following:"
msgstr ""

#: ../../../source/How-To-Guides/Node-arguments.rst:130
msgid ""
"ros2 run demo_nodes_cpp parameter_blackboard --ros-args --params-file "
"demo_params.yaml"
msgstr ""
