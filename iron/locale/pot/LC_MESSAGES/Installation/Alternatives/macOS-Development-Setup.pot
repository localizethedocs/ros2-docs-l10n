# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation iron\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-13 06:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:7
msgid "macOS (source)"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:11
msgid "Table of Contents"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:14
msgid "System requirements"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:16
msgid "We currently support macOS Mojave (10.14)."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:19
msgid "System setup"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:22
msgid "Install prerequisites"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:24
msgid "You need the following things installed to build ROS 2:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:28
msgid "**Xcode**"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:30
msgid ""
"If you don't already have it installed, install [Xcode](https://apps.apple."
"com/app/xcode/id497799835)."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:31
msgid ""
"Note: Versions of Xcode later than 11.3.1 can no longer be installed on "
"macOS Mojave, so you will need to install an older version manually, see: "
"https://stackoverflow.com/a/61046761"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:32
msgid ""
"Also, if you don't already have it installed, install the Command Line Tools:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:34
msgid ""
"xcode-select --install\n"
"# This command will not succeed if you have not installed Xcode.app\n"
"sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer\n"
"# If you installed Xcode.app manually, you need to either open it or run:\n"
"sudo xcodebuild -license\n"
"# To accept the Xcode.app license"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:44
msgid ""
"**brew** *(needed to install more stuff; you probably already have this)*:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:47
msgid "Follow installation instructions at http://brew.sh/"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:49
msgid ""
"*Optional*: Check that ``brew`` is happy with your system configuration by "
"running:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:51
msgid "brew doctor"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:55
msgid "Fix any problems that it identifies."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:58
msgid "Use ``brew`` to install more stuff:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:60
msgid ""
"brew install asio assimp bison bullet cmake console_bridge cppcheck \\\n"
"  cunit eigen freetype graphviz opencv openssl orocos-kdl pcre poco \\\n"
"  pyqt@5 python qt@5 sip spdlog osrf/simulation/tinyxml1 tinyxml2"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:67
msgid "Setup some environment variables:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:69
msgid ""
"# Add the openssl dir for DDS-Security\n"
"# if you are using BASH, then replace '.zshrc' with '.bashrc'\n"
"echo \"export OPENSSL_ROOT_DIR=$(brew --prefix openssl)\" >> ~/.zshrc\n"
"\n"
"# Add the Qt directory to the PATH and CMAKE_PREFIX_PATH\n"
"export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:$(brew --prefix qt@5)\n"
"export PATH=$PATH:$(brew --prefix qt@5)/bin"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:80
msgid ""
"Use ``python3 -m pip`` (just ``pip`` may install Python3 or Python2) to "
"install more stuff:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:82
msgid ""
"python3 -m pip install --upgrade pip\n"
"\n"
"python3 -m pip install -U \\\n"
"  --config-settings=\"--global-option=build_ext\" \\\n"
"  --config-settings=\"--global-option=-I$(brew --prefix graphviz)/include/\" "
"\\\n"
"  --config-settings=\"--global-option=-L$(brew --prefix graphviz)/lib/\" \\\n"
"  argcomplete catkin_pkg colcon-common-extensions coverage \\\n"
"  cryptography empy flake8 flake8-blind-except==0.1.1 flake8-builtins \\\n"
"  flake8-class-newline flake8-comprehensions flake8-deprecated \\\n"
"  flake8-docstrings flake8-import-order flake8-quotes \\\n"
"  importlib-metadata jsonschema lark==1.1.1 lxml matplotlib mock mypy==0.931 "
"netifaces \\\n"
"  nose pep8 psutil pydocstyle pydot pygraphviz pyparsing==2.4.7 \\\n"
"  pytest-mock rosdep rosdistro setuptools==59.6.0 vcstool"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:98
msgid ""
"Please ensure that the ``$PATH`` environment variable contains the install "
"location of the binaries (``$(brew --prefix)/bin``)"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:101
msgid ""
"*Optional*: if you want to build the ROS 1<->2 bridge, then you must also "
"install ROS 1:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:104
msgid ""
"Start with the normal install instructions: http://wiki.ros.org/kinetic/"
"Installation/OSX/Homebrew/Source"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:106
msgid ""
"When you get to the step where you call ``rosinstall_generator`` to get the "
"source code, here's an alternate invocation that brings in just the minimum "
"required to produce a useful bridge:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:108
msgid ""
"rosinstall_generator catkin common_msgs roscpp rosmsg --rosdistro kinetic --"
"deps --wet-only --tar > kinetic-ros2-bridge-deps.rosinstall\n"
"wstool init -j8 src kinetic-ros2-bridge-deps.rosinstall"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:114
msgid ""
"Otherwise, just follow the normal instructions, then source the resulting "
"``install_isolated/setup.bash`` before proceeding here to build ROS 2."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:117
msgid "Disable System Integrity Protection (SIP)"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:119
msgid ""
"macOS/OS X versions >=10.11 have System Integrity Protection enabled by "
"default. So that SIP doesn't prevent processes from inheriting dynamic "
"linker environment variables, such as ``DYLD_LIBRARY_PATH``, you'll need to "
"disable it `following these instructions <https://developer.apple.com/"
"library/content/documentation/Security/Conceptual/"
"System_Integrity_Protection_Guide/ConfiguringSystemIntegrityProtection/"
"ConfiguringSystemIntegrityProtection.html>`__."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:123
msgid "Build ROS 2"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:126
msgid "Get ROS 2 code"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:128
msgid "Create a workspace and clone all repos:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:130
msgid ""
"mkdir -p ~/ros2_rolling/src\n"
"cd ~/ros2_rolling\n"
"vcs import --input https://raw.githubusercontent.com/ros2/ros2/rolling/ros2."
"repos src"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:137
msgid "Install additional RMW implementations (optional)"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:139
msgid ""
"The default middleware that ROS 2 uses is ``Fast DDS``, but the middleware "
"(RMW) can be replaced at build or runtime. See the :doc:`guide <../../How-To-"
"Guides/Working-with-multiple-RMW-implementations>` on how to work with "
"multiple RMWs."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:143
msgid "Build the code in the workspace"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:145
msgid ""
"Run the ``colcon`` tool to build everything (more on using ``colcon`` in :"
"doc:`this tutorial <../../Tutorials/Beginner-Client-Libraries/Colcon-"
"Tutorial>`):"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:147
msgid ""
"cd ~/ros2_rolling/\n"
"colcon build --symlink-install --packages-skip-by-dep python_qt_binding"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:152
msgid ""
"Note: due to an unresolved issue with SIP, Qt@5, and PyQt5, we need to "
"disable ``python_qt_binding`` to have the build succeed. This will be "
"removed when the issue is resolved, see: https://github.com/ros-"
"visualization/python_qt_binding/issues/103"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:156
msgid "Setup environment"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:158
msgid "Source the ROS 2 setup file:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:160
msgid ". ~/ros2_rolling/install/setup.zsh"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:164
msgid ""
"This will automatically set up the environment for any DDS vendors that "
"support was built for."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:167
msgid "Try some examples"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:169
msgid ""
"In one terminal, set up the ROS 2 environment as described above and then "
"run a C++ ``talker``:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:171
msgid "ros2 run demo_nodes_cpp talker"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:175
msgid ""
"In another terminal source the setup file and then run a Python ``listener``:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:177
msgid "ros2 run demo_nodes_py listener"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:181
msgid ""
"You should see the ``talker`` saying that it's ``Publishing`` messages and "
"the ``listener`` saying ``I heard`` those messages. This verifies both the C+"
"+ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:186
msgid "Next steps"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:188
msgid ""
"Continue with the `tutorials and demos <../../Tutorials>` to configure your "
"environment, create your own workspace and packages, and learn ROS 2 core "
"concepts."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:191
msgid "Use the ROS 1 bridge (optional)"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:193
msgid ""
"The ROS 1 bridge can connect topics from ROS 1 to ROS 2 and vice-versa. See "
"the dedicated `documentation <https://github.com/ros2/ros1_bridge/blob/"
"master/README.md>`__ on how to build and use the ROS 1 bridge."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:197
msgid "Stay up to date"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:199
msgid ""
"See :doc:`../Maintaining-a-Source-Checkout` to periodically refresh your "
"source installation."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:202
msgid "Troubleshoot"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:204
msgid ""
"Troubleshooting techniques can be found :ref:`here <macOS-troubleshooting>`."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:207
msgid "Uninstall"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:209
msgid ""
"If you installed your workspace with colcon as instructed above, "
"\"uninstalling\" could be just a matter of opening a new terminal and not "
"sourcing the workspace's ``setup`` file. This way, your environment will "
"behave as though there is no Rolling install on your system."
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:212
msgid ""
"If you're also trying to free up space, you can delete the entire workspace "
"directory with:"
msgstr ""

#: ../../../source/Installation/Alternatives/macOS-Development-Setup.rst:214
msgid "rm -rf ~/ros2_rolling"
msgstr ""
